{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Unity",
				"UnityEngine"
			],
			[
				"UniLua",
				"UniLua"
			],
			[
				"game",
				"gameobject"
			],
			[
				"Exception",
				"LuaException"
			],
			[
				"Excep",
				"Exception"
			],
			[
				"Title",
				"TitleScene"
			],
			[
				"ON",
				"OnExit"
			],
			[
				"over",
				"override"
			],
			[
				"Challen",
				"Challenge_List_Item"
			],
			[
				"gameb",
				"GameObject"
			],
			[
				"Col",
				"Color"
			],
			[
				"Pa",
				"Param"
			],
			[
				"quest",
				"questinfo"
			],
			[
				"Comm",
				"CommonUI"
			],
			[
				"Messa",
				"Message"
			],
			[
				"Message",
				"MessageManager"
			],
			[
				"Ye",
				"Yes"
			],
			[
				"Waitfo",
				"WaitForEndOfFrame"
			],
			[
				"Play",
				"PlayerPrefs"
			],
			[
				"m_cDLBtn1",
				"m_cDLBtn1Update"
			],
			[
				"Downl",
				"Download_all"
			],
			[
				"DL_QU",
				"DL_QUIT1"
			],
			[
				"Scen",
				"Scene"
			],
			[
				"Scene",
				"SceneManager"
			],
			[
				"el",
				"else"
			],
			[
				"Globald",
				"GlobalDataManager"
			],
			[
				"Par",
				"Param"
			],
			[
				"Netwo",
				"NetworkManager"
			],
			[
				"Mess",
				"Message"
			],
			[
				"Open",
				"OpenDialog"
			],
			[
				"Downloadf",
				"DownloadFinishModel"
			],
			[
				"ui_down",
				"UI_DownLoad_All"
			],
			[
				"label",
				"label_num"
			],
			[
				"iconn",
				"icon_num"
			],
			[
				"rewa",
				"rewards"
			],
			[
				"re",
				"rewards"
			],
			[
				"Chan",
				"ChangeScene"
			],
			[
				"Vip",
				"VipRewardTemplate"
			],
			[
				"DownloadLis",
				"DownloadListModel"
			],
			[
				"Resources_",
				"Resources_CN/UI/Prefabs/UI_Download"
			],
			[
				"zo",
				"zero"
			],
			[
				"local",
				"localPosition"
			],
			[
				"Resources_CN",
				"Resources_CN/UI/Prefabs/PVP_MainBG"
			],
			[
				"reques",
				"requestCompleteNum"
			],
			[
				"m_cdlold",
				"m_cDLOldTittle"
			],
			[
				"m_cDLold",
				"m_cDLOldBg"
			],
			[
				"m_cdlbtn",
				"m_cDLBtn1"
			],
			[
				"ye",
				"yield"
			],
			[
				"Front",
				"FrontalCollider"
			],
			[
				"Com",
				"CommonUI"
			],
			[
				"Gloa",
				"GlobalDataManager"
			],
			[
				"Reques",
				"RequestAsset"
			],
			[
				"Ext",
				"ExternalResources"
			],
			[
				"filenam",
				"filenames"
			],
			[
				"filena",
				"filenames"
			],
			[
				"unit",
				"unity3d"
			],
			[
				"Unit",
				"UnityEngine"
			],
			[
				"Weap",
				"WeaponType"
			],
			[
				"Attack",
				"Attacker"
			],
			[
				"cat",
				"categoryId"
			],
			[
				"Pvpai",
				"Pvpai"
			],
			[
				"Tick",
				"Ticks"
			],
			[
				"Common",
				"Common_msg"
			],
			[
				"pvp",
				"pvp_deck"
			],
			[
				"loc",
				"localPosition"
			],
			[
				"pvpd",
				"Pvpdeck"
			],
			[
				"forea",
				"foreach"
			],
			[
				"Se",
				"Serializable"
			],
			[
				"Lead",
				"LeaderCard"
			],
			[
				"camera",
				"camera_cha"
			],
			[
				"Hash",
				"Hash"
			],
			[
				"Move",
				"MoveFrom"
			],
			[
				"Pvpdeck",
				"Pvpdeck"
			],
			[
				"Oug",
				"OutGameManager"
			],
			[
				"Out",
				"OutGameManager"
			],
			[
				"Wait",
				"WaitForFixedUpdate"
			],
			[
				"m_clabelra",
				"m_cLabelRankNow"
			],
			[
				"Sc",
				"ScaleFrom"
			],
			[
				"tr",
				"true"
			],
			[
				"Serializ",
				"SerializeField"
			],
			[
				"next",
				"next_wait"
			],
			[
				"m_clabelr",
				"m_cLabelRankNow"
			],
			[
				"m_crank",
				"m_cRankUpParent"
			],
			[
				"globa",
				"GlobalDataManager"
			],
			[
				"lab",
				"labelTime1"
			],
			[
				"labl",
				"labelTime2"
			],
			[
				"labelt",
				"labelTime1"
			],
			[
				"sec",
				"second"
			],
			[
				"Qu",
				"Quaternion"
			],
			[
				"Resourc",
				"Resources"
			],
			[
				"Forced",
				"ForcedLookTarget"
			],
			[
				"Return",
				"ReturnPolarFromForced"
			],
			[
				"Yes",
				"Yes"
			],
			[
				"erro",
				"Error"
			],
			[
				"fiel",
				"fieldCamera"
			],
			[
				"allde",
				"allDead"
			],
			[
				"Chara",
				"CharacterManager"
			],
			[
				"ch",
				"characters"
			],
			[
				"char",
				"characters"
			],
			[
				"Camera",
				"CameraManager"
			],
			[
				"Target",
				"Target"
			],
			[
				"chra",
				"chara"
			],
			[
				"Dir",
				"Dictionary"
			],
			[
				"skill",
				"SKILL_TIME_COST"
			],
			[
				"camer",
				"camera_cha"
			],
			[
				"Oppos",
				"OppositeType"
			],
			[
				"Oppo",
				"OppositeType"
			],
			[
				"defence",
				"defencer"
			],
			[
				"attacker",
				"attackerID"
			],
			[
				"selfpo",
				"selfPos3"
			],
			[
				"actionsk",
				"actionSkillId"
			],
			[
				"chara",
				"chara"
			],
			[
				"Leader",
				"LeaderSkill"
			],
			[
				"len",
				"Length"
			],
			[
				"debu",
				"debug_txt"
			],
			[
				"update",
				"updateActions"
			],
			[
				"Lowes",
				"Lowest"
			],
			[
				"conditionso",
				"conditionSort"
			],
			[
				"conditionsor",
				"conditionSortIndex"
			],
			[
				"va",
				"var1"
			],
			[
				"var",
				"var2"
			],
			[
				"Heightest",
				"HeightestAtk"
			],
			[
				"Lowest",
				"LowestHP"
			],
			[
				"conditionS",
				"conditionSort"
			],
			[
				"conditionSo",
				"conditionSortIndex"
			],
			[
				"en",
				"enum"
			],
			[
				"Log",
				"Log"
			],
			[
				"attack",
				"attackerCharacter"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Assets/App/Scripts/Manager/MyApplaction.cs",
			"settings":
			{
				"buffer_size": 2414,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/Base/LuaScriptMgr.cs",
			"settings":
			{
				"buffer_size": 49602,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/U3DLua/LuaEngine.cs",
			"settings":
			{
				"buffer_size": 1174,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaState.cs",
			"settings":
			{
				"buffer_size": 6774,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaAPI.cs",
			"settings":
			{
				"buffer_size": 36542,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaBaseLib.cs",
			"settings":
			{
				"buffer_size": 11444,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/ToLua.cs",
			"settings":
			{
				"buffer_size": 65927,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaAuxLib.cs",
			"settings":
			{
				"buffer_size": 17289,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/LuaWrap.cs",
			"settings":
			{
				"buffer_size": 1059,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/U3DLua/LuaWrap.cs",
			"settings":
			{
				"buffer_size": 1343,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/NetObjectWrap.cs",
			"settings":
			{
				"buffer_size": 3636,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/Lua.cs",
			"settings":
			{
				"buffer_size": 34443,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/Example/TestBehaviour.cs",
			"settings":
			{
				"buffer_size": 1914,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/KeraLua/Lua.cs",
			"settings":
			{
				"buffer_size": 12201,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "using UnityEngine;\nusing System.Collections;\n\nusing NLua;\n\npublic class ExampleBehaviour : MonoBehaviour {\n\n	string source = @\"\nimport 'System'\nimport 'UnityEngine'\nimport 'Assembly-CSharp'	-- The user-code assembly generated by Unity.\n\nlocal Angle = Vector3.up;\nlocal Speed = 5;\n\nlocal showEnv = false\nlocal envScroll = Vector2.zero\n\nfunction Update()\n	transform:RotateAround(transform.position,Angle,Speed * Time.deltaTime)\n\n	if Input.GetKey(KeyCode.W) then\n		Speed = Speed + 1\n	end\n\n	if Input.GetKey(KeyCode.S) then\n		Speed = Speed - 1\n	end\n\n	if Input.GetKey(KeyCode.A) then\n		Angle.z = Angle.z + 1\n	end\n\n	if Input.GetKey(KeyCode.D) then\n		Angle.z = Angle.z - 1\n	end\n\nend\n\nfunction OnGUI()\n	GUILayout.BeginArea(Rect(10,10,(Screen.width / 2) - 20,Screen.height - 20))\n\n	-- Adding '{ }' to the end of GUI functions satisfies their 'params' argument.\n	GUILayout.Label('[W/S] Speed: ' .. Speed,{ }) \n	GUILayout.Label('[A/D] Rot Angle: ' .. Angle:ToString(),{ })\n\n	GUILayout.EndArea()\n\n	GUILayout.BeginArea(Rect((Screen.width / 2) + 10,10,(Screen.width / 2) - 20,Screen.height - 20))\n\n	if GUILayout.Button('Show Enviroment',{ }) then\n		showEnv = not showEnv\n	end\n\n	if showEnv then\n		envScroll = GUILayout.BeginScrollView(envScroll,{ })\n		for k, v in pairs(_G) do\n			GUILayout.BeginHorizontal({ })\n\n			GUILayout.Label(k,{ })\n			GUILayout.FlexibleSpace()\n			GUILayout.Label(tostring(v),{ })\n\n			GUILayout.EndHorizontal()\n		end\n		GUILayout.EndScrollView()\n	end	\n\n	GUILayout.EndArea()\nend\n\n\";\n\n	Lua env;\n\n	void Awake() {\n		env = new Lua();\n		env.LoadCLRPackage();\n		\n		env[\"this\"] = this; // Give the script access to the gameobject.\n		env[\"transform\"] = transform;\n		\n		//System.Object[] result = new System.Object[0];\n		try {\n			//result = env.DoString(source);\n			env.DoString(source);\n		} catch(NLua.Exceptions.LuaException e) {\n			Debug.LogError(FormatException(e), gameObject);\n		}\n\n	}\n\n	void Start () {\n		Call(\"Start\");\n	}\n	\n	void Update () {\n		Call(\"Update\");\n	}\n\n	void OnGUI() {\n		Call(\"OnGUI\");\n	}\n\n	public System.Object[] Call(string function, params System.Object[] args) {\n		System.Object[] result = new System.Object[0];\n		if(env == null) return result;\n		LuaFunction lf = env.GetFunction(function);\n		if(lf == null) return result;\n		try {\n			// Note: calling a function that does not \n			// exist does not throw an exception.\n			if(args != null) {\n				result = lf.Call(args);\n			} else {\n				result = lf.Call();\n			}\n		} catch(NLua.Exceptions.LuaException e) {\n			Debug.LogError(FormatException(e), gameObject);\n		}\n		return result;\n	}\n\n	public System.Object[] Call(string function) {\n		return Call(function, null);\n	}\n\n	public static string FormatException(NLua.Exceptions.LuaException e) {\n		string source = (string.IsNullOrEmpty(e.Source)) ? \"<no source>\" : e.Source.Substring(0, e.Source.Length - 2);\n		return string.Format(\"{0}\\nLua (at {2})\", e.Message, string.Empty, source);\n	}\n}\n",
			"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/Example/ExampleBehaviour.cs",
			"file_size": 2900,
			"file_write_time": 1418320336000000,
			"settings":
			{
				"buffer_size": 2897,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "using UnityEngine;\nusing System.Collections;\n\n//  UIManager.cs\n//  Author: Lu Zexi\n//  2015-01-17\n\n\n\n//UI Manager\npublic class UIManager : CSingleton<UIManager>\n{\n    public GameObject UIRoot;\n\n    public\n}\n",
			"file": "Assets/App/Scripts/Manager/UIManager.cs",
			"file_size": 198,
			"file_write_time": 1421464143000000,
			"settings":
			{
				"buffer_size": 207,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/lua/Main.lua",
			"settings":
			{
				"buffer_size": 313,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/App/Scripts/lua/Scene/TitleScene.lua",
			"settings":
			{
				"buffer_size": 139,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/ObjectWrap.cs",
			"settings":
			{
				"buffer_size": 9416,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/loadlib.cs",
			"settings":
			{
				"buffer_size": 20682,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/Lua.cs",
			"settings":
			{
				"buffer_size": 34654,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaDLL.cs",
			"settings":
			{
				"buffer_size": 17704,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/Tools/CompilerMain.cs",
			"settings":
			{
				"buffer_size": 2717,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/Tools/LuaCompiler.cs",
			"settings":
			{
				"buffer_size": 3619,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Editor/BindLua.cs",
			"settings":
			{
				"buffer_size": 16398,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/LuaState.cs",
			"settings":
			{
				"buffer_size": 1711,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/KeraLua/LuaState.cs",
			"settings":
			{
				"buffer_size": 409,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/Example/SpawnSphere.cs",
			"settings":
			{
				"buffer_size": 1827,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 1357 files for \"NameFuncPair\"\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/U3DLua/UniLuaEngine.cs:\n   34      }\n   35  \n   36:     public void RegisterLib( string libNname , NameFuncPair[] func )\n   37      {\n   38          //\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaAuxLib.cs:\n    6  	using System.Collections.Generic;\n    7  \n    8: 	public struct NameFuncPair\n    9  	{\n   10  		public string Name;\n   11  		public CSharpFunctionDelegate Func;\n   12  \n   13: 		public NameFuncPair( string name, CSharpFunctionDelegate func )\n   14  		{\n   15  			Name = name;\n   ..\n   40  		void 	L_RequireF( string moduleName, CSharpFunctionDelegate openFunc, bool global );\n   41  		void 	L_OpenLibs();\n   42: 		void 	L_NewLibTable( NameFuncPair[] define );\n   43: 		void	L_NewLib( NameFuncPair[] define );\n   44: 		void 	L_SetFuncs( NameFuncPair[] define, int nup );\n   45  		\n   46  		T 		L_Opt<T>( Func<int,T> f, int n, T def );\n   ..\n  539  		// private static class LibLoadInfo\n  540  		// {\n  541: 		// 	public static List<NameFuncPair> Items;\n  542  \n  543  		// 	static LibLoadInfo()\n  544  		// 	{\n  545: 		// 		Items = new List<NameFuncPair>();\n  546  		// 		Add( \"_G\", LuaState.LuaOpen_Base );\n  547  		// 	}\n  ...\n  549  		// 	private static void Add( string name, CSharpFunctionDelegate loadFunc )\n  550  		// 	{\n  551: 		// 		Items.Add( new NameFuncPair { Name=name, LoadFunc=loadFunc } );\n  552  		// 	}\n  553  		// }\n  ...\n  555  		public void L_OpenLibs()\n  556  		{\n  557: 			NameFuncPair[] define = new NameFuncPair[]\n  558  			{\n  559: 				new NameFuncPair( \"_G\", 				LuaBaseLib.OpenLib  ),\n  560: 				new NameFuncPair( LuaPkgLib.LIB_NAME,	LuaPkgLib.OpenLib 	),\n  561: 				new NameFuncPair( LuaCoroLib.LIB_NAME,	LuaCoroLib.OpenLib  ),\n  562: 				new NameFuncPair( LuaTableLib.LIB_NAME,	LuaTableLib.OpenLib ),\n  563: 				new NameFuncPair( LuaIOLib.LIB_NAME,	LuaIOLib.OpenLib	),\n  564: 				new NameFuncPair( LuaOSLib.LIB_NAME,	LuaOSLib.OpenLib	),\n  565  				// {LUA_OSLIBNAME, luaopen_os},\n  566: 				new NameFuncPair( LuaStrLib.LIB_NAME, 	LuaStrLib.OpenLib   ),\n  567: 				new NameFuncPair( LuaBitLib.LIB_NAME, 	LuaBitLib.OpenLib   ),\n  568: 				new NameFuncPair( LuaMathLib.LIB_NAME, 	LuaMathLib.OpenLib  ),\n  569: 				new NameFuncPair( LuaDebugLib.LIB_NAME, LuaDebugLib.OpenLib ),\n  570: 				new NameFuncPair( LuaFFILib.LIB_NAME,	LuaFFILib.OpenLib	),\n  571: 				new NameFuncPair( LuaEncLib.LIB_NAME,	LuaEncLib.OpenLib	),\n  572  			};\n  573  \n  ...\n  613  		}\n  614  \n  615: 		public void L_NewLibTable( NameFuncPair[] define )\n  616  		{\n  617  			API.CreateTable( 0, define.Length );\n  618  		}\n  619  \n  620: 		public void L_NewLib( NameFuncPair[] define )\n  621  		{\n  622  			L_NewLibTable( define );\n  ...\n  624  		}\n  625  \n  626: 		public void L_SetFuncs( NameFuncPair[] define, int nup )\n  627  		{\n  628  			// TODO: Check Version\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaBaseLib.cs:\n   12  		internal static int OpenLib( ILuaState lua )\n   13  		{\n   14: 			NameFuncPair[] define = new NameFuncPair[]\n   15  			{\n   16: 				new NameFuncPair( \"assert\", 		LuaBaseLib.B_Assert ),\n   17: 				new NameFuncPair( \"collectgarbage\", LuaBaseLib.B_CollectGarbage ),\n   18: 				new NameFuncPair( \"dofile\", 		LuaBaseLib.B_DoFile ),\n   19: 				new NameFuncPair( \"error\", 			LuaBaseLib.B_Error ),\n   20: 				new NameFuncPair( \"ipairs\", 		LuaBaseLib.B_Ipairs ),\n   21: 				new NameFuncPair( \"loadfile\", 		LuaBaseLib.B_LoadFile ),\n   22: 				new NameFuncPair( \"load\", 			LuaBaseLib.B_Load ),\n   23: 				new NameFuncPair( \"loadstring\", 	LuaBaseLib.B_Load ),\n   24: 				new NameFuncPair( \"next\", 			LuaBaseLib.B_Next ),\n   25: 				new NameFuncPair( \"pairs\", 			LuaBaseLib.B_Pairs ),\n   26: 				new NameFuncPair( \"pcall\", 			LuaBaseLib.B_PCall ),\n   27: 				new NameFuncPair( \"print\", 			LuaBaseLib.B_Print ),\n   28: 				new NameFuncPair( \"rawequal\", 		LuaBaseLib.B_RawEqual ),\n   29: 				new NameFuncPair( \"rawlen\", 		LuaBaseLib.B_RawLen ),\n   30: 				new NameFuncPair( \"rawget\", 		LuaBaseLib.B_RawGet ),\n   31: 				new NameFuncPair( \"rawset\", 		LuaBaseLib.B_RawSet ),\n   32: 				new NameFuncPair( \"select\", 		LuaBaseLib.B_Select ),\n   33: 				new NameFuncPair( \"getmetatable\", 	LuaBaseLib.B_GetMetaTable ),\n   34: 				new NameFuncPair( \"setmetatable\", 	LuaBaseLib.B_SetMetaTable ),\n   35: 				new NameFuncPair( \"tonumber\", 		LuaBaseLib.B_ToNumber ),\n   36: 				new NameFuncPair( \"tostring\", 		LuaBaseLib.B_ToString ),\n   37: 				new NameFuncPair( \"type\", 			LuaBaseLib.B_Type ),\n   38: 				new NameFuncPair( \"xpcall\", 		LuaBaseLib.B_XPCall ),\n   39  			};\n   40  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaBitLib.cs:\n   11  		public static int OpenLib( ILuaState lua )\n   12  		{\n   13: 			NameFuncPair[] define = new NameFuncPair[]\n   14  			{\n   15: 				new NameFuncPair( \"arshift\", 	LuaBitLib.B_ArithShift ),\n   16: 				new NameFuncPair( \"band\", 		LuaBitLib.B_And ),\n   17: 				new NameFuncPair( \"bnot\", 		LuaBitLib.B_Not ),\n   18: 				new NameFuncPair( \"bor\", 		LuaBitLib.B_Or ),\n   19: 				new NameFuncPair( \"bxor\", 		LuaBitLib.B_Xor ),\n   20: 				new NameFuncPair( \"btest\", 		LuaBitLib.B_Test ),\n   21: 				new NameFuncPair( \"extract\", 	LuaBitLib.B_Extract ),\n   22: 				new NameFuncPair( \"lrotate\", 	LuaBitLib.B_LeftRotate ),\n   23: 				new NameFuncPair( \"lshift\", 	LuaBitLib.B_LeftShift ),\n   24: 				new NameFuncPair( \"replace\", 	LuaBitLib.B_Replace ),\n   25: 				new NameFuncPair( \"rrotate\", 	LuaBitLib.B_RightRotate ),\n   26: 				new NameFuncPair( \"rshift\", 	LuaBitLib.B_RightShift ),\n   27  			};\n   28  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaCoroLib.cs:\n    9  		public static int OpenLib( ILuaState lua )\n   10  		{\n   11: 			NameFuncPair[] define = new NameFuncPair[]\n   12  			{\n   13: 				new NameFuncPair( \"create\", 	CO_Create	),\n   14: 				new NameFuncPair( \"resume\", 	CO_Resume	),\n   15: 				new NameFuncPair( \"running\", 	CO_Running	),\n   16: 				new NameFuncPair( \"status\", 	CO_Status	),\n   17: 				new NameFuncPair( \"wrap\", 		CO_Wrap		),\n   18: 				new NameFuncPair( \"yield\", 		CO_Yield	),\n   19  			};\n   20  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaDebugLib.cs:\n    8  		public static int OpenLib( ILuaState lua )\n    9  		{\n   10: 			NameFuncPair[] define = new NameFuncPair[]\n   11  			{\n   12: 				new NameFuncPair( \"traceback\", 	DBG_Traceback	),\n   13  			};\n   14  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaEncLib.cs:\n   12  		public static int OpenLib( ILuaState lua )\n   13  		{\n   14: 			var define = new NameFuncPair[]\n   15  			{\n   16: 				new NameFuncPair( \"encode\", ENC_Encode ),\n   17: 				new NameFuncPair( \"decode\", ENC_Decode ),\n   18  			};\n   19  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaFFILib.cs:\n   14  		public static int OpenLib( ILuaState lua )\n   15  		{\n   16: 			var define = new NameFuncPair[]\n   17  			{\n   18: 				new NameFuncPair( \"clear_assembly_list\", FFI_ClearAssemblyList ),\n   19: 				new NameFuncPair( \"add_assembly\", FFI_AddAssembly ),\n   20  \n   21: 				new NameFuncPair( \"clear_using_list\", FFI_ClearUsingList ),\n   22: 				new NameFuncPair( \"using\", FFI_Using ),\n   23  \n   24: 				new NameFuncPair( \"parse_signature\", FFI_ParseSignature ),\n   25  \n   26: 				new NameFuncPair( \"get_type\", FFI_GetType ),\n   27: 				new NameFuncPair( \"get_constructor\", FFI_GetConstructor ),\n   28: 				new NameFuncPair( \"get_static_method\", FFI_GetStaticMethod ),\n   29: 				new NameFuncPair( \"get_method\", FFI_GetMethod ),\n   30: 				new NameFuncPair( \"call_method\", FFI_CallMethod ),\n   31  \n   32: 				new NameFuncPair( \"get_field\", FFI_GetField ),\n   33: 				new NameFuncPair( \"get_field_value\", FFI_GetFieldValue ),\n   34: 				new NameFuncPair( \"set_field_value\", FFI_SetFieldValue ),\n   35  \n   36: 				new NameFuncPair( \"get_prop\", FFI_GetProp ),\n   37: 				new NameFuncPair( \"get_static_prop\", FFI_GetStaticProp ),\n   38: 				new NameFuncPair( \"get_prop_value\", FFI_GetPropValue ),\n   39: 				new NameFuncPair( \"set_prop_value\", FFI_SetPropValue ),\n   40  \n   41: 				// new NameFuncPair( \"call_constructor\", FFI_CallConstructor ),\n   42  			};\n   43  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaIOLib.cs:\n   11  		public static int OpenLib( ILuaState lua )\n   12  		{\n   13: 			NameFuncPair[] define = new NameFuncPair[]\n   14  			{\n   15: 				new NameFuncPair( \"close\", 		IO_Close ),\n   16: 				new NameFuncPair( \"flush\", 		IO_Flush ),\n   17: 				new NameFuncPair( \"input\", 		IO_Input ),\n   18: 				new NameFuncPair( \"lines\", 		IO_Lines ),\n   19: 				new NameFuncPair( \"open\", 		IO_Open ),\n   20: 				new NameFuncPair( \"output\", 	IO_Output ),\n   21: 				new NameFuncPair( \"popen\", 		IO_Popen ),\n   22: 				new NameFuncPair( \"read\", 		IO_Read ),\n   23: 				new NameFuncPair( \"tmpfile\", 	IO_Tmpfile ),\n   24: 				new NameFuncPair( \"type\", 		IO_Type ),\n   25: 				new NameFuncPair( \"write\", 		IO_Write ),\n   26  			};\n   27  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaMathLib.cs:\n   17  		public static int OpenLib( ILuaState lua )\n   18  		{\n   19: 			NameFuncPair[] define = new NameFuncPair[]\n   20  			{\n   21: 				new NameFuncPair( \"abs\",   		Math_Abs ),\n   22: 				new NameFuncPair( \"acos\",  		Math_Acos ),\n   23: 				new NameFuncPair( \"asin\",  		Math_Asin ),\n   24: 				new NameFuncPair( \"atan2\", 		Math_Atan2 ),\n   25: 				new NameFuncPair( \"atan\",  		Math_Atan ),\n   26: 				new NameFuncPair( \"ceil\",  		Math_Ceil ),\n   27: 				new NameFuncPair( \"cosh\",  		Math_Cosh ),\n   28: 				new NameFuncPair( \"cos\",   		Math_Cos ),\n   29: 				new NameFuncPair( \"deg\",   		Math_Deg ),\n   30: 				new NameFuncPair( \"exp\",   		Math_Exp ),\n   31: 				new NameFuncPair( \"floor\", 		Math_Floor ),\n   32: 				new NameFuncPair( \"fmod\",  		Math_Fmod ),\n   33: 				new NameFuncPair( \"frexp\", 		Math_Frexp ),\n   34: 				new NameFuncPair( \"ldexp\", 		Math_Ldexp ),\n   35: 				new NameFuncPair( \"log10\", 		Math_Log10 ),\n   36: 				new NameFuncPair( \"log\",   		Math_Log ),\n   37: 				new NameFuncPair( \"max\",   		Math_Max ),\n   38: 				new NameFuncPair( \"min\",   		Math_Min ),\n   39: 				new NameFuncPair( \"modf\",  		Math_Modf ),\n   40: 				new NameFuncPair( \"pow\",   		Math_Pow ),\n   41: 				new NameFuncPair( \"rad\",   		Math_Rad ),\n   42: 				new NameFuncPair( \"random\",     Math_Random ),\n   43: 				new NameFuncPair( \"randomseed\", Math_RandomSeed ),\n   44: 				new NameFuncPair( \"sinh\", 		Math_Sinh ),\n   45: 				new NameFuncPair( \"sin\",   		Math_Sin ),\n   46: 				new NameFuncPair( \"sqrt\",  		Math_Sqrt ),\n   47: 				new NameFuncPair( \"tanh\",   	Math_Tanh ),\n   48: 				new NameFuncPair( \"tan\",   		Math_Tan ),\n   49  			};\n   50  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaOsLib.cs:\n   10  		public static int OpenLib( ILuaState lua )\n   11  		{\n   12: 			NameFuncPair[] define = new NameFuncPair[]\n   13  			{\n   14  #if !UNITY_WEBPLAYER\n   15: 				new NameFuncPair(\"clock\", 	OS_Clock),\n   16  #endif\n   17  			};\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaPkgLib.cs:\n   52  		public static int OpenLib( ILuaState lua )\n   53  		{\n   54: 			// NameFuncPair[] define = new NameFuncPair[]\n   55  			// {\n   56: 			// 	new NameFuncPair( \"module\", PKG_Module ),\n   57  			// };\n   58  \n   ..\n   65  			\n   66  			// create `package' table\n   67: 			NameFuncPair[] pkg_define = new NameFuncPair[]\n   68  			{\n   69: 				new NameFuncPair( \"loadlib\", 	PKG_LoadLib ),\n   70: 				new NameFuncPair( \"searchpath\", PKG_SearchPath ),\n   71: 				new NameFuncPair( \"seeall\", 	PKG_SeeAll ),\n   72  			};\n   73  			lua.L_NewLib( pkg_define );\n   ..\n  105  			lua.PushValue( -2 ); // set `package' as upvalue for next lib\n  106  \n  107: 			NameFuncPair[] loadLibFuncs = new NameFuncPair[]\n  108  			{\n  109: 				new NameFuncPair( \"module\", 	LL_Module ),\n  110: 				new NameFuncPair( \"require\", 	LL_Require ),\n  111  			};\n  112  			lua.L_SetFuncs( loadLibFuncs, 1 ); // open lib into global table\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaStrLib.cs:\n   24  		public static int OpenLib( ILuaState lua )\n   25  		{\n   26: 			NameFuncPair[] define = new NameFuncPair[]\n   27  			{\n   28: 				new NameFuncPair( \"byte\", 		Str_Byte ),\n   29: 				new NameFuncPair( \"char\", 		Str_Char ),\n   30: 				new NameFuncPair( \"dump\", 		Str_Dump ),\n   31: 				new NameFuncPair( \"find\", 		Str_Find ),\n   32: 				new NameFuncPair( \"format\", 	Str_Format ),\n   33: 				new NameFuncPair( \"gmatch\", 	Str_Gmatch ),\n   34: 				new NameFuncPair( \"gsub\", 		Str_Gsub ),\n   35: 				new NameFuncPair( \"len\", 		Str_Len ),\n   36: 				new NameFuncPair( \"lower\", 		Str_Lower ),\n   37: 				new NameFuncPair( \"match\", 		Str_Match ),\n   38: 				new NameFuncPair( \"rep\", 		Str_Rep ),\n   39: 				new NameFuncPair( \"reverse\", 	Str_Reverse ),\n   40: 				new NameFuncPair( \"sub\", 		Str_Sub ),\n   41: 				new NameFuncPair( \"upper\", 		Str_Upper ),\n   42  			};\n   43  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaTableLib.cs:\n   12  		public static int OpenLib( ILuaState lua )\n   13  		{\n   14: 			NameFuncPair[] define = new NameFuncPair[]\n   15  			{\n   16: 				new NameFuncPair( \"concat\", 	TBL_Concat 	),\n   17: 				new NameFuncPair( \"maxn\", 		TBL_MaxN 	),\n   18: 				new NameFuncPair( \"insert\", 	TBL_Insert 	),\n   19: 				new NameFuncPair( \"pack\", 		TBL_Pack 	),\n   20: 				new NameFuncPair( \"unpack\", 	TBL_Unpack 	),\n   21: 				new NameFuncPair( \"remove\", 	TBL_Remove 	),\n   22: 				new NameFuncPair( \"sort\", 		TBL_Sort 	),\n   23  			};\n   24  \n\n181 matches across 14 files\n\n\nSearching 1357 files for \"CSharpFunctionDelegate\"\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaAPI.cs:\n   11  	}\n   12  \n   13: 	public delegate int CSharpFunctionDelegate(ILuaState state);\n   14  	public interface ILuaAPI\n   15  	{\n   ..\n   22  		void Call( int numArgs, int numResults );\n   23  		void CallK( int numArgs, int numResults,\n   24: 			int context, CSharpFunctionDelegate continueFunc );\n   25  		ThreadStatus PCall( int numArgs, int numResults, int errFunc);\n   26  		ThreadStatus PCallK( int numArgs, int numResults, int errFunc,\n   27: 			int context, CSharpFunctionDelegate continueFunc );\n   28  \n   29  		ThreadStatus Resume( ILuaState from, int numArgs );\n   30  		int Yield( int numResults );\n   31  		int YieldK( int numResults,\n   32: 			int context, CSharpFunctionDelegate continueFunc );\n   33  \n   34  		int  AbsIndex( int index );\n   ..\n   84  		void PushUnsigned( uint n );\n   85  		string PushString( string s );\n   86: 		void PushCSharpFunction( CSharpFunctionDelegate f );\n   87: 		void PushCSharpClosure( CSharpFunctionDelegate f, int n );\n   88  		void PushValue( int index );\n   89  		void PushGlobalTable();\n   ..\n  295  \n  296  		void ILuaAPI.CallK( int numArgs, int numResults,\n  297: 			int context, CSharpFunctionDelegate continueFunc )\n  298  		{\n  299  			Utl.ApiCheck( continueFunc == null || !CI.IsLua,\n  ...\n  356  \n  357  		ThreadStatus ILuaAPI.PCallK( int numArgs, int numResults, int errFunc,\n  358: 			int context, CSharpFunctionDelegate continueFunc )\n  359  		{\n  360  			Utl.ApiCheck( continueFunc == null || !CI.IsLua,\n  ...\n  599  \n  600  		int ILuaAPI.YieldK( int numResults,\n  601: 			int context, CSharpFunctionDelegate continueFunc )\n  602  		{\n  603  			CallInfo ci = CI;\n  ...\n 1235  		}\n 1236  \n 1237: 		void ILuaAPI.PushCSharpFunction( CSharpFunctionDelegate f )\n 1238  		{\n 1239  			API.PushCSharpClosure( f, 0 );\n 1240  		}\n 1241  		\n 1242: 		void ILuaAPI.PushCSharpClosure( CSharpFunctionDelegate f, int n )\n 1243  		{\n 1244  			if( n == 0 )\n ....\n 1627  		}\n 1628  \n 1629: 		// private void RegisterGlobalFunc( string name, CSharpFunctionDelegate f )\n 1630  		// {\n 1631  		// 	API.PushCSharpFunction( f );\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaAuxLib.cs:\n    9  	{\n   10  		public string Name;\n   11: 		public CSharpFunctionDelegate Func;\n   12  \n   13: 		public NameFuncPair( string name, CSharpFunctionDelegate func )\n   14  		{\n   15  			Name = name;\n   ..\n   38  		int 	L_GetSubTable( int index, string fname );\n   39  \n   40: 		void 	L_RequireF( string moduleName, CSharpFunctionDelegate openFunc, bool global );\n   41  		void 	L_OpenLibs();\n   42  		void 	L_NewLibTable( NameFuncPair[] define );\n   ..\n  547  		// 	}\n  548  \n  549: 		// 	private static void Add( string name, CSharpFunctionDelegate loadFunc )\n  550  		// 	{\n  551  		// 		Items.Add( new NameFuncPair { Name=name, LoadFunc=loadFunc } );\n  ...\n  581  		}\n  582  \n  583: 		public void L_RequireF( string moduleName, CSharpFunctionDelegate openFunc, bool global )\n  584  		{\n  585  			API.PushCSharpFunction( openFunc );\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaBaseLib.cs:\n  184  			return FinishPCall( lua, status == ThreadStatus.LUA_YIELD );\n  185  		}\n  186: 		private static CSharpFunctionDelegate DG_PCallContinuation = PCallContinuation;\n  187  \n  188  		public static int B_PCall( ILuaState lua )\n  ...\n  351  \n  352  		private static int PairsMeta( ILuaState lua, string method, bool isZero\n  353: 			, CSharpFunctionDelegate iter )\n  354  		{\n  355  			if( !lua.L_GetMetaField( 1, method ) ) // no metamethod?\n  ...\n  384  			}\n  385  		}\n  386: 		static CSharpFunctionDelegate DG_B_Next = B_Next;\n  387  \n  388  		public static int B_Pairs( ILuaState lua )\n  ...\n  399  			return lua.IsNil( -1 ) ? 1 : 2;\n  400  		}\n  401: 		static CSharpFunctionDelegate DG_IpairsAux = IpairsAux;\n  402  \n  403  		public static int B_Ipairs( ILuaState lua )\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaObject.cs:\n  186  			OValue = v;\n  187  		}\n  188: 		internal void SetClLcsValue(CSharpFunctionDelegate v) {\n  189  #if DEBUG_DUMMY_TVALUE_MODIFY\n  190  			CheckLock();\n  ...\n  323  	public class LuaCsClosureValue\n  324  	{\n  325: 		public CSharpFunctionDelegate 	F;\n  326  		public StkId[]					Upvals;\n  327  \n  328: 		public LuaCsClosureValue( CSharpFunctionDelegate f )\n  329  		{\n  330  			F = f;\n  331  		}\n  332  \n  333: 		public LuaCsClosureValue( CSharpFunctionDelegate f, int numUpvalues )\n  334  		{\n  335  			F = f;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaPkgLib.cs:\n  118  		private static void CreateSearchersTable( ILuaState lua )\n  119  		{\n  120: 			CSharpFunctionDelegate[] searchers = new CSharpFunctionDelegate[]\n  121  			{\n  122  				SearcherPreload,\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaState.cs:\n   88  		public CallStatus CallStatus;\n   89  \n   90: 		public CSharpFunctionDelegate ContinueFunc;\n   91  		public int Context;\n   92  		public int ExtraIndex;\n\n28 matches across 6 files\n\n\nSearching 1358 files for \"NoToLuaAttribute\"\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/LuaWrap.cs:\n   42  }\n   43  \n   44: public class NoToLuaAttribute : System.Attribute\n   45  {\n   46:     public NoToLuaAttribute()\n   47      {\n   48  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/ToLua.cs:\n 2020              Type t = attrs[j].GetType() ;\n 2021  \n 2022:             if (t == typeof(System.ObsoleteAttribute) || t == typeof(NoToLuaAttribute)) // || t.ToString() == \"UnityEngine.WrapperlessIcall\")\n 2023              {\n 2024                  return true;               \n\n<untitled 464>:\n   44      }\n   45  \n   46:     public class NoToLuaAttribute : System.Attribute\n   47      {\n   48:         public NoToLuaAttribute()\n   49          {\n   50              //\n\n5 matches across 3 files\n\n\nSearching 1358 files for \"LuaStringBuffer\"\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/Base/LuaScriptMgr.cs:\n 1498      }    \n 1499  \n 1500:     public static LuaStringBuffer GetStringBuffer(IntPtr L, int stackPos)\n 1501      {\n 1502          LuaTypes luatype = LuaDLL.lua_type(L, stackPos);\n ....\n 1510          int len = 0;\n 1511          IntPtr buffer = LuaDLL.lua_tolstring(L, stackPos, out len);\n 1512:         return new LuaStringBuffer(buffer, len);                \n 1513      }\n 1514  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/LuaWrap.cs:\n   55  }\n   56  \n   57: public class LuaStringBuffer\n   58  {\n   59:     public LuaStringBuffer(IntPtr source,int len)\n   60      {\n   61          buffer = new byte[len];\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/ToLua.cs:\n  952                  sb.AppendFormat(\"{0}{1} {2} = LuaScriptMgr.GetTypeObject(L, {3});\\r\\n\", head, str, arg, j + offset);\n  953              }\n  954:             else if (param.ParameterType == typeof(LuaStringBuffer))\n  955              {\n  956:                 sb.AppendFormat(\"{2}LuaStringBuffer {0} = LuaScriptMgr.GetStringBuffer(L, {1});\\r\\n\", arg, j + offset, head);\n  957              }\n  958              else //if (param.ParameterType == typeof(object))\n\n<untitled 464>:\n   57      }\n   58  \n   59:     public class LuaStringBuffer\n   60      {\n   61:         public LuaStringBuffer(IntPtr source,int len)\n   62          {\n   63              buffer = new byte[len];\n\n8 matches across 4 files\n\n\nSearching 1358 files for \"luaindexes\"\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/Base/LuaScriptMgr.cs:\n  118          LuaDLL.lua_pushstring(lua.L, \"ToLua_Index\");\n  119          LuaDLL.luaL_dostring(lua.L, luaIndex);        \n  120:         LuaDLL.lua_rawset(lua.L, (int)LuaIndexes.LUA_REGISTRYINDEX);\n  121  \n  122          LuaDLL.lua_pushstring(lua.L, \"ToLua_NewIndex\");\n  123          LuaDLL.luaL_dostring(lua.L, luaNewIndex);\n  124:         LuaDLL.lua_rawset(lua.L, (int)LuaIndexes.LUA_REGISTRYINDEX);\n  125  \n  126          LuaDLL.lua_pushstring(lua.L, \"luaTableCall\");\n  127          LuaDLL.luaL_dostring(lua.L, luaTableCall);\n  128:         LuaDLL.lua_rawset(lua.L, (int)LuaIndexes.LUA_REGISTRYINDEX);        \n  129  \n  130          Bind();\n  ...\n  269              if (PushLuaFunction(L, name))\n  270              {\n  271:                 int reference = LuaDLL.luaL_ref(L, LuaIndexes.LUA_REGISTRYINDEX);\n  272                  func = new LuaFunction(reference, lua);\n  273                  LuaDLL.lua_settop(L, oldTop);\n  ...\n  292              if (PushLuaFunction(L, name))\n  293              {\n  294:                 int reference = LuaDLL.luaL_ref(L, LuaIndexes.LUA_REGISTRYINDEX);\n  295                  func = new LuaFunction(reference, lua);                \n  296                  func.name = name;\n  ...\n  436              if (PushLuaTable(L, tableName))\n  437              {\n  438:                 int reference = LuaDLL.luaL_ref(L, LuaIndexes.LUA_REGISTRYINDEX);\n  439                  lt = new LuaTable(reference, lua);\n  440                  lt.name = tableName;\n  ...\n  473                  LuaDLL.lua_pushstring(L, path[0]);\n  474                  LuaDLL.lua_pushvalue(L, -2);\n  475:                 LuaDLL.lua_settable(L, LuaIndexes.LUA_GLOBALSINDEX);\n  476              }\n  477  \n  ...\n  518                  LuaDLL.lua_pushstring(L, path[0]);\n  519                  LuaDLL.lua_pushvalue(L, -2);                \n  520:                 LuaDLL.lua_settable(L, LuaIndexes.LUA_GLOBALSINDEX);\n  521              }\n  522          }\n  ...\n  577  \n  578          LuaDLL.lua_pushstring(L, \"ToLua_Index\");\n  579:         LuaDLL.lua_rawget(L, (int)LuaIndexes.LUA_REGISTRYINDEX);\n  580          LuaDLL.lua_setfield(L, -2, \"__index\");\n  581  \n  582          LuaDLL.lua_pushstring(L, \"ToLua_NewIndex\");\n  583:         LuaDLL.lua_rawget(L, (int)LuaIndexes.LUA_REGISTRYINDEX);\n  584          LuaDLL.lua_setfield(L, -2, \"__newindex\");  \n  585  \n  ...\n  593  \n  594          LuaDLL.lua_pushvalue(L, -1);\n  595:         int refence = LuaDLL.luaL_ref(L, LuaIndexes.LUA_REGISTRYINDEX);\n  596          LuaDLL.lua_setmetatable(L, -2);        \n  597          LuaDLL.lua_settop(L, 0);\n  ...\n  647          LuaDLL.lua_pushstring(L, \"__index\");\n  648          LuaDLL.lua_pushstring(L, \"ToLua_Index\");\n  649:         LuaDLL.lua_rawget(L, (int)LuaIndexes.LUA_REGISTRYINDEX);\n  650          LuaDLL.lua_rawset(L, -3);        \n  651  \n  652          LuaDLL.lua_pushstring(L, \"__newindex\");\n  653          LuaDLL.lua_pushstring(L, \"ToLua_NewIndex\");\n  654:         LuaDLL.lua_rawget(L, (int)LuaIndexes.LUA_REGISTRYINDEX);        \n  655          LuaDLL.lua_rawset(L, -3);\n  656  \n  657          LuaDLL.lua_pushstring(L, \"__call\");\n  658          LuaDLL.lua_pushstring(L, \"luaTableCall\");\n  659:         LuaDLL.lua_rawget(L, (int)LuaIndexes.LUA_REGISTRYINDEX);\n  660          LuaDLL.lua_rawset(L, -3); \n  661  \n  ...\n  739  \n  740          LuaDLL.lua_pushvalue(L, stackPos);\n  741:         return new LuaFunction(LuaDLL.luaL_ref(L, LuaIndexes.LUA_REGISTRYINDEX), L);\n  742      }\n  743  \n  ...\n  765  \n  766          LuaDLL.lua_pushvalue(L, stackPos);\n  767:         return new LuaTable(LuaDLL.luaL_ref(L, LuaIndexes.LUA_REGISTRYINDEX), L);\n  768      }\n  769  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/Lua.cs:\n   41              LuaDLL.lua_pushstring(L, \"LUAINTERFACE LOADED\");\n   42              LuaDLL.lua_pushboolean(L, true);\n   43:             LuaDLL.lua_settable(L, (int) LuaIndexes.LUA_REGISTRYINDEX);\n   44              LuaDLL.lua_newtable(L);\n   45              LuaDLL.lua_setglobal(L, \"luanet\");\n   46:             LuaDLL.lua_pushvalue(L, (int)LuaIndexes.LUA_GLOBALSINDEX);\n   47              LuaDLL.lua_getglobal(L, \"luanet\");\n   48              LuaDLL.lua_pushstring(L, \"getmetatable\");\n   ..\n   51  \n   52              // Set luanet as global for object translator\n   53:             LuaDLL.lua_replace(L, (int)LuaIndexes.LUA_GLOBALSINDEX);\n   54              translator = new ObjectTranslator(this,L);\n   55:             LuaDLL.lua_replace(L, (int)LuaIndexes.LUA_GLOBALSINDEX);\n   56  \n   57  			GCHandle handle = GCHandle.Alloc(translator, GCHandleType.Pinned);\n   ..\n   66              printFunction = new LuaCSFunction(LuaStatic.print);\n   67              LuaDLL.lua_pushstdcallcfunction(L, printFunction);\n   68:             LuaDLL.lua_setfield(L, LuaIndexes.LUA_GLOBALSINDEX, \"print\");\n   69  \n   70              loadfileFunction = new LuaCSFunction(LuaStatic.loadfile);\n   71              LuaDLL.lua_pushstdcallcfunction(L, loadfileFunction);\n   72:             LuaDLL.lua_setfield(L, LuaIndexes.LUA_GLOBALSINDEX, \"loadfile\");\n   73  \n   74              dofileFunction = new LuaCSFunction(LuaStatic.dofile);\n   75              LuaDLL.lua_pushstdcallcfunction(L, dofileFunction);\n   76:             LuaDLL.lua_setfield(L, LuaIndexes.LUA_GLOBALSINDEX, \"dofile\");\n   77  \n   78              // Insert our loader FIRST\n   ..\n   81              int loaderFunc = LuaDLL.lua_gettop( L );\n   82  \n   83:             LuaDLL.lua_getfield( L, LuaIndexes.LUA_GLOBALSINDEX, \"package\" );\n   84              LuaDLL.lua_getfield( L, -1, \"loaders\" );\n   85              int loaderTable = LuaDLL.lua_gettop( L );\n   ..\n  901  \n  902              // Store thread in registry\n  903:             threadRef = LuaDLL.luaL_ref( parent.L, LuaIndexes.LUA_REGISTRYINDEX );\n  904          }\n  905  \n  ...\n  909  			if( dispose )\n  910  			{\n  911: 			    LuaDLL.luaL_unref( parent.L, LuaIndexes.LUA_REGISTRYINDEX, threadRef );\n  912  			}\n  913  		}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaDLL.cs:\n   51      }\n   52  \n   53: 	sealed class LuaIndexes\n   54  	{\n   55  		public static int LUA_REGISTRYINDEX=-10000;\n   ..\n  216  		{\n  217  			LuaDLL.lua_pushstring(luaState,name);\n  218: 			LuaDLL.lua_gettable(luaState,LuaIndexes.LUA_GLOBALSINDEX);\n  219  		}\n  220  		public static void lua_setglobal(IntPtr luaState, string name)\n  ...\n  222  			LuaDLL.lua_pushstring(luaState,name);\n  223  			LuaDLL.lua_insert(luaState,-2);\n  224: 			LuaDLL.lua_settable(luaState,LuaIndexes.LUA_GLOBALSINDEX);\n  225  		}\n  226  		[DllImport(LUADLL,CallingConvention=CallingConvention.Cdecl)]\n  ...\n  272  			if(lockRef!=0)\n  273  			{\n  274: 				return LuaDLL.luaL_ref(luaState,LuaIndexes.LUA_REGISTRYINDEX);\n  275  			}\n  276  			else return 0;\n  ...\n  286  		public static void lua_getref(IntPtr luaState, int reference)\n  287  		{\n  288: 			LuaDLL.lua_rawgeti(luaState,LuaIndexes.LUA_REGISTRYINDEX,reference);\n  289  		}\n  290  		[DllImport(LUADLL,CallingConvention=CallingConvention.Cdecl)]\n  ...\n  292  		public static void lua_unref(IntPtr luaState, int reference)\n  293  		{\n  294: 			LuaDLL.luaL_unref(luaState,LuaIndexes.LUA_REGISTRYINDEX,reference);\n  295  		}\n  296  		[DllImport(LUADLL,CallingConvention=CallingConvention.Cdecl)]\n  ...\n  358  		public static void luaL_getmetatable(IntPtr luaState, string meta)\n  359  		{\n  360: 			LuaDLL.lua_getfield(luaState, LuaIndexes.LUA_REGISTRYINDEX, meta);\n  361  		}\n  362  		[DllImport(LUADLL, CallingConvention = CallingConvention.Cdecl)]\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaStatic.cs:\n   28          //    LuaDLL.lua_getglobal(L, \"debug\");\n   29          //    LuaDLL.lua_getfield(L, -1, \"traceback\");\n   30:         //    trace = LuaDLL.luaL_ref(L, LuaIndexes.LUA_REGISTRYINDEX);\n   31          //    LuaDLL.lua_settop(L, oldTop);\n   32          //}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/ObjectTranslator.cs:\n  101  			LuaDLL.lua_settable(luaState,-3);\n  102  			LuaDLL.lua_setmetatable(luaState,-2);\n  103: 			LuaDLL.lua_settable(luaState, (int) LuaIndexes.LUA_REGISTRYINDEX);\n  104  		}\n  105  		/*\n  ...\n  112  			LuaDLL.luaL_dostring(luaState,MetaFunctions.luaIndexFunction);\n  113  			//LuaDLL.lua_pushstdcallcfunction(luaState,indexFunction);\n  114: 			LuaDLL.lua_rawset(luaState, (int) LuaIndexes.LUA_REGISTRYINDEX);\n  115  		}\n  116  		/*\n  ...\n  617  					LuaDLL.lua_pushstring(luaState,\"__index\");\n  618  					LuaDLL.lua_pushstring(luaState,\"luaNet_indexfunction\");\n  619: 					LuaDLL.lua_rawget(luaState, (int) LuaIndexes.LUA_REGISTRYINDEX);\n  620  					LuaDLL.lua_rawset(luaState,-3);\n  621  					LuaDLL.lua_pushstring(luaState,\"__gc\");\n  ...\n  676                      LuaDLL.lua_pushstring(luaState, \"__index\");\n  677                      LuaDLL.lua_pushstring(luaState, \"luaNet_indexfunction\");\n  678:                     LuaDLL.lua_rawget(luaState, (int)LuaIndexes.LUA_REGISTRYINDEX);\n  679                      LuaDLL.lua_rawset(luaState, -3);\n  680                      LuaDLL.lua_pushstring(luaState, \"__gc\");\n  ...\n  814  		{\n  815  			LuaDLL.lua_pushvalue(luaState,index);\n  816: 			return new LuaTable(LuaDLL.luaL_ref(luaState,LuaIndexes.LUA_REGISTRYINDEX),interpreter);\n  817  		}\n  818  		/*\n  ...\n  822  		{\n  823  			LuaDLL.lua_pushvalue(luaState,index);\n  824: 			return new LuaUserData(LuaDLL.luaL_ref(luaState,LuaIndexes.LUA_REGISTRYINDEX),interpreter);\n  825  		}\n  826  		/*\n  ...\n  830  		{\n  831  			LuaDLL.lua_pushvalue(luaState,index);\n  832: 			return new LuaFunction(LuaDLL.luaL_ref(luaState,LuaIndexes.LUA_REGISTRYINDEX),interpreter);\n  833  		}\n  834  		/*\n\n41 matches across 5 files\n\n\nSearching 1358 files for \"class luaindexes\"\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaDLL.cs:\n   51      }\n   52  \n   53: 	sealed class LuaIndexes\n   54  	{\n   55  		public static int LUA_REGISTRYINDEX=-10000;\n\n1 match in 1 file\n\n\nSearching 1358 files for \"L_SetFuncs\"\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/U3DLua/UniLuaEngine.cs:\n   44          for (int i = 0; i < method.Length; i++)\n   45          {            \n   46:             this.m_cLuaState.L_SetFuncs(method[i].name);\n   47              LuaDLL.lua_pushstdcallcfunction(L, method[i].func);\n   48              LuaDLL.lua_rawset(L, -3);            \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaAuxLib.cs:\n   42  		void 	L_NewLibTable( NameFuncPair[] define );\n   43  		void	L_NewLib( NameFuncPair[] define );\n   44: 		void 	L_SetFuncs( NameFuncPair[] define, int nup );\n   45  		\n   46  		T 		L_Opt<T>( Func<int,T> f, int n, T def );\n   ..\n  621  		{\n  622  			L_NewLibTable( define );\n  623: 			L_SetFuncs( define, 0 );\n  624  		}\n  625  \n  626: 		public void L_SetFuncs( NameFuncPair[] define, int nup )\n  627  		{\n  628  			// TODO: Check Version\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaBaseLib.cs:\n   45  \n   46  			// open lib into global lib\n   47: 			lua.L_SetFuncs( define, 0 );\n   48  			// lua.RegisterGlobalFunc( \"type\", 	LuaBaseLib.B_Type );\n   49  			// lua.RegisterGlobalFunc( \"pairs\", 	LuaBaseLib.B_Pairs );\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaPkgLib.cs:\n  110  				new NameFuncPair( \"require\", 	LL_Require ),\n  111  			};\n  112: 			lua.L_SetFuncs( loadLibFuncs, 1 ); // open lib into global table\n  113  			lua.Pop( 1 ); // pop global table\n  114  \n\n6 matches across 4 files\n\n\nSearching 1358 files for \"Instance\"\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/Editor/InspectorTool.cs:\n  179  public class InspectorTool : Editor\n  180  {\n  181:     static public InspectorTool instance;\n  182  \n  183      SerializedProperty mPos;\n  ...\n  213      void OnEnable ()\n  214      {\n  215:         instance = this;\n  216  \n  217          mPos = serializedObject.FindProperty(\"m_LocalPosition\");\n  ...\n  220      }\n  221  \n  222:     void OnDestroy () { instance = null; }\n  223  \n  224      /// <summary>\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/Manager/MyApplaction.cs:\n   33      void Init()\n   34      {\n   35:         UIManager.sInstance.UIRoot = GameObject.Find(UIROOT).gameObject;\n   36          \n   37          // InitLua();\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DEncrypt/Cipher.cs:\n  212  			byte[] exponent = binr.ReadBytes(expbytes);\n  213  \n  214: 			// ------- create RSACryptoServiceProvider instance and initialize with public key -----\n  215  			RSACryptoServiceProvider RSA = new RSACryptoServiceProvider();\n  216  			RSAParameters RSAKeyInfo = new RSAParameters();\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DGameResource/src/core/LoadPackage.cs:\n   72  \n   73  		/// <summary>\n   74: 		/// Restart this instance.\n   75  		/// </summary>\n   76  		public void Restart()\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DGameResource/src/resMgr/MgrLoad.cs:\n   45  		public static object LoadAsset(string path)\n   46  		{\n   47: 			if (sInstance.m_mapRes.ContainsKey(path))\n   48  			{\n   49: 				sInstance.m_mapRes[path].Used();\n   50: 				if (sInstance.m_mapRes[path].GetAssetObject() is AssetBundle)\n   51  				{\n   52: 					return (sInstance.m_mapRes[path].GetAssetObject() as AssetBundle).mainAsset;\n   53  				}\n   54: 				return sInstance.m_mapRes[path].GetAssetObject();\n   55  			}\n   56  			else\n   ..\n   69  		public static UnityEngine.Object LoadAsset( string path , string name )\n   70  		{\n   71: 			if (sInstance.m_mapRes.ContainsKey(path))\n   72  			{\n   73: 				sInstance.m_mapRes[path].Used();\n   74: 				if (sInstance.m_mapRes[path].GetAssetObject() is AssetBundle)\n   75  				{\n   76: 					return (sInstance.m_mapRes[path].GetAssetObject() as AssetBundle).Load(name);\n   77  				}\n   78  				Debug.LogError(\"Resource is not assetbundle. path \" + path);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DGameResource/src/resMgr/RequestCollection.cs:\n   31  \n   32  		/// <summary>\n   33: 		/// Create this instance.\n   34  		/// </summary>\n   35  		public static RequestCollection Create()\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DGameResource/src/resMgr/ResourceMgr.cs:\n   85  		private Dictionary<string, object> m_mapAsyncLoader = new Dictionary<string, object>();    //异步映射\n   86  \n   87: 		private static ResourceMgr s_cInstance;\n   88  \n   89: 		public static ResourceMgr sInstance\n   90  		{\n   91  			get\n   92  			{\n   93: 				if(s_cInstance == null)\n   94  				{\n   95: 					s_cInstance = (new GameObject(\"ResourcesManager\")).AddComponent<ResourceMgr>();\n   96  				}\n   97: 				return s_cInstance;\n   98  			}\n   99  		}\n  100  \n  101  		/// <summary>\n  102: 		/// Awake this instance.\n  103  		/// </summary>\n  104          void Awake()\n  ...\n  112  		void OnDestroy()\n  113  		{\n  114: 			if(s_cInstance == this )\n  115  			{\n  116: 				s_cInstance = null;\n  117  			}\n  118  		}\n  ...\n  124  		{\n  125  			int sum = 0;\n  126: 			foreach (ResourceRequireData item in sInstance.m_lstRequires)\n  127  			{\n  128  				if (item.Start && !item.Complete)\n  ...\n  133  			{\n  134  				sum = 0;\n  135: 				foreach (ResourceRequireData item in sInstance.m_lstRequires)\n  136  				{\n  137  					if (!item.Start && !item.Complete)\n  ...\n  151  		public static void SwitchNormal()\n  152  		{\n  153: 			sInstance.m_eLoadType = LOAD_TYPE.NORMAL;\n  154  		}\n  155  \n  ...\n  159  		public static void SwitchEditor()\n  160  		{\n  161: 			sInstance.m_eLoadType = LOAD_TYPE.EDITOR;\n  162  		}\n  163  \n  ...\n  167          public static void ClearAsyncLoad()\n  168          {\n  169: 			sInstance.m_mapAsyncLoader.Clear();\n  170          }\n  171  \n  ...\n  177          {\n  178              float rate = 0;\n  179: 			if (sInstance.m_eLoadType == LOAD_TYPE.NORMAL)\n  180              {\n  181: 				foreach (KeyValuePair<string, object> item in sInstance.m_mapAsyncLoader)\n  182                  {\n  183                      rate += ((AsyncLoader)item.Value).Progress();\n  ...\n  186              else\n  187              {\n  188: 				rate = sInstance.m_mapAsyncLoader.Count;\n  189              }\n  190  \n  191: 			if (sInstance.m_mapAsyncLoader.Count <= 0)\n  192                  return 1f;\n  193  \n  194: 			rate /= sInstance.m_mapAsyncLoader.Count;\n  195  \n  196              return rate;\n  ...\n  204          public static UnityEngine.Object GetAsyncObject(string resName)\n  205          {\n  206: 			if ( sInstance.m_eLoadType == LOAD_TYPE.NORMAL)\n  207              {\n  208: 				if ( sInstance.m_mapAsyncLoader.ContainsKey(resName))\n  209                  {\n  210: 					return ((AsyncLoader)sInstance.m_mapAsyncLoader[resName]).GetAsset();\n  211                  }\n  212                  else\n  ...\n  217              else\n  218              {\n  219: 				if (sInstance.m_mapAsyncLoader.ContainsKey(resName))\n  220                  {\n  221: 					return (UnityEngine.Object)sInstance.m_mapAsyncLoader[resName];\n  222                  }\n  223                  else\n  ...\n  247          public static void LoadAsync(string path , string resName )\n  248          {\n  249: 			if (  sInstance.m_eLoadType == LOAD_TYPE.NORMAL )\n  250              {\n  251: 				if ( sInstance.m_mapRes.ContainsKey(path) )\n  252                  {\n  253: 					if (!sInstance.m_mapAsyncLoader.ContainsKey(resName))\n  254                      {\n  255: 						AsyncLoader loader = AsyncLoader.StartLoad(((AssetBundle)sInstance.m_mapRes[path].GetAssetObject()), resName);\n  256: 						sInstance.m_mapAsyncLoader.Add(resName, loader);\n  257                      }\n  258                      else\n  ...\n  268              else\n  269              {\n  270: 				if (!sInstance.m_mapAsyncLoader.ContainsKey(resName))\n  271                  {\n  272  					UnityEngine.Object obj = ResourceMgr.LoadEditor(resName);\n  273: 					sInstance.m_mapAsyncLoader.Add(resName, obj);\n  274                  }\n  275                  else\n  ...\n  286          public static void UnloadResource(string name)\n  287          {\n  288: 			if (sInstance.m_mapRes.ContainsKey(name))\n  289              {\n  290                  if (!CanUnload(name))\n  291                      return;\n  292: 				sInstance.m_mapRes[name].Destory( false );\n  293: 				sInstance.m_lstRequires.Remove(sInstance.m_mapRes[name]);\n  294: 				sInstance.m_mapRes.Remove(name);\n  295                  Resources.UnloadUnusedAssets();\n  296              }\n  ...\n  308          public static void UnloadResource(string name, ResourceRequireOwner owner)\n  309          {\n  310: 			if (sInstance.m_mapRes.ContainsKey(name))\n  311              {\n  312: 				sInstance.m_mapRes[name].RemoveRequireOwner(owner);\n  313                  //倘若资源需求为空\n  314: 				if (sInstance.m_mapRes[name].IsOwnerEmpty())\n  315                  {\n  316                      //如果可以卸载 或者 加载未完成则卸载资源\n  317: 					if (CanUnload(name) || !sInstance.m_mapRes[name].Complete)\n  318                      {\n  319: 						sInstance.m_mapRes[name].Destory(false);\n  320: 						sInstance.m_lstRequires.Remove(sInstance.m_mapRes[name]);\n  321: 						sInstance.m_mapRes.Remove(name);\n  322                          Resources.UnloadUnusedAssets();\n  323                      }\n  ...\n  337          private static bool CanUnload(string name)\n  338          {\n  339: 			foreach (string item in sInstance.m_lstShareResources)\n  340  			{\n  341  				if (name == item || name.StartsWith(item))\n  ...\n  351          {\n  352              List<string> lst = new List<string>();\n  353: 			foreach (KeyValuePair<string, ResourceRequireData> item in sInstance.m_mapRes)\n  354              {\n  355                  if (!CanUnload(item.Key))\n  ...\n  360              foreach (string key in lst)\n  361              {\n  362: 				sInstance.m_mapRes[key].Destory( false );\n  363: 				sInstance.m_mapRes.Remove(key);\n  364              }\n  365: 			sInstance.m_lstRequires.Clear();\n  366: 			sInstance.m_mapAsyncLoader.Clear();\n  367              Resources.UnloadUnusedAssets();\n  368              //GC.Collect();\n  ...\n  392  			)\n  393          {\n  394: 			if (sInstance.m_delDecryptFunc == null && encrypt_type == ENCRYPT_TYPE.ENCRYPT )\n  395              {\n  396                  // Error\n  ...\n  408              owner.m_eResType = resType;\n  409              owner.m_vecArg = arg;\n  410: 			if ( sInstance.m_eLoadType != LOAD_TYPE.NORMAL )\n  411  			{ \n  412  				UnityEngine.Object obj = LoadEditor(resName);\n  413: 				if (!sInstance.m_mapRes.ContainsKey(resName))\n  414  				{\n  415  					object resData = null;\n  ...\n  428  					}\n  429  					ResourceRequireData data = new ResourceRequireData(resData);\n  430: 					sInstance.m_mapRes.Add(resName, data);\n  431  				}\n  432: 				sInstance.m_mapRes[resName].AddRequireOwner(owner);\n  433: 				sInstance.m_mapRes[resName].Used();\n  434: 				if(sInstance.m_mapRes[resName].Complete)\n  435  				{\n  436: 					sInstance.m_mapRes[resName].CompleteCallBack();\n  437  				}\n  438  				return owner;\n  439  			}\n  440  \n  441: 			if (sInstance.m_mapRes.ContainsKey(resName))\n  442              {\n  443                  //增加需求者\n  444: 				sInstance.m_mapRes[resName].AddRequireOwner(owner);\n  445: 				sInstance.m_mapRes[resName].Used();\n  446: 				if (sInstance.m_mapRes[resName].Complete)\n  447                  {\n  448: 					sInstance.m_mapRes[resName].CompleteCallBack();\n  449                  }\n  450              }\n  ...\n  453  				ResourceRequireData rrd = new ResourceRequireData(\n  454  					path , autoSave ,utime ,autoClear, resType,\n  455: 					encrypt_type, sInstance.m_delDecryptFunc);\n  456: 				sInstance.m_lstRequires.Add(rrd);\n  457: 				sInstance.m_mapRes.Add(resName, rrd);\n  458                  rrd.AddRequireOwner(owner);\n  459              }\n  ...\n  467          public static void Destory()\n  468          {\n  469: 			foreach (ResourceRequireData item in sInstance.m_mapRes.Values)\n  470              {\n  471                  item.Destory( true );\n  472              }\n  473: 			sInstance.m_mapRes.Clear();\n  474: 			sInstance.m_lstRequires.Clear();\n  475: 			sInstance.m_mapAsyncLoader.Clear();\n  476: 			GameObject.DestroyImmediate(sInstance.gameObject);\n  477: 			s_cInstance = null;\n  478          }\n  479  \n  ...\n  483          public static void ClearProgress()\n  484          {\n  485: 			sInstance.m_lstRequires.Clear();\n  486          }\n  487  \n  ...\n  493          {\n  494              float progess = 0;\n  495: 			foreach (ResourceRequireData item in sInstance.m_lstRequires)\n  496              {\n  497                  progess += item.GetProgress();\n  498              }\n  499  \n  500: 			if ( sInstance.m_lstRequires.Count > 0)\n  501              {\n  502: 				return progess / sInstance.m_lstRequires.Count;\n  503              }\n  504  \n  ...\n  513          {\n  514              bool finish = true;\n  515: 			foreach (ResourceRequireData item in sInstance.m_lstRequires)\n  516              {\n  517                  if (!item.Complete)\n  ...\n  525          public static bool IsComplete(string resName)\n  526          {\n  527:             return  sInstance.m_mapRes.ContainsKey(resName) && sInstance.m_mapRes[resName].Complete;           \n  528          }\n  529  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DGameResource/src/resMgr/ResourceRequireData.cs:\n   91  				this.m_strFilePath , this.m_bAutoSave , this.m_lUTime , LoaderCallBack,\n   92  				ErrorCallBack , this.m_eResType, this.m_eEncryType, this.m_funDecryptFunc);\n   93: 			this.m_cLoader.transform.parent = ResourceMgr.sInstance.transform;\n   94  		}\n   95  		\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DGameResource/src/util/SingletonMono.cs:\n   15  		where T : MonoBehaviour\n   16  	{\n   17: 		private static T s_cInstance;\n   18: 		public static T sInstance\n   19  		{\n   20  			get\n   21  			{\n   22: 				if(s_cInstance==null)\n   23  				{\n   24  					GameObject go = new GameObject(typeof(T).Name);\n   25: 					s_cInstance = go.AddComponent<T>();\n   26  				}\n   27: 				return s_cInstance;\n   28  			}\n   29  		}\n   ..\n   42  		protected virtual void destory()\n   43  		{\n   44: 			s_cInstance = null;\n   45  		}\n   46  		\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/Base/LuaScriptMgr.cs:\n   10  public class LuaScriptMgr\n   11  {\n   12:     public static LuaScriptMgr Instance\n   13      {\n   14          get\n   ..\n  106      public LuaScriptMgr()\n  107      {\n  108:         Instance = this;\n  109          LuaStatic.Load = Loader;\n  110          lua = new LuaState();\n  ...\n  201      public void Start()\n  202      {\n  203:         //AssetFileMgr.Instance.Open(Const.LuaResId, OnCommonLoad);\n  204          //CmdTable.RegisterCommand(\"PrintLua\", PrintLua);        \n  205      }\n  ...\n  214      public void Destroy()\n  215      {        \n  216:         Instance = null;        \n  217  \n  218          foreach(KeyValuePair<string, LuaBase> kv in dict)\n  ...\n 1821          return mgrList.Find((p) => { return p.lua.L == L; });\n 1822  #else\n 1823:         return Instance;\n 1824  #endif        \n 1825      }\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/Base/Timer.cs:\n    6  public class Timer:MonoBehaviour\n    7  {\n    8:     public static Timer Instance\n    9      {\n   10          get;\n   ..\n   32      public void Awake()\n   33      {\n   34:         Instance = this;\n   35          list = new List<TimerProc>();                \n   36      }\n   ..\n   38      public void OnDestroy()\n   39      {\n   40:         Instance = null;\n   41          list.Clear();\n   42      }\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/CombineInstanceWrap.cs:\n    3  using LuaInterface;\n    4  \n    5: public class CombineInstanceWrap\n    6  {\n    7  	public static LuaMethod[] regs = new LuaMethod[]\n    8  	{\n    9: 		new LuaMethod(\"New\", _CreateCombineInstance),\n   10  		new LuaMethod(\"GetClassType\", GetClassType),\n   11  	};\n   ..\n   19  \n   20  	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]\n   21: 	static int _CreateCombineInstance(IntPtr L)\n   22  	{\n   23  		LuaScriptMgr.CheckArgsCount(L, 0);\n   24: 		CombineInstance obj = new CombineInstance();\n   25  		LuaScriptMgr.PushValue(L, obj);\n   26  		return 1;\n   ..\n   30  	static int GetClassType(IntPtr L)\n   31  	{\n   32: 		LuaScriptMgr.Push(L, typeof(CombineInstance));\n   33  		return 1;\n   34  	}\n   ..\n   36  	public static void Register(IntPtr L)\n   37  	{\n   38: 		LuaScriptMgr.RegisterLib(L, \"UnityEngine.CombineInstance\", typeof(CombineInstance), regs, fields, null);\n   39  	}\n   40  \n   ..\n   58  		}\n   59  \n   60: 		CombineInstance obj = (CombineInstance)o;\n   61  		LuaScriptMgr.Push(L, obj.mesh);\n   62  		return 1;\n   ..\n   82  		}\n   83  \n   84: 		CombineInstance obj = (CombineInstance)o;\n   85  		LuaScriptMgr.Push(L, obj.subMeshIndex);\n   86  		return 1;\n   ..\n  106  		}\n  107  \n  108: 		CombineInstance obj = (CombineInstance)o;\n  109  		LuaScriptMgr.PushValue(L, obj.transform);\n  110  		return 1;\n  ...\n  130  		}\n  131  \n  132: 		CombineInstance obj = (CombineInstance)o;\n  133  		obj.mesh = LuaScriptMgr.GetNetObject<Mesh>(L, 3);\n  134  		LuaScriptMgr.SetValueObject(L, 1, obj);\n  ...\n  155  		}\n  156  \n  157: 		CombineInstance obj = (CombineInstance)o;\n  158  		obj.subMeshIndex = (int)LuaScriptMgr.GetNumber(L, 3);\n  159  		LuaScriptMgr.SetValueObject(L, 1, obj);\n  ...\n  180  		}\n  181  \n  182: 		CombineInstance obj = (CombineInstance)o;\n  183  		obj.transform = LuaScriptMgr.GetNetObject<Matrix4x4>(L, 3);\n  184  		LuaScriptMgr.SetValueObject(L, 1, obj);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/MeshWrap.cs:\n  889  		{\n  890  			Mesh obj = LuaScriptMgr.GetNetObject<Mesh>(L, 1);\n  891: 			CombineInstance[] objs0 = LuaScriptMgr.GetArrayObject<CombineInstance>(L, 2);\n  892  			obj.CombineMeshes(objs0);\n  893  			return 0;\n  ...\n  896  		{\n  897  			Mesh obj = LuaScriptMgr.GetNetObject<Mesh>(L, 1);\n  898: 			CombineInstance[] objs0 = LuaScriptMgr.GetArrayObject<CombineInstance>(L, 2);\n  899  			bool arg1 = LuaScriptMgr.GetBoolean(L, 3);\n  900  			obj.CombineMeshes(objs0,arg1);\n  ...\n  904  		{\n  905  			Mesh obj = LuaScriptMgr.GetNetObject<Mesh>(L, 1);\n  906: 			CombineInstance[] objs0 = LuaScriptMgr.GetArrayObject<CombineInstance>(L, 2);\n  907  			bool arg1 = LuaScriptMgr.GetBoolean(L, 3);\n  908  			bool arg2 = LuaScriptMgr.GetBoolean(L, 4);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/ScriptableObjectWrap.cs:\n    8  	public static LuaMethod[] regs = new LuaMethod[]\n    9  	{\n   10: 		new LuaMethod(\"CreateInstance\", CreateInstance),\n   11  		new LuaMethod(\"New\", _CreateScriptableObject),\n   12  		new LuaMethod(\"GetClassType\", GetClassType),\n   ..\n   49  \n   50  	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]\n   51: 	static int CreateInstance(IntPtr L)\n   52  	{\n   53  		int count = LuaDLL.lua_gettop(L);\n   ..\n   59  		{\n   60  			Type arg0 = LuaScriptMgr.GetTypeObject(L, 1);\n   61: 			ScriptableObject o = ScriptableObject.CreateInstance(arg0);\n   62  			LuaScriptMgr.Push(L, o);\n   63  			return 1;\n   ..\n   66  		{\n   67  			string arg0 = LuaScriptMgr.GetString(L, 1);\n   68: 			ScriptableObject o = ScriptableObject.CreateInstance(arg0);\n   69  			LuaScriptMgr.Push(L, o);\n   70  			return 1;\n   ..\n   72  		else\n   73  		{\n   74: 			LuaDLL.luaL_error(L, \"invalid arguments to method: ScriptableObject.CreateInstance\");\n   75  		}\n   76  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/TypeWrap.cs:\n   22  		new LuaMethod(\"GetInterfaces\", GetInterfaces),\n   23  		new LuaMethod(\"IsAssignableFrom\", IsAssignableFrom),\n   24: 		new LuaMethod(\"IsInstanceOfType\", IsInstanceOfType),\n   25  		new LuaMethod(\"GetArrayRank\", GetArrayRank),\n   26  		new LuaMethod(\"GetElementType\", GetElementType),\n   ..\n 1359  \n 1360  	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]\n 1361: 	static int IsInstanceOfType(IntPtr L)\n 1362  	{\n 1363  		LuaScriptMgr.CheckArgsCount(L, 2);\n 1364  		Type obj = LuaScriptMgr.GetTypeObject(L, 1);\n 1365  		object arg0 = LuaScriptMgr.GetVarObject(L, 2);\n 1366: 		bool o = obj.IsInstanceOfType(arg0);\n 1367  		LuaScriptMgr.Push(L, o);\n 1368  		return 1;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/coroutineWrap.cs:\n   33          };\n   34  \n   35:         Timer.Instance.AddTimer(arg0, 1, action);\n   36          return LuaDLL.lua_yield(L, 0);\n   37      }\n   ..\n   50          };\n   51  \n   52:         Timer.Instance.Yield(1, action);\n   53          return LuaDLL.lua_yield(L, 0);\n   54      }    \n   ..\n   67          };\n   68  \n   69:         Timer.Instance.WaitEndOfFrame(action);\n   70          return LuaDLL.lua_yield(L, 0);\n   71      } \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/LuaBinder.cs:\n  195  		BlendWeightsWrap.Register(L);\n  196  		MeshFilterWrap.Register(L);\n  197: 		CombineInstanceWrap.Register(L);\n  198  		MeshTopologyWrap.Register(L);\n  199  		MeshWrap.Register(L);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/ObjectWrap.cs:\n   10  		new LuaMethod(\"Equals\", Equals),\n   11  		new LuaMethod(\"GetHashCode\", GetHashCode),\n   12: 		new LuaMethod(\"GetInstanceID\", GetInstanceID),\n   13  		new LuaMethod(\"Instantiate\", Instantiate),\n   14  		new LuaMethod(\"Destroy\", Destroy),\n   ..\n  161  \n  162      [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]\n  163:     static int GetInstanceID(IntPtr L)\n  164      {\n  165          LuaScriptMgr.CheckArgsCount(L, 1);\n  166          Object obj = LuaScriptMgr.GetNetObject<Object>(L, 1);\n  167:         int o = obj.GetInstanceID();\n  168          LuaScriptMgr.Push(L, o);\n  169          return 1;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/ToLua.cs:\n  134          else\n  135          {\n  136:             list.AddRange(type.GetMethods(BindingFlags.Instance | binding));            \n  137  \n  138              for (int i = list.Count - 1; i >= 0; --i)\n  ...\n  268  \n  269          sb.AppendLine(\"\\t};\\r\\n\");\n  270:         fields = type.GetFields(BindingFlags.GetField | BindingFlags.SetField | BindingFlags.Instance | binding);\n  271:         props = type.GetProperties(BindingFlags.GetProperty | BindingFlags.SetProperty | BindingFlags.Instance | binding);\n  272:         propList.AddRange(type.GetProperties(BindingFlags.GetProperty | BindingFlags.SetProperty | BindingFlags.Instance | BindingFlags.Public | BindingFlags.IgnoreCase));\n  273  \n  274          List<FieldInfo> fieldList = new List<FieldInfo>();\n  ...\n  546          }\n  547  \n  548:         ConstructorInfo[] constructors = type.GetConstructors(BindingFlags.Instance | binding);\n  549  \n  550          if (constructors.Length == 0)\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/GenerateEventAssembly.cs:\n   47          public object extractGenerated(IntPtr luaState,int stackPos)\n   48          {\n   49:             return CodeGeneration.Instance.GetDelegate(delegateType,translator.getFunction(luaState,stackPos));\n   50          }\n   51      }\n   ..\n   70          public object extractGenerated(IntPtr luaState,int stackPos)\n   71          {\n   72:             return CodeGeneration.Instance.GetClassInstance(klass,translator.getTable(luaState,stackPos));\n   73          }\n   74      }\n   ..\n   97          private ModuleBuilder newModule;\n   98          private int luaClassNumber=1;\n   99:         private static readonly  CodeGeneration instance = new CodeGeneration();\n  100  \n  101          static CodeGeneration()\n  ...\n  115  \n  116          /*\n  117:          * Singleton instance of the class\n  118           */\n  119:         public static CodeGeneration Instance\n  120          {\n  121              get\n  122              {\n  123:                 return instance;\n  124              }\n  125          }\n  ...\n  362              generator.Emit(OpCodes.Ret);\n  363              // Generates overriden versions of the klass' public and protected virtual methods that have been explicitly specfied\n  364:             BindingFlags flags = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance;\n  365              MethodInfo[] classMethods=klass.GetMethods(flags);\n  366              returnTypes=new Type[classMethods.Length][];\n  ...\n  626                  eventHandlerCollection[eventHandlerType] = eventConsumerType;\n  627              }\n  628:             LuaEventHandler luaEventHandler=(LuaEventHandler)Activator.CreateInstance(eventConsumerType);\n  629              luaEventHandler.handler=eventHandler;\n  630              return luaEventHandler;\n  ...\n  653                  if(paramInfo.ParameterType.IsByRef)\n  654                      returnTypes.Add(paramInfo.ParameterType);\n  655:             LuaDelegate luaDelegate=(LuaDelegate)Activator.CreateInstance(luaDelegateType);\n  656              luaDelegate.function=luaFunc;\n  657              luaDelegate.returnTypes=returnTypes.ToArray();\n  ...\n  660  \n  661          /*\n  662:          * Gets an instance of an implementation of the klass interface or\n  663           * subclass of klass that delegates public virtual methods to the\n  664           * luaTable table.\n  665           * Caches the generated type.\n  666           */\n  667:         public object GetClassInstance(Type klass, LuaTable luaTable)\n  668          {\n  669              LuaClassType luaClassType;\n  ...\n  678                  classCollection[klass] = luaClassType;\n  679              }\n  680:             return Activator.CreateInstance(luaClassType.klass,new object[] {luaTable,luaClassType.returnTypes});\n  681          }\n  682      }\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/Lua.cs:\n  377  \n  378          /// <summary>\n  379:         /// An alphabetically sorted list of all globals (objects, methods, etc.) externally added to this Lua instance\n  380          /// </summary>\n  381          /// <remarks>Members of globals are also listed. The formatting is optimized for text input auto-completion.</remarks>\n  ...\n  413          //    {\n  414          //        #region Methods\n  415:         //        foreach (MethodInfo method in type.GetMethods(BindingFlags.Public | BindingFlags.Instance))\n  416          //        {\n  417          //            if (\n  ...\n  437  \n  438          //        #region Fields\n  439:         //        foreach (FieldInfo field in type.GetFields(BindingFlags.Public | BindingFlags.Instance))\n  440          //        {\n  441          //            if (\n  ...\n  451  \n  452          //        #region Properties\n  453:         //        foreach (PropertyInfo property in type.GetProperties(BindingFlags.Public | BindingFlags.Instance))\n  454          //        {\n  455          //            if (\n  ...\n  520          {\n  521  				translator.throwError(L,\"Tables as interfaces not implemnented\");\n  522:             return CodeGeneration.Instance.GetClassInstance(interfaceType,GetTable(fullPath));\n  523          }\n  524  #endif\n  ...\n  541              return null;\n  542  #else\n  543:             return CodeGeneration.Instance.GetDelegate(delegateType,GetFunction(fullPath));\n  544  #endif\n  545          }\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaGlobalAttribute.cs:\n    6      /// Marks a method for global usage in Lua scripts\n    7      /// </summary>\n    8:     /// <see cref=\"LuaRegistrationHelper.TaggedInstanceMethods\"/>\n    9      /// <see cref=\"LuaRegistrationHelper.TaggedStaticMethods\"/>\n   10      [AttributeUsage(AttributeTargets.Method)]\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaRegistrationHelper.cs:\n    7      public static class LuaRegistrationHelper\n    8      {\n    9:         #region Tagged instance methods\n   10          /// <summary>\n   11:         /// Registers all public instance methods in an object tagged with <see cref=\"LuaGlobalAttribute\"/> as Lua global functions\n   12          /// </summary>\n   13          /// <param name=\"lua\">The Lua VM to add the methods to</param>\n   14          /// <param name=\"o\">The object to get the methods from</param>\n   15:         public static void TaggedInstanceMethods(LuaState lua, object o)\n   16          {\n   17              #region Sanity checks\n   ..\n   20              #endregion\n   21  \n   22:             foreach (MethodInfo method in o.GetType().GetMethods(BindingFlags.Instance | BindingFlags.Public))\n   23              {\n   24                  foreach (LuaGlobalAttribute attribute in method.GetCustomAttributes(typeof(LuaGlobalAttribute), true))\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/Metatables.cs:\n  164  			{\n  165  				if (methodName != null && translator.metaFunctions.isMemberPresent(objType, methodName))\n  166: 					return translator.metaFunctions.getMember(luaState, objType, obj, methodName, BindingFlags.Instance | BindingFlags.IgnoreCase);\n  167  			}\n  168  			catch { }\n  ...\n  260  				return 2;\n  261  			}\n  262: 			translator.metaFunctions.getMember(luaState, obj.GetType(), obj, \"__luaInterface_base_\" + methodName, BindingFlags.Instance | BindingFlags.IgnoreCase);\n  263  			LuaDLL.lua_settop(luaState, -2);\n  264  			if (LuaDLL.lua_type(luaState, -1) == LuaTypes.LUA_TNIL)\n  265  			{\n  266  				LuaDLL.lua_settop(luaState, -2);\n  267: 				return translator.metaFunctions.getMember(luaState, obj.GetType(), obj, methodName, BindingFlags.Instance | BindingFlags.IgnoreCase);\n  268  			}\n  269  			LuaDLL.lua_pushboolean(luaState, false);\n  ...\n  273  		\n  274  		/// <summary>\n  275: 		/// Does this method exist as either an instance or static?\n  276  		/// </summary>\n  277  		/// <param name=\"objType\"></param>\n  ...\n  286  			\n  287  			//CP: Removed NonPublic binding search\n  288: 			MemberInfo[] members = objType.GetMember(methodName, BindingFlags.Static | BindingFlags.Instance | BindingFlags.Public | BindingFlags.IgnoreCase/* | BindingFlags.NonPublic*/);\n  289  			return (members.Length > 0);\n  290  		}\n  ...\n  292  		/*\n  293           * Pushes the value of a member or a delegate to call it, depending on the type of\n  294:          * the member. Works with static or instance members.\n  295           * Uses reflection to find members, and stores the reflected MemberInfo object in\n  296           * a cache (indexed by the type of the object and the name of the member).\n  ...\n  320                  else\n  321                  {\n  322:                     // If we can't find any suitable instance members, try to find them as statics - but we only want to allow implicit static\n  323                      // lookups for fields/properties/events -kevinh\n  324                      //CP: Removed NonPublic binding search and made case insensitive\n  ...\n  411  				else\n  412  				{\n  413: 					// If we reach this point we found a static method, but can't use it in this context because the user passed in an instance\n  414: 					translator.throwError(luaState, \"can't pass instance to static method \" + methodName);\n  415  					\n  416  					LuaDLL.lua_pushnil(luaState);\n  ...\n  475  			// First try to look up the parameter as a property name\n  476  			string detailMessage;\n  477: 			bool didMember = translator.metaFunctions.trySetMember(luaState, type, target, BindingFlags.Instance | BindingFlags.IgnoreCase, out detailMessage);\n  478  			\n  479  			if (didMember)\n  ...\n  617  		\n  618  		/*\n  619:          * Writes to fields or properties, either static or instance. Throws an error\n  620           * if the operation is invalid.\n  621           */\n  ...\n  666  			{\n  667  				int size = (int)LuaDLL.lua_tonumber(luaState, 2);\n  668: 				translator.push(luaState, Array.CreateInstance(klass.UnderlyingSystemType, size));\n  669  				return 1;\n  670  			}\n  ...\n  762  				IDictionaryEnumerator tableEnumerator = table.GetEnumerator();				\n  763  				tableEnumerator.Reset();\n  764: 				paramArray = Array.CreateInstance(paramArrayType, table.Values.Count);                \n  765  				\n  766  				int paramArrayIndex = 0;\n  ...\n  776  				}\n  777  			} else {\n  778: 				paramArray = Array.CreateInstance(paramArrayType, 1);\n  779  				paramArray.SetValue(luaParamValue, 0);\n  780  			}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/MethodWrapper.cs:\n   83  \n   84          /*\n   85:          * Constructs the wrapper for a known MethodBase instance\n   86           */\n   87          public LuaMethodWrapper(ObjectTranslator translator, object target, IReflect targetType, MethodBase method)\n   ..\n   98              { _BindingType = BindingFlags.Static; }\n   99              else\n  100:             { _BindingType = BindingFlags.Instance; }\n  101          }\n  102          /*\n  ...\n  162                  if (_LastCalledMethod.cachedMethod != null) // Cached?\n  163                  {\n  164:                     int numStackToSkip = isStatic ? 0 : 1; // If this is an instance invoe we will have an extra arg on the stack for the targetObject\n  165                      int numArgsPassed = LuaDLL.lua_gettop(luaState) - numStackToSkip;\n  166                      MethodBase method = _LastCalledMethod.cachedMethod;\n  ...\n  226                      // System.Diagnostics.Debug.WriteLine(\"cache miss on \" + methodName);\n  227  \n  228:                     // If we are running an instance variable, we can now pop the targetObject from the stack\n  229                      if (!isStatic)\n  230                      {\n  231                          if (targetObject == null)\n  232                          {\n  233:                             _Translator.throwError(luaState, String.Format(\"instance method '{0}' requires a non null target object\", _MethodName));\n  234                              LuaDLL.lua_pushnil(luaState);\n  235                              return 1;\n  ...\n  267                  }\n  268              }\n  269:             else // Method from MethodBase instance\n  270              {\n  271                  if (methodToCall.ContainsGenericParameters)\n  ...\n  428              //CP: Fix by Ben Bryant for event handling with one parameter\n  429              //link: http://luaforge.net/forum/message.php?msg_id=9266\n  430:             Delegate handlerDelegate = CodeGeneration.Instance.GetDelegate(eventInfo.EventHandlerType, function);\n  431              eventInfo.AddEventHandler(target, handlerDelegate);\n  432              pendingEvents.Add(handlerDelegate, this);\n  ...\n  438              //MethodInfo mi = eventInfo.EventHandlerType.GetMethod(\"Invoke\");\n  439              //ParameterInfo[] pi = mi.GetParameters();\n  440:             //LuaEventHandler handler=CodeGeneration.Instance.GetEvent(pi[1].ParameterType,function);\n  441  \n  442              //Delegate handlerDelegate=Delegate.CreateDelegate(eventInfo.EventHandlerType,handler,\"HandleEvent\");\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/ObjectTranslator.cs:\n  330  						// Creates and pushes the object in the stack, setting\n  331  						// it as the  metatable of the first argument\n  332: 						object obj = CodeGeneration.Instance.GetClassInstance(klass, luaTable);\n  333  						translator.pushObject(luaState, obj, \"luaNet_metatable\");\n  334  						LuaDLL.lua_newtable(luaState);\n  ...\n  424  				//CP: Added ignore case\n  425  				MethodInfo method=klass.GetMethod(methodName,BindingFlags.Public | BindingFlags.Static |\n  426: 				                                  BindingFlags.Instance | BindingFlags.FlattenHierarchy | BindingFlags.IgnoreCase, null, signature, null);\n  427  				translator.pushFunction(luaState,new LuaCSFunction((new LuaMethodWrapper(translator,target,klass,method)).call));\n  428  			}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Examples/06_LuaCoroutines/LuaCoroutines.cs:\n   69              print(\"Coroutine has exited.\");\n   70  \n   71:             // In order to destroy a coroutine (but not the function in lua, just the coroutine stack instance) simply allow C# to clean up the wrapped object\n   72              co = null;\n   73          }\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/U3DLua/UniLuaEngine.cs:\n   12  // public class UniLuaEngine\n   13  // {\n   14: //     private static UniLuaEngine s_cInstance;\n   15: //     public static UniLuaEngine sInstance\n   16  //     {\n   17  //         get\n   18  //         {\n   19: //             if(s_cInstance == null)\n   20  //             {\n   21: //                 s_cInstance = new UniLuaEngine();\n   22  //             }\n   23: //             return s_cInstance;\n   24  //         }\n   25  //     }\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaFFILib.cs:\n  162  		{\n  163  			return GetMethodAux( lua,\n  164: 				BindingFlags.Instance |\n  165  				BindingFlags.Public |\n  166  				BindingFlags.InvokeMethod );\n  ...\n  206  			var name = lua.ToString(2);\n  207  			var finfo = t.GetField( name,\n  208: 				BindingFlags.Instance |\n  209  				BindingFlags.Public );\n  210  			if( finfo == null )\n  ...\n  239  			var name = lua.ToString(2);\n  240  			var pinfo = t.GetProperty( name,\n  241: 				BindingFlags.Instance |\n  242  				BindingFlags.Public );\n  243  			if( pinfo == null )\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMedia/src/AudioPlayer.cs:\n   73  		{\n   74  			Stop();\n   75: 			MediaMgr.sInstance.RemoveAudioPlayer(this);\n   76  		}\n   77  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMedia/src/MediaMgr.cs:\n   32  		public bool MUTE = false;	//the mute\n   33  \n   34: 		private static MediaMgr s_cInstance;	//the static instance;\n   35  \n   36: 		public static MediaMgr sInstance\n   37  		{\n   38  			get\n   39  			{\n   40: 				if(s_cInstance == null )\n   41  				{\n   42: 					s_cInstance = (new GameObject(\"MediaMgr\")).AddComponent<MediaMgr>();\n   43  				}\n   44: 				return s_cInstance;\n   45  			}\n   46  		}\n   ..\n   56  		void OnDestroy()\n   57  		{\n   58: 			if( s_cInstance == this )\n   59  			{\n   60: 				s_cInstance = null;\n   61  				this.m_cBGM = null;\n   62  				this.m_lstEnableSE.Clear();\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/Controller/CController.cs:\n   30  \n   31  	/// <summary>\n   32: 	/// Init this instance.\n   33  	/// </summary>\n   34  	public virtual void Init()\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/Controller/CPage.cs:\n   21  	public static V s_cView = null;		//view\n   22  	public static C s_cController = null;	//controller\n   23: 	private static P s_cInstance;	//instance\n   24  \n   25  	public bool IsShow{get;private set;}	//is show\n   26  \n   27: 	public static P sInstance\n   28  	{\n   29  		get\n   30  		{\n   31: 			if( s_cInstance == null )\n   32  			{\n   33  				Type t = typeof(P);\n   34  				GameObject obj = new GameObject(t.Name);\n   35: 				s_cInstance = obj.AddComponent<P>();\n   36  				s_cView = obj.AddComponent<V>();\n   37  				s_cController = obj.AddComponent<C>();\n   38  			}\n   39: 			return s_cInstance;\n   40  		}\n   41  	}\n   ..\n   52  \n   53  	/// <summary>\n   54: 	/// Show this instance.\n   55  	/// </summary>\n   56  	public virtual void Show()\n   ..\n   60  \n   61  	/// <summary>\n   62: 	/// Init this instance.\n   63  	/// </summary>\n   64  	public virtual void Init()\n   ..\n   68  \n   69  	/// <summary>\n   70: 	/// Hiden this instance.\n   71  	/// </summary>\n   72  	public virtual void Hiden()\n   ..\n   83  	{\n   84  		IsShow = false;\n   85: 		s_cInstance = null;\n   86  		s_cView = null;\n   87  		s_cController = null;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/Model/CModel.cs:\n   23  		if (s_lstData == null)\n   24  		{\n   25: 			s_lstData = CModelMgr.sInstance.Get(t.FullName);\n   26  			if(s_lstData == null )\n   27  			{\n   28  				s_lstData = new List<object>();\n   29: 				CModelMgr.sInstance.Add(t.FullName, s_lstData);\n   30  			}\n   31  		}\n   ..\n   68  	\n   69  	/// <summary>\n   70: 	/// add the model instance.\n   71  	/// </summary>\n   72  	/// <param name=\"model\"></param>\n   ..\n   77  	\n   78  	/// <summary>\n   79: 	/// Remove this instance.\n   80  	/// </summary>\n   81  	public static void Clear()\n   ..\n   98  	\n   99  	/// <summary>\n  100: 	/// remove the index instance.\n  101  	/// </summary>\n  102  	/// <param name=\"index\"></param>\n  ...\n  109  	\n  110  	/// <summary>\n  111: 	/// remove the instance in the list.\n  112  	/// </summary>\n  113  	/// <param name=\"model\"></param>\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/Model/CModelMgr.cs:\n   21  	private Dictionary<string, List<object>> m_mapData = new Dictionary<string, List<object>>();\n   22  \n   23:     private static CModelMgr s_cInstance;\n   24:     public static CModelMgr sInstance\n   25      {\n   26          get\n   27          {\n   28:             if (s_cInstance == null)\n   29              {\n   30:                 s_cInstance = new CModelMgr();\n   31              }\n   32:             return s_cInstance;\n   33          }\n   34      }\n   ..\n   40  \n   41  	/// <summary>\n   42: 	/// Save this instance.\n   43  	/// </summary>\n   44  	public void Save(string pathFile)\n   ..\n   56  //					JSONClass classNode = new JSONClass();\n   57  //					Type t = mod.GetType();\n   58: //					FieldInfo[] fis = t.GetFields(BindingFlags.Public | BindingFlags.Instance);\n   59  //					foreach (FieldInfo f in fis)\n   60  //					{\n   ..\n   87  //			{\n   88  //				Type modt = Type.GetType(item.Key);\n   89: //				Model mod = ScriptableObject.CreateInstance(modt) as Model;\n   90  //				//Model mod = FormatterServices.GetUninitializedObject(modt) as Model;\n   91: //				FieldInfo[] fis = modt.GetFields(BindingFlags.Public | BindingFlags.Instance);\n   92  //				foreach (FieldInfo f in fis)\n   93  //				{\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/Other/SingletonMono.cs:\n   16  {\n   17    private static readonly string dontDestroyObjectName = \"DontDestroyObject_\" + typeof(T).Name;\n   18:   private static T mInstance = null;\n   19:   public static T sInstance\n   20    {\n   21      get\n   22      {\n   23:       if (mInstance == null)\n   24        {\n   25          GameObject go = GameObject.Find(dontDestroyObjectName);\n   ..\n   28            go = new GameObject(dontDestroyObjectName);\n   29          }\n   30:         mInstance = go.AddComponent<T>() as T;\n   31        }\n   32:       return mInstance;\n   33      }\n   34    }\n   ..\n   36    void Awake()\n   37    {\n   38:     if (mInstance == null)\n   39      {\n   40        GameObject go = GameObject.Find(dontDestroyObjectName);\n   ..\n   45        else\n   46        {\n   47:         mInstance = this as T;\n   48          gameObject.name = dontDestroyObjectName;\n   49          DontDestroyOnLoad(gameObject);\n   ..\n   53      else\n   54      {\n   55:       if (mInstance.gameObject != gameObject)\n   56        {\n   57          Destroy(gameObject);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/Table/CTable.cs:\n   23  	{\n   24  		Type t = this.GetType();\n   25: 		this.s_lstData = TableMgr.sInstance.Get(t.FullName);\n   26  		if (this.s_lstData == null)\n   27  		{\n   28  			this.s_lstData = new List<CTable>();\n   29: 			TableMgr.sInstance.Add(t.FullName, this.s_lstData);\n   30  		}\n   31  	}\n   ..\n   37  	\n   38  	/// <summary>\n   39: 	/// get the instance.\n   40  	/// </summary>\n   41  	/// <typeparam name=\"T\"></typeparam>\n   ..\n   75  		{\n   76  			Type tableType = GetType();\n   77: 			CTable tb = ScriptableObject.CreateInstance(tableType) as CTable;\n   78: 			FieldInfo[] fis = tableType.GetFields(BindingFlags.Public | BindingFlags.Instance);\n   79  			for (int i = 0; i < vecStr.GetLength(0)-1; i++)\n   80  			{\n   ..\n  111  \n  112  	/// <summary>\n  113: 	/// add the model instance.\n  114  	/// </summary>\n  115  	/// <param name=\"model\"></param>\n  ...\n  120  	\n  121  	/// <summary>\n  122: 	/// Remove this instance.\n  123  	/// </summary>\n  124  	public void Remove()\n  ...\n  128  	\n  129  	/// <summary>\n  130: 	/// remove the index instance.\n  131  	/// </summary>\n  132  	/// <param name=\"index\"></param>\n  ...\n  139  	\n  140  	/// <summary>\n  141: 	/// remove the instance in the list.\n  142  	/// </summary>\n  143  	/// <param name=\"model\"></param>\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/Table/TableMgr.cs:\n   20  	private Dictionary<string, List<CTable>> m_mapData = new Dictionary<string, List<CTable>>();\n   21  	\n   22: 	private static TableMgr s_cInstance;\n   23: 	public static TableMgr sInstance\n   24  	{\n   25  		get\n   26  		{\n   27: 			if (s_cInstance == null)\n   28  			{\n   29: 				s_cInstance = new TableMgr();\n   30  			}\n   31: 			return s_cInstance;\n   32  		}\n   33  	}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/View/CView.cs:\n   20  \n   21  	/// <summary>\n   22: 	/// Init this instance.\n   23  	/// </summary>\n   24  	public virtual void Init()\n   25  	{\n   26  		Type t = GetType();\n   27: 		FieldInfo[] fis = t.GetFields(BindingFlags.Public | BindingFlags.Instance);\n   28  		foreach (FieldInfo f in fis)\n   29  		{\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DNetwork-http/src/HTTPLoader.cs:\n   56  \n   57  		/// <summary>\n   58: 		/// Close this instance.\n   59  		/// </summary>\n   60  		internal void Close()\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DNetwork-http/src/HTTPPacketRequest.cs:\n   39  			//string ret = \"\";\n   40  			Type t = GetType();\n   41: 			FieldInfo[] fis = t.GetFields(BindingFlags.Public | BindingFlags.Instance);\n   42  			List<string> paraList = new List<string>();\n   43  			foreach (FieldInfo f in fis)\n   ..\n   68  			WWWForm form = new WWWForm();\n   69  			Type t = GetType();\n   70: 			FieldInfo[] fis = t.GetFields(BindingFlags.Public | BindingFlags.Instance);\n   71  			foreach (FieldInfo f in fis)\n   72  			{\n   ..\n   90  //			MemoryStream resMS = new MemoryStream();\n   91  //			Type t = GetType();\n   92: //			FieldInfo[] fis = t.GetFields(BindingFlags.Public | BindingFlags.Instance);\n   93  //			foreach (FieldInfo f in fis)\n   94  //			{\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DNetwork-http/src/JsonPacker.cs:\n   61  					throw new FormatException ();\n   62  				Type et = t.GetElementType ();\n   63: 				Array ary = Array.CreateInstance (et, json.Count);\n   64  				for (int i = 0; i < ary.Length; i ++)\n   65  					ary.SetValue (Unpack ( json[i] , et), i);\n   ..\n   70  			if(t.IsSubclassOf(typeof(ScriptableObject)))\n   71  			{\n   72: 				o = ScriptableObject.CreateInstance (t);\n   73  			}\n   74  			else\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DNetwork-http/src/ReflectionCacheEntry.cs:\n   23  	public class ReflectionCacheEntry\n   24  	{\n   25: 		const BindingFlags FieldBindingFlags = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.GetField | BindingFlags.SetField;\n   26  		\n   27  		public ReflectionCacheEntry (Type t)\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DNetwork-http/src/MsgPack/CompiledPacker.cs:\n  209  			static MemberInfo[] LookupMembers (Type t)\n  210  			{\n  211: 				BindingFlags baseFlags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic;\n  212  				List<MemberInfo> list = new List<MemberInfo> ();\n  213  				list.AddRange (t.GetFields (baseFlags));\n  ...\n  370  			static MemberInfo[] LookupMembers (Type t)\n  371  			{\n  372: 				BindingFlags baseFlags = BindingFlags.Instance | BindingFlags.Public;\n  373  				List<MemberInfo> list = new List<MemberInfo> ();\n  374  				list.AddRange (t.GetFields (baseFlags));\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DNetwork-http/src/MsgPack/CustomPacker.cs:\n  195  					return null;\n  196  				Type et = t.GetElementType ();\n  197: 				Array ary = Array.CreateInstance (et, (int)reader.Length);\n  198  				for (int i = 0; i < ary.Length; i ++)\n  199  					ary.SetValue (Unpack (reader, et), i);\n  ...\n  221              object o;\n  222              if(t.IsSubclassOf(typeof(ScriptableObject))){\n  223:                 o = ScriptableObject.CreateInstance (t);\n  224              }else{\n  225                  o = FormatterServices.GetUninitializedObject (t);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DNetwork-http/src/MsgPack/ObjectPacker.cs:\n  188  					return null;\n  189  				Type et = t.GetElementType ();\n  190: 				Array ary = Array.CreateInstance (et, (int)reader.Length);\n  191  				for (int i = 0; i < ary.Length; i ++)\n  192  					ary.SetValue (Unpack (reader, et), i);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DNetwork-http/src/MsgPack/ReflectionCacheEntry.cs:\n   23  	public class ReflectionCacheEntry\n   24  	{\n   25: 		const BindingFlags FieldBindingFlags = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.GetField | BindingFlags.SetField;\n   26  		\n   27  		public ReflectionCacheEntry (Type t)\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DNetwork-http/src/MsgPack/Compiler/PackILGenerator.cs:\n  295  			il.EmitSt (num_of_elements);\n  296  \n  297: 			// object o = Array.CreateInstance (Type, Length);\n  298  			il.EmitLd (type);\n  299  			il.EmitLd (num_of_elements);\n  300: 			il.Emit (OpCodes.Call, typeof (Array).GetMethod (\"CreateInstance\", new Type[] {typeof (Type), typeof (int)}));\n  301  			il.Emit (OpCodes.Castclass, arrayType);\n  302  			il.EmitSt (obj);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DPushMessage/src/PushMsg.cs:\n   21  	public string URL = \"\";	//http://www.luzexi.com/?name=ddd&\n   22  \n   23: 	private static PushMsg s_cInstance;\n   24: 	public static PushMsg sInstance\n   25  	{\n   26  		get\n   27  		{\n   28: 			if(s_cInstance == null)\n   29  			{\n   30  				GameObject obj = new GameObject(\"PushMsg\");\n   31: 				s_cInstance = obj.AddComponent<PushMsg>();\n   32  			}\n   33: 			return s_cInstance;\n   34  		}\n   35  	}\n   ..\n   37  	void OnDestroy()\n   38  	{\n   39: 		s_cInstance = null;\n   40  	}\n   41  \n   42  	/// <summary>\n   43: 	/// Init this instance.\n   44  	/// </summary>\n   45  	public void Init()\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DTable/json&xml/JSONSerializer.cs:\n  214      }\n  215  \n  216:     object data = Activator.CreateInstance(type);\n  217      System.Reflection.FieldInfo[] fieldInfo = type.GetFields();\n  218      foreach (System.Reflection.FieldInfo info in fieldInfo)\n  ...\n  323              Type actualType = typeList.MakeGenericType(containedType);\n  324              MethodInfo addMethod = actualType.GetMethod(\"Add\");\n  325:             object list = Activator.CreateInstance(actualType);\n  326              stream.List(info.Name, delegate(int i, JSONInStream stream2){\n  327                object o = DeserializeListElement(stream2, containedType);\n  ...\n  337              MethodInfo addMethod = actualType.GetMethod(\"Add\");\n  338              MethodInfo toArrayMethod = actualType.GetMethod(\"ToArray\");\n  339:             object list = Activator.CreateInstance(actualType);\n  340              stream.List(info.Name, delegate(int i, JSONInStream stream2){\n  341                object o = DeserializeListElement(stream2, containedType);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DTable/json&xml/XMLSerializer.cs:\n  176    private static object DeserializeObject(XMLInStream stream, Type type)\n  177    {\n  178:     object data = Activator.CreateInstance(type);\n  179      System.Reflection.FieldInfo[] fieldInfo = type.GetFields();\n  180      foreach (System.Reflection.FieldInfo info in fieldInfo)\n  ...\n  269              Type actualType = typeList.MakeGenericType(containedType);\n  270              MethodInfo addMethod = actualType.GetMethod(\"Add\");\n  271:             object list = Activator.CreateInstance(actualType);\n  272              stream.Start(info.Name).List(\"item\", delegate(XMLInStream stream2){\n  273                object o = DeserializeListElement(stream2, containedType);\n  ...\n  283              MethodInfo addMethod = actualType.GetMethod(\"Add\");\n  284              MethodInfo toArrayMethod = actualType.GetMethod(\"ToArray\");\n  285:             object list = Activator.CreateInstance(actualType);\n  286              stream.Start(info.Name).List(\"item\", delegate(XMLInStream stream2){\n  287                object o = DeserializeListElement(stream2, containedType);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DUtil/CSingleton.cs:\n   11  	where T : new()\n   12  {\n   13: 	private static T m_sInstance;\n   14: 	public static T sInstance\n   15  	{\n   16  		get\n   17  		{\n   18: 			if(m_sInstance == null)\n   19  			{\n   20: 				m_sInstance = new T();\n   21  			}\n   22: 			return m_sInstance;\n   23  		}\n   24  	}\n   25  \n   26: 	//destroy instance\n   27  	public void Destroy()\n   28  	{\n   29: 		m_sInstance = default(T);\n   30  	}\n   31  }\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DUtil/CSingletonMono.cs:\n   11  	where T : MonoBehaviour\n   12  {\n   13: 	private static T m_sInstance;\n   14: 	public static T sInstance\n   15  	{\n   16  		get\n   17  		{\n   18: 			if (m_sInstance == null)\n   19  			{\n   20: 				m_sInstance = (T)FindObjectOfType (typeof(T));\n   21   \n   22: 				if (m_sInstance == null)\n   23  				{\n   24  					GameObject obj = new GameObject(typeof(T).Name);\n   25: 					m_sInstance = obj.AddComponent<T>();\n   26  				}\n   27  			}\n   28   \n   29: 			return m_sInstance;\n   30  		}\n   31  	} \n   ..\n   33  	void OnDestroy()\n   34  	{\n   35: 		if( m_sInstance == this ){\n   36: 			m_sInstance = default(T);\n   37  		}\n   38  	}\n   ..\n   40  	public static bool IsValid()\n   41  	{\n   42: 		return ( sInstance != null ) ;\n   43  	}\n   44  }\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DUtil/README.md:\n   10  CRandom.cs : It will help you to get random data .<br>\n   11  <br>\n   12: CSingleton.cs : When only one instance in the word you can use it .<br>\n   13  <br>\n   14: CSingletonMono.cs : When only one instance one gameobject in the word and you have to use monobehavior function you can use it .<br>\n   15  <br>\n   16  CTime.cs : It will convert unix time to c# time or convert c# time to unix time .<br>\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DWebView/WebViewObject.cs:\n   42  public class WebViewObject : MonoBehaviour\n   43  {\n   44: 	private static WebViewObject s_mInstance;\n   45: 	public static WebViewObject sInstance\n   46  	{\n   47  		get\n   48  		{\n   49: 			if(s_mInstance == null)\n   50  			{\n   51  				GameObject obj = new GameObject(\"webView\");\n   52: 				s_mInstance = obj.AddComponent<WebViewObject>();\n   53  			}\n   54: 			return s_mInstance;\n   55  		}\n   56  	}\n   ..\n   93  		string gameObject, int width, int height, bool ineditor);\n   94  	[DllImport(\"WebView\")]\n   95: 	private static extern int _WebViewPlugin_Destroy(IntPtr instance);\n   96  	[DllImport(\"WebView\")]\n   97  	private static extern void _WebViewPlugin_SetRect(\n   98: 		IntPtr instance, int width, int height);\n   99  	[DllImport(\"WebView\")]\n  100  	private static extern void _WebViewPlugin_SetVisibility(\n  101: 		IntPtr instance, bool visibility);\n  102  	[DllImport(\"WebView\")]\n  103  	private static extern void _WebViewPlugin_LoadURL(\n  104: 		IntPtr instance, string url);\n  105  	[DllImport(\"WebView\")]\n  106  	private static extern void _WebViewPlugin_EvaluateJS(\n  107: 		IntPtr instance, string url);\n  108  	[DllImport(\"WebView\")]\n  109: 	private static extern void _WebViewPlugin_Update(IntPtr instance,\n  110  		int x, int y, float deltaY, bool down, bool press, bool release,\n  111  		bool keyPress, short keyCode, string keyChars, int textureId);\n  ...\n  114  	private static extern IntPtr _WebViewPlugin_Init(string gameObject);\n  115  	[DllImport(\"__Internal\")]\n  116: 	private static extern int _WebViewPlugin_Destroy(IntPtr instance);\n  117  	[DllImport(\"__Internal\")]\n  118  	private static extern void _WebViewPlugin_SetMargins(\n  119: 		IntPtr instance, int left, int top, int right, int bottom);\n  120  	[DllImport(\"__Internal\")]\n  121  	private static extern void _WebViewPlugin_SetVisibility(\n  122: 		IntPtr instance, bool visibility);\n  123  	[DllImport(\"__Internal\")]\n  124  	private static extern void _WebViewPlugin_LoadURL(\n  125: 		IntPtr instance, string url);\n  126  	[DllImport(\"__Internal\")]\n  127  	private static extern void _WebViewPlugin_EvaluateJS(\n  128: 		IntPtr instance, string url);\n  129      [DllImport(\"__Internal\")]\n  130      private static extern void _WebViewPlugin_SetFrame(\n  131:         IntPtr instance, int x , int y , int width , int height);\n  132  #endif\n  133  \n  ...\n  180  		Application.ExternalCall(\"unityWebView.destroy\", name);\n  181  #endif\n  182: 		s_mInstance = null;\n  183  	}\n  184  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DWebView/platform_src/iOS/WebView.mm:\n  116  extern \"C\" {\n  117  	void *_WebViewPlugin_Init(const char *gameObjectName);\n  118: 	void _WebViewPlugin_Destroy(void *instance);\n  119  	void _WebViewPlugin_SetFrame(void* instace,NSInteger x,NSInteger y,NSInteger width,NSInteger height);\n  120  	void _WebViewPlugin_SetMargins(\n  121: 		void *instance, int left, int top, int right, int bottom);\n  122: 	void _WebViewPlugin_SetVisibility(void *instance, BOOL visibility);\n  123: 	void _WebViewPlugin_LoadURL(void *instance, const char *url);\n  124: 	void _WebViewPlugin_EvaluateJS(void *instance, const char *url);\n  125  }\n  126  \n  127  void *_WebViewPlugin_Init(const char *gameObjectName)\n  128  {\n  129: 	id instance = [[WebViewPlugin alloc] initWithGameObjectName:gameObjectName];\n  130: 	return (void *)instance;\n  131  }\n  132  \n  133: void _WebViewPlugin_Destroy(void *instance)\n  134  {\n  135: 	WebViewPlugin *webViewPlugin = (WebViewPlugin *)instance;\n  136  	[webViewPlugin release];\n  137  }\n  138  \n  139: void _WebViewPlugin_SetFrame(void* instance,NSInteger x,NSInteger y,NSInteger width,NSInteger height)\n  140  {\n  141:     float screenScale = [ UIScreen instancesRespondToSelector:@selector( scale ) ]?\n  142      [ UIScreen mainScreen ].scale:1.0f;\n  143      \n  144:     WebViewPlugin* webViewPlugin = (WebViewPlugin*)instance;\n  145      if(UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad){\n  146          if(screenScale == 2.0)\n  ...\n  151  \n  152  void _WebViewPlugin_SetMargins(\n  153: 	void *instance, int left, int top, int right, int bottom)\n  154  {\n  155: 	WebViewPlugin *webViewPlugin = (WebViewPlugin *)instance;\n  156  	[webViewPlugin setMargins:left top:top right:right bottom:bottom];\n  157  }\n  158  \n  159: void _WebViewPlugin_SetVisibility(void *instance, BOOL visibility)\n  160  {\n  161: 	WebViewPlugin *webViewPlugin = (WebViewPlugin *)instance;\n  162  	[webViewPlugin setVisibility:visibility];\n  163  }\n  164  \n  165: void _WebViewPlugin_LoadURL(void *instance, const char *url)\n  166  {\n  167: 	WebViewPlugin *webViewPlugin = (WebViewPlugin *)instance;\n  168  	[webViewPlugin loadURL:url];\n  169  }\n  170  \n  171: void _WebViewPlugin_EvaluateJS(void *instance, const char *js)\n  172  {\n  173: 	WebViewPlugin *webViewPlugin = (WebViewPlugin *)instance;\n  174  	[webViewPlugin evaluateJS:js];\n  175  }\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DWebView/platform_src/Mac/Sources/WebView.m:\n  264  void *_WebViewPlugin_Init(\n  265  	const char *gameObject, int width, int height, BOOL inEditor);\n  266: void _WebViewPlugin_Destroy(void *instance);\n  267: void _WebViewPlugin_SetRect(void *instance, int width, int height);\n  268: void _WebViewPlugin_SetVisibility(void *instance, BOOL visibility);\n  269: void _WebViewPlugin_LoadURL(void *instance, const char *url);\n  270: void _WebViewPlugin_EvaluateJS(void *instance, const char *url);\n  271: void _WebViewPlugin_Update(void *instance, int x, int y, float deltaY,\n  272  	BOOL buttonDown, BOOL buttonPress, BOOL buttonRelease,\n  273  	BOOL keyPress, unsigned char keyCode, const char *keyChars, int textureId);\n  ...\n  284  \n  285  	inEditor = ineditor;\n  286: 	id instance = [[WebViewPlugin alloc]\n  287  		initWithGameObject:gameObject width:width height:height];\n  288: 	[pool addObject:[NSValue valueWithPointer:instance]];\n  289: 	return (void *)instance;\n  290  }\n  291  \n  292: void _WebViewPlugin_Destroy(void *instance)\n  293  {\n  294: 	WebViewPlugin *webViewPlugin = (WebViewPlugin *)instance;\n  295  	[webViewPlugin release];\n  296: 	[pool removeObject:[NSValue valueWithPointer:instance]];\n  297  }\n  298  \n  299: void _WebViewPlugin_SetRect(void *instance, int width, int height)\n  300  {\n  301: 	WebViewPlugin *webViewPlugin = (WebViewPlugin *)instance;\n  302  	[webViewPlugin setRect:width height:height];\n  303  }\n  304  \n  305: void _WebViewPlugin_SetVisibility(void *instance, BOOL visibility)\n  306  {\n  307: 	WebViewPlugin *webViewPlugin = (WebViewPlugin *)instance;\n  308  	[webViewPlugin setVisibility:visibility];\n  309  }\n  310  \n  311: void _WebViewPlugin_LoadURL(void *instance, const char *url)\n  312  {\n  313: 	WebViewPlugin *webViewPlugin = (WebViewPlugin *)instance;\n  314  	[webViewPlugin loadURL:url];\n  315  }\n  316  \n  317: void _WebViewPlugin_EvaluateJS(void *instance, const char *js)\n  318  {\n  319: 	WebViewPlugin *webViewPlugin = (WebViewPlugin *)instance;\n  320  	[webViewPlugin evaluateJS:js];\n  321  }\n  322  \n  323: void _WebViewPlugin_Update(void *instance, int x, int y, float deltaY,\n  324  	BOOL buttonDown, BOOL buttonPress, BOOL buttonRelease, BOOL keyPress,\n  325  	unsigned char keyCode, const char *keyChars, int textureId)\n  326  {\n  327: 	WebViewPlugin *webViewPlugin = (WebViewPlugin *)instance;\n  328  	[webViewPlugin update:x y:y deltaY:deltaY buttonDown:buttonDown\n  329  		buttonPress:buttonPress buttonRelease:buttonRelease keyPress:keyPress\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/CoroutineInstance.cs:\n    2  using System.Collections;\n    3  \n    4: public class CoroutineInstance : MonoBehaviour\n    5  {\n    6  	public Coroutine ProcessWork (IEnumerator routine)\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/StateMachine.cs:\n   61  			if (parameter == null && createIfNull) {\n   62  				if (createIfNull) {\n   63: 					parameter = (NamedParameter)ScriptableObject.CreateInstance (value.GetType ().GetParameterType ());\n   64  					parameter.GetType ().GetProperty (\"Value\").SetValue (parameter, value, null);\n   65  					parameter.Name = name;\n   ..\n  108  			var listType = typeof(List<>);\n  109  			var constructedListType = listType.MakeGenericType(t);\n  110: 			var instance = Activator.CreateInstance(constructedListType);\n  111: 			return (IList)instance;\n  112  		}\n  113  \n  ...\n  161  							NamedParameter mParameter=(NamedParameter)fields[af].GetValue(action);\n  162  							if(mParameter == null){\n  163: 								mParameter=(NamedParameter)ScriptableObject.CreateInstance(fields[af].FieldType);\n  164  							}\n  165  							NamedParameter paramter=(NamedParameter)ScriptableObject.Instantiate(mParameter);\n  ...\n  214  								UnityEngine.Object mParameter=(UnityEngine.Object)fields[af].GetValue(condition);\n  215  								if(mParameter == null){\n  216: 									mParameter=(NamedParameter)ScriptableObject.CreateInstance(fields[af].FieldType);\n  217  								}\n  218  								\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/StateMachineBehaviour.cs:\n   25  			if (enabled) {\n   26  				stateMachine.behaviour = this;\n   27: 				executingStateMachine = ScriptableObject.CreateInstance<StateMachine> ();\n   28  				executingStateMachine.owner = gameObject;\n   29  				StateMachine.Copy (stateMachine, executingStateMachine, false);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Actions/GameObject/GetInstanceID.cs:\n    4  namespace StateMachine.Action{\n    5  	[Info (category = \"GameObject\",  \n    6: 	       description = \"Gets the InstanceID of an Object.\",\n    7  	       url = \"\")]\n    8  	[System.Serializable]\n    9: 	public class GetInstanceID : GameObjectAction {\n   10  		[RequiredField(DefaultReference.Required,false,false)]\n   11: 		[Tooltip(\"InstanceID to store\")]\n   12  		public IntParameter store;\n   13  		[Tooltip(\"Execute the action every frame.\")]\n   ..\n   20  				return;			\n   21  			}\n   22: 			store.Value= ((GameObject)gameObject.Value).GetInstanceID ();\n   23  			if (!everyFrame) {\n   24  				Finish ();\n   ..\n   28  		public override void OnUpdate ()\n   29  		{\n   30: 			store.Value= ((GameObject)gameObject.Value).GetInstanceID ();\n   31  		}\n   32  	}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Actions/GameObject/SetProperty.cs:\n  106  			var listType = typeof(List<>);\n  107  			var constructedListType = listType.MakeGenericType(t);\n  108: 			var instance = Activator.CreateInstance(constructedListType);\n  109: 			return (IList)instance;\n  110  		}\n  111  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Actions/String/ReplaceString.cs:\n    5  namespace StateMachine.Action{\n    6  	[Info (category = \"String\",   \n    7: 	       description = \"Returns a new string in which all occurrences of a specified string in this instance are replaced with another specified string.\",\n    8  	       url = \"http://msdn.microsoft.com/en-us/library/czx8s9ts(v=vs.110).aspx\")]\n    9  	[System.Serializable]\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Actions/String/Substring.cs:\n    5  namespace StateMachine.Action{\n    6  	[Info (category = \"String\",   \n    7: 	       description = \"Retrieves a substring from this instance. The substring starts at a specified character position and continues to the end of the string.\",\n    8  	       url = \"http://msdn.microsoft.com/en-us/library/hxthx5h6(v=vs.110).aspx\")]\n    9  	[System.Serializable]\n   ..\n   11  		[Tooltip(\"The string to use.\")]\n   12  		public StringParameter value;\n   13: 		[Tooltip(\"The zero-based starting character position of a substring in this instance.\")]\n   14  		public IntParameter startIndex;\n   15  		[RequiredField(DefaultReference.Required,false,false)]\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Conditions/Parameter/CompareObject.cs:\n   19  		{\n   20  			if (parameter.Value != null && value.Value != null) {\n   21: 				return ((parameter.Value.GetInstanceID()== value.GetInstanceID())==equals.Value);			\n   22  			}\n   23  			return false;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Conditions/Parameter/IsStringEndWith.cs:\n    4  namespace StateMachine.Condition{\n    5  	[Info (category = \"Parameter\",    \n    6: 	       description = \"Determines whether the end of this string instance matches the specified string.\",\n    7  	       url = \"http://msdn.microsoft.com/en-us/library/2333wewz(v=vs.110).aspx\")]\n    8  	[System.Serializable]\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Editor/ActionBrowser.cs:\n   10  namespace StateMachine{\n   11  	public class ActionBrowser :  EditorWindow{\n   12: 		public static ActionBrowser instance;\n   13  		public static void ShowWindow()\n   14  		{\n   ..\n   67  							DestroySelectedAction();\n   68  \n   69: 							StateAction action = (StateAction)ScriptableObject.CreateInstance(actionType);\n   70  							action.hideFlags=HideFlags.HideAndDontSave;\n   71  							action.name = actionType.ToString ().Split ('.').Last ();\n   ..\n   74  							for (int i=0; i< fields.Length; i++) {\n   75  								if(fields[i].FieldType.IsSubclassOf(typeof(NamedParameter))){\n   76: 									NamedParameter paramter=(NamedParameter)ScriptableObject.CreateInstance(fields[i].FieldType);\n   77  									paramter.hideFlags=HideFlags.HideAndDontSave;\n   78  									paramter.name=fields[i].Name;\n   ..\n  161  \n  162  		private void OnEnable(){\n  163: 			if (instance == null) {\n  164: 				instance=this;			\n  165  			}\n  166  			actions = GetActionTypesSorted ();\n  ...\n  168  \n  169  		private void Update(){\n  170: 			if (StateMachineWindow.instance == null) {\n  171  				Close();			\n  172  			}		\n  ...\n  174  \n  175  		private void OnDestroy(){\n  176: 			instance = null;\n  177  			DestroySelectedAction ();\n  178  		}\n  179  \n  180  		public static void RepaintAll() {\n  181: 			if (instance != null) {\n  182: 				instance.Repaint();			\n  183  			}\n  184  		}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Editor/AddStateMachine.cs:\n   49  		static void HierarchyWindowItemCallback(int pID, Rect pRect)\n   50  		{\n   51: 			GameObject go = EditorUtility.InstanceIDToObject(pID) as GameObject;\n   52  			if (go != null && go.GetComponent<StateMachineBehaviour>() != null)\n   53  			{\n   ..\n   73  						if(pRect.Contains(Event.current.mousePosition)){\n   74  							// we create a new GameObject using the asset's name.\n   75: 							var gameObject = (GameObject)EditorUtility.InstanceIDToObject(pID);\n   76  							\n   77  							// we attach component X, associated with asset X.\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Editor/AssetCreator.cs:\n   51  			}\n   52  			T data = null;\n   53: 			data = ScriptableObject.CreateInstance<T> ();\n   54  			AssetDatabase.CreateAsset (data, path);\n   55  			AssetDatabase.SaveAssets ();\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Editor/ConditionBrowser.cs:\n   10  namespace StateMachine{\n   11  	public class ConditionBrowser :  EditorWindow{\n   12: 		public static ConditionBrowser instance;\n   13  		public static void ShowWindow()\n   14  		{\n   ..\n   67  							DestroySelectedCondition();\n   68  							\n   69: 							StateCondition condition = (StateCondition)ScriptableObject.CreateInstance(conditionType);\n   70  							condition.hideFlags=HideFlags.HideAndDontSave;\n   71  							condition.name = conditionType.ToString ().Split ('.').Last ();\n   ..\n   74  							for (int i=0; i< fields.Length; i++) {\n   75  								if(fields[i].FieldType.IsSubclassOf(typeof(NamedParameter))){\n   76: 									NamedParameter paramter=(NamedParameter)ScriptableObject.CreateInstance(fields[i].FieldType);\n   77  									paramter.hideFlags=HideFlags.HideAndDontSave;\n   78  									paramter.name=fields[i].Name;\n   ..\n  162  \n  163  		public static void RepaintAll() {\n  164: 			if (instance != null) {\n  165: 				instance.Repaint();			\n  166  			}\n  167  		}\n  168  \n  169  		private void OnEnable(){\n  170: 			if (instance == null) {\n  171: 				instance = this;\n  172  			}\n  173  			conditions = GetConditionTypesSorted ();\n  ...\n  175  		\n  176  		private void Update(){\n  177: 			if (StateMachineWindow.instance == null) {\n  178  				Close();			\n  179  			}		\n  ...\n  181  		\n  182  		private void OnDestroy(){\n  183: 			instance = null;\n  184  			DestroySelectedCondition ();\n  185  		}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Editor/CustomInspector.cs:\n  105  				if(drop_area.Contains(evt.mousePosition)){\n  106  					StateMachine stateMachine=StateMachineWindow.StateMachineEditor.ActiveStateMachine.root;\n  107: 					StateMachine layerStateMachine=ScriptableObject.CreateInstance<StateMachine>();\n  108  					layerStateMachine.root=stateMachine;\n  109  					layerStateMachine.layer=(stateMachine.layers.Count+1);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Editor/GlobalParameterEditor.cs:\n  163  								GUI.changed=false;\n  164  								ObjectParameter mParam=parameter as ObjectParameter;\n  165: 								if(!mParam.FromSceneInstance){\n  166  									mParam.Value=EditorGUILayout.ObjectField(name,mParam.Value,typeof(UnityEngine.Object),true);\n  167  								}else{\n  ...\n  177  								if(GUI.changed){\n  178  									if(!EditorUtility.IsPersistent(mParam.Value) && mParam.Value is GameObject){\n  179: 										mParam.FromSceneInstance=true;\n  180  										mParam.Reference=mParam.Value.name+\"(\"+EditorApplication.currentScene+\")\";\n  181  										AddToParameterCollection mTemp=((GameObject)mParam.Value).GetComponent<AddToParameterCollection>();\n  ...\n  243  \n  244  		private void CreateParameter(){\n  245: 			NamedParameter parameter = (NamedParameter)ScriptableObject.CreateInstance (mType);\n  246  			parameter.Name = parameterName;\n  247  			parameter.Group = parameterGroup;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Editor/MainToolbar.cs:\n   90  				toolsMenu.AddItem( new GUIContent(\"[Create New]\"),false, delegate() {\n   91  					StateMachine stateMachine = StateMachineUtility.CreateStateMachine (true);\n   92: 					StateMachineWindow.instance.SetStateMachine(stateMachine);\n   93  				});\n   94  				toolsMenu.DropDown(new Rect(Event.current.mousePosition.x,Event.current.mousePosition.y,0,Event.current.mousePosition.y));\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Editor/StateMachineBehaviourInspector.cs:\n   30  			GUI.enabled = behaviour.stateMachine != null && EditorUtility.IsPersistent(behaviour.stateMachine);\n   31  			if (GUILayout.Button (\"Bind to GameObject\")) {\n   32: 				StateMachine stateMachine=ScriptableObject.CreateInstance<StateMachine>();\n   33  				stateMachine.name=behaviour.stateMachine.name+\"(Bind)\";\n   34  				StateMachine.Copy(behaviour.stateMachine,stateMachine,false);\n   35  				behaviour.stateMachine=stateMachine;\n   36  				AssetDatabase.SaveAssets();\n   37: 				if(StateMachineWindow.instance != null){\n   38  					StateMachineWindow.StateMachineEditor.ActiveStateMachine=stateMachine;\n   39  					StateMachineWindow.StateMachineEditor.ActiveGameObject=behaviour.gameObject;\n   ..\n   45  			GUI.enabled = true;\n   46  \n   47: 			if (StateMachineWindow.instance == null) {\n   48  				if (GUILayout.Button (\"Graph - Window\")) {\n   49  					StateMachineWindow window = StateMachineWindow.ShowWindow();\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Editor/StateMachineEditor.cs:\n  461  					if(!(action is GetProperty || action is SetProperty)){\n  462  						\n  463: 						FieldInfo[] fields = action.GetType ().GetFields (BindingFlags.Instance | BindingFlags.Public);\n  464  						for (int i=0; i< fields.Length; i++) {\n  465  							if (fields [i].FieldType.IsSubclassOf (typeof(NamedParameter))) {\n  ...\n  482  			if ( state.transitions != null && state.transitions.Count > transitionIndex && state.transitions[transitionIndex].conditions != null) {\n  483  				foreach (StateCondition condition in state.transitions[transitionIndex].conditions) {\n  484: 					FieldInfo[] fields = condition.GetType ().GetFields (BindingFlags.Instance | BindingFlags.Public);\n  485  					for (int i=0; i< fields.Length; i++) {\n  486  						if (fields [i].FieldType.IsSubclassOf (typeof(NamedParameter))) {\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Editor/StateMachineGUI.cs:\n   79  					DrawDescription (node as Node);\n   80  				}\n   81: 				FieldInfo[] fields = node.GetType ().GetFields (BindingFlags.Instance | BindingFlags.Public).OrderBy(field => field.MetadataToken).ToArray();\n   82  \n   83  				List<string> compoundFieldNames=GetCompoundFieldNames(node as Node,fields);\n   ..\n  398  				return true;			\n  399  			}\n  400: 			FieldInfo[] fields = node.GetType ().GetFields (BindingFlags.Instance | BindingFlags.Public);\n  401  			for (int i=0; i< fields.Length; i++) {\n  402  				if(fields[i].FieldType.IsSubclassOf(typeof(NamedParameter))){\n  403  					NamedParameter parameter = (NamedParameter)fields[i].GetValue (node);\n  404  					if(parameter == null){\n  405: 						parameter=(NamedParameter)ScriptableObject.CreateInstance(fields[i].FieldType);\n  406  						fields[i].SetValue(node,parameter);\n  407  						if (EditorUtility.IsPersistent (node)) {\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Editor/StateMachineUtility.cs:\n   45  			}\n   46  			RecordUndo (stateMachine);\n   47: 			AnyState anyState = ScriptableObject.CreateInstance<AnyState> ();\n   48  			anyState.id = Guid.NewGuid ().ToString();\n   49  			anyState.position = new Rect (position.x,position.y, State.kNodeWidth, State.kNodeHeight);\n   ..\n   67  			}\n   68  			RecordUndo (stateMachine);\n   69: 			State state = ScriptableObject.CreateInstance<State> ();\n   70  			state.id = Guid.NewGuid ().ToString();\n   71  			state.position = new Rect (position.x, position.y, State.kNodeWidth, State.kNodeHeight);\n   ..\n  146  			}\n  147  			RecordUndo (stateMachine);\n  148: 			NamedParameter parameter = (NamedParameter)ScriptableObject.CreateInstance (type);\n  149  			parameter.Name =\"New \"+ type.ToString ().Split('.').Last().Replace(\"Parameter\",\"\");\n  150  			parameter.name = type.ToString ();\n  ...\n  210  \n  211  			RecordUndo (stateMachine);\n  212: 			StateTransition transition = ScriptableObject.CreateInstance<StateTransition>();\n  213  			transition.fromState = from;\n  214  			transition.toState=to;\n  ...\n  257  			for (int i=0; i< fields.Length; i++) {\n  258  				if(fields[i].FieldType.IsSubclassOf(typeof(NamedParameter))){\n  259: 					NamedParameter paramter=(NamedParameter)ScriptableObject.CreateInstance(fields[i].FieldType);\n  260  					paramter.name=fields[i].Name;\n  261  					fields[i].SetValue(node,paramter);\n  ...\n  312  			}\n  313  \n  314: 			StateAction action = (StateAction)ScriptableObject.CreateInstance(type);\n  315  			RecordUndoSimple (state, action,\"Create Action\");\n  316  			action.name = type.GetCategory () + \".\" + type.ToString ().Split ('.').Last ();\n  ...\n  368  				return;			\n  369  			}\n  370: 			StateCondition condition = (StateCondition)ScriptableObject.CreateInstance(type);	\n  371  			condition.name = type.GetCategory () + \".\" + type.ToString ().Split ('.').Last ();\n  372  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Editor/StateMachineWindow.cs:\n    9  namespace StateMachine{\n   10  	public class StateMachineWindow : EditorWindow {\n   11: 		public static StateMachineWindow instance;\n   12  		private const float inspectorMinWidth=150f;\n   13  		private const float inspectorMaxWidth=555f;\n   ..\n   42  		private void OnEnable(){\n   43  			if (stateMachineEditor == null) {\n   44: 				stateMachineEditor=ScriptableObject.CreateInstance<StateMachineEditor>();	\n   45  			}\n   46  			if (customInspector == null) {\n   47: 				customInspector=ScriptableObject.CreateInstance<CustomInspector>();	\n   48  			}\n   49  \n   50: 			if (instance == null) {\n   51: 				instance = this;\n   52  			}\n   53  		}\n   ..\n   69  	\n   70  		public static void RepaintAll(){\n   71: 			if (instance != null) {\n   72: 				instance.Repaint();			\n   73  			}\n   74  			ConditionBrowser.RepaintAll ();\n   ..\n   78  		public static StateMachineEditor StateMachineEditor{\n   79  			get {\n   80: 				return instance != null?instance.stateMachineEditor:null;\n   81  			}\n   82  		}\n   ..\n   84  		public static CustomInspector CustomInspector{\n   85  			get{\n   86: 				return instance != null?instance.customInspector:null;\n   87  			}\n   88  		}\n   ..\n  100  			DestroyImmediate (CustomInspector, true);\n  101  			Selection.activeObject = null;\n  102: 			instance = null;\n  103  		}\n  104  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Parameters/GlobalParameterCollection.cs:\n   14  				collection=Resources.Load<GlobalParameterCollection>(\"GlobalParameterCollection\");\n   15  				/*if(Application.isPlaying){\n   16: 					GlobalParameterCollection mCollection=ScriptableObject.CreateInstance<GlobalParameterCollection>();\n   17  					mCollection.parameters=new List<NamedParameter>();\n   18  					if(collection != null){\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Parameters/ObjectParameter.cs:\n    6  	public class ObjectParameter : NamedParameter {\n    7  		[SerializeField]\n    8: 		private bool fromSceneInstance;\n    9: 		public bool FromSceneInstance{\n   10  			get{\n   11: 				return fromSceneInstance;\n   12  			}\n   13  			set{\n   14: 				fromSceneInstance=value;\n   15  			}\n   16  		}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Utility/ReflectionUtility.cs:\n   48  		public static string[] GetFieldNames(this Type type,bool includePrimitive, params Type[] typeMatch ){\n   49  			FieldInfo[] fields = type\n   50: 				.GetFields (BindingFlags.Public | BindingFlags.Instance)\n   51  					.ToArray();\n   52  			List<string> selected = new List<string> ();\n   ..\n   62  		public static string[] GetPropertyNames(this Type type,bool includePrimitive,bool requiresWrite, params Type[] typeMatch ){\n   63  			PropertyInfo[] properties = type\n   64: 				.GetProperties (BindingFlags.Public | BindingFlags.Instance)\n   65  					.ToArray();\n   66  			List<string> selected = new List<string> ();\n   ..\n   87  		public static string[] GetMethodNames(this Type type ){\n   88  			MethodInfo[] methods = type\n   89: 				.GetMethods (BindingFlags.Public | BindingFlags.Instance)\n   90  					.ToArray();\n   91  			return methods.Where(y=>y.GetParameters().Length==0 && y.ReturnType==typeof(void)).Select (x => x.Name).ToArray ();\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Core/AstarData.cs:\n   12  	 * \\ingroup relevant\n   13  	 * \n   14: 	 * An instance of this class is assigned to AstarPath.astarData, from it you can access all graphs loaded through the #graphs variable.\\n\n   15  	 * This class also handles a lot of the high level serialization.\n   16  	 */\n   ..\n   65  		\n   66  		[System.NonSerialized]\n   67: 		/** All graphs this instance holds.\n   68  		 * This will be filled only after deserialization has completed.\n   69  		 * May contain null entries if graph have been removed.\n   ..\n  409  		}\n  410  		\n  411: 		/** Creates a new instance of a graph of type \\a type. If no matching graph type was found, an error is logged and null is returned\n  412  		 * \\returns The created graph \n  413  		 * \\see CreateGraph(System.Type) */\n  ...\n  425  		}\n  426  		\n  427: 		/** Creates a new graph instance of type \\a type\n  428  		 * \\see CreateGraph(string) */\n  429  		public NavGraph CreateGraph (System.Type type) {\n  430: 			NavGraph g = System.Activator.CreateInstance (type) as NavGraph;\n  431  			g.active = active;\n  432  			return g;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Core/AstarPath.cs:\n   26  /** Main Pathfinding System.\n   27   * This class handles all the pathfinding system, calculates all paths and stores the info.\\n\n   28:  * This class is a singleton class, meaning it should only exist at most one active instance of it in the scene.\\n\n   29   * It might be a bit hard to use directly, usually interfacing with the pathfinding system is done through the Seeker class.\n   30   * \n   ..\n 1425  #endif\n 1426  		\n 1427: 		//Don't accept any more path calls to this AstarPath instance.\n 1428  		//This will cause all eventual multithreading threads to exit\n 1429  		pathQueue.TerminateReceivers();\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Core/Path.cs:\n   14  		private List<string> claimInfo = new List<string>();\n   15  		~Path() {\n   16: 			Debug.Log (\"Destroying \" + GetType().Name + \" instance\");\n   17  			if (claimed.Count > 0) {\n   18  				Debug.LogWarning (\"Pool Is Leaking. See list of claims:\\n\" +\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Core/AI/Seeker.cs:\n  377  	//private int lastPathCall = -1000;\n  378  	\n  379: 	/** Returns a new path instance. The path will be taken from the path pool if path recycling is turned on.\\n\n  380  	 * This path can be sent to #StartPath(Path,OnPathDelegate,int) with no change, but if no change is required #StartPath(Vector3,Vector3,OnPathDelegate) does just that.\n  381  	 * \\code Seeker seeker = GetComponent (typeof(Seeker)) as Seeker;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Core/Nodes/GraphNode.cs:\n   65  		 * Once called, subsequent calls to this method will not do anything.\n   66  		 * \n   67: 		 * \\note Assumes the current active AstarPath instance is the same one that created this node.\n   68  		 */\n   69  		public void Destroy () {\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Core/Serialization/JsonConverters.cs:\n   30  			\n   31  			\n   32: 			//int instanceID = (int)values[\"InstanceID\"];\n   33  			\n   34  			string name = (string)values[\"Name\"];\n   ..\n   77  			Dictionary<string, object> dict = new Dictionary<string, object>();\n   78  			\n   79: 			dict.Add (\"InstanceID\",obj.GetInstanceID());\n   80  			dict.Add (\"Name\",obj.name);\n   81  			dict.Add (\"Type\",obj.GetType().AssemblyQualifiedName);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Core/Serialization/JsonSerializer.cs:\n  553  \n  554  \n  555: 				NavGraph tmp = data.CreateGraph(tp);//(NavGraph)System.Activator.CreateInstance(tp);\n  556  \n  557  #if !ASTAR_NO_JSON\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Editor/AstarPathEditor.cs:\n 2174  		\n 2175  		if (graphEditorTypes.ContainsKey (graphType)) {\n 2176: 			GraphEditor ge = System.Activator.CreateInstance (graphEditorTypes[graphType].editorType) as GraphEditor;\n 2177  			ge.editor = this;\n 2178  			return ge;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Editor/AstarUpdateWindow.cs:\n   29  \n   30  			AstarUpdateWindow window = EditorWindow.GetWindow<AstarUpdateWindow> (true,\"\",true);\n   31: 				//ScriptableObject.CreateInstance<AstarUpdateWindow>();//new AstarUpdateWindow();//(AstarUpdateWindow)EditorWindow.GetWindow (typeof (AstarUpdateWindow));\n   32  			//window.minSize = new Vector2 (600, 200);\n   33  			//window.maxSize = new Vector2 (600, 300);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/ExampleScenes/Example11_RVO/RVOExampleAgent.cs:\n   44  \n   45  			if (astarRVO) return rvoAgent.InterpolatedPosition;\n   46: 			else return RVO.Simulator.Instance.getAgentPosition3(agentID);\n   47  //#else\n   48  			return rvoAgent.InterpolatedPosition;\n   ..\n   61  		if (!astarRVO) {\n   62  //#if !AstarRelease\n   63: 			agentID = RVO.Simulator.Instance.addAgent (new RVO.Vector2(transform.position.x,transform.position.z));\n   64  //#endif\n   65  		} else {\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Generators/Base.cs:\n   65  //#if UNITY_EDITOR\n   66  		/** Used in the editor to check if the info screen is open.\n   67: 		 * Should be inside UNITY_EDITOR only \\#ifs but just in case anyone tries to serialize a NavGraph instance using Unity, I have left it like this as it would otherwise cause a crash when building.\n   68  		 * Version 3.0.8.1 was released because of this bug only\n   69  		 */\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Generators/LayerGridGraphGenerator.cs:\n  115  			bool willChangeWalkability = o.updatePhysics || o.modifyWalkability;\n  116  			\n  117: 			bool willChangeNodeInstances = (o is LayerGridGraphUpdate ? ((LayerGridGraphUpdate)o).recalculateNodes : false);\n  118  			bool preserveExistingNodes = (o is LayerGridGraphUpdate ? ((LayerGridGraphUpdate)o).preserveExistingNodes : true);\n  119  			\n  120  			int erosion = o.updateErosion ? erodeIterations : 0;\n  121  			\n  122: 			if (o.trackChangedNodes	&& willChangeNodeInstances) {\n  123  				Debug.LogError (\"Cannot track changed nodes when creating or deleting nodes.\\nWill not update LayerGridGraph\");\n  124  				return;\n  ...\n  154  			\n  155  			//Mark nodes that might be changed\n  156: 			if (!willChangeNodeInstances) {\n  157  				for (int x = clampedRect.xmin; x <= clampedRect.xmax;x++) {\n  158  					for (int z = clampedRect.ymin;z <= clampedRect.ymax;z++) {\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Generators/NavMeshGenerator.cs:\n 1198  			}\n 1199  \n 1200: 			int inst = ob.GetInstanceID();\n 1201  			string name = ob.name;\n 1202  			string type = ob.GetType().AssemblyQualifiedName;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Generators/RecastGenerator.cs:\n 2173  			TerrainData data = terrain.terrainData;\n 2174  			\n 2175: 			for (int i=0;i<data.treeInstances.Length;i++) {\n 2176: 				TreeInstance instance = data.treeInstances[i];\n 2177: 				TreePrototype prot = data.treePrototypes[instance.prototypeIndex];\n 2178  				\n 2179  				if (prot.prefab.collider == null) {\n 2180: 					Bounds b = new Bounds(terrain.transform.position + Vector3.Scale(instance.position,data.size), new Vector3(instance.widthScale,instance.heightScale,instance.widthScale));\n 2181  					\n 2182: 					Matrix4x4 matrix = Matrix4x4.TRS (terrain.transform.position +  Vector3.Scale(instance.position,data.size), Quaternion.identity, new Vector3(instance.widthScale,instance.heightScale,instance.widthScale)*0.5f);\n 2183  					\n 2184  					\n ....\n 2186  					\n 2187  #if ASTARDEBUG\n 2188: 					Debug.DrawRay (instance.position, Vector3.up, Color.red,1);\n 2189  #endif\n 2190  					extraMeshes.Add (m);\n 2191  				} else {\n 2192  					//The prefab has a collider, use that instead\n 2193: 					Vector3 pos = terrain.transform.position + Vector3.Scale(instance.position,data.size);\n 2194: 					Vector3 scale = new Vector3(instance.widthScale,instance.heightScale,instance.widthScale);\n 2195  					\n 2196  					//Generate a mesh from the collider\n ....\n 2317  		}\n 2318  		\n 2319: 		/** Box Collider triangle indices can be reused for multiple instances.\n 2320  		 * \\warning This array should never be changed\n 2321  		 */\n ....\n 2340  		};\n 2341  		\n 2342: 		/** Box Collider vertices can be reused for multiple instances.\n 2343  		 * \\warning This array should never be changed\n 2344  		 */\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Generators/Utilities/Voxels/VoxelClasses.cs:\n  506  	/** Represents a custom mesh.\n  507  	 * The vertices will be multiplied with the matrix when rasterizing it to voxels.\n  508: 	 * The vertices and triangles array may be used in multiple instances, it is not changed when voxelizing.\n  509  	 * \n  510  	 * \\see SceneMesh\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Navmesh/NavmeshAdd.cs:\n   46  		}\n   47  		\n   48: 		/** Get all active instances which intersect the bounds */\n   49  		public static List<NavmeshAdd> GetAllInRange(Bounds b) {\n   50  			List<NavmeshAdd> cuts = Pathfinding.Util.ListPool<NavmeshAdd>.Claim ();\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Navmesh/NavmeshCut.cs:\n   42  		}\n   43  		\n   44: 		/** Get all active instances which intersect the bounds */\n   45  		public static List<NavmeshCut> GetAllInRange(Bounds b) {\n   46  			List<NavmeshCut> cuts = Pathfinding.Util.ListPool<NavmeshCut>.Claim ();\n   ..\n  166  		 * \n  167  		 * \\note Dynamic updating requires a Tile Handler Helper somewhere in the scene.\n  168: 		 * This update is not instant, it is done the next time the TileHandlerHelper checks this instance for\n  169  		 * if it needs updating.\n  170  		 * \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Navmesh/TileHandlerHelper.cs:\n    7  namespace Pathfinding {\n    8  	/** Helper for navmesh cut objects.\n    9: 	 * Adding an instance of this component into the scene makes\n   10  	 * sure that NavmeshCut components update the recast graph correctly when they move around.\n   11  	 * \n   ..\n   86  		}\n   87  		\n   88: 		/** Checks all NavmeshCut instances and updates graphs if needed */\n   89  		public void ForceUpdate () {\n   90  			\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Pathfinders/ConstantPath.cs:\n   41  		\n   42  		/** Controls when the path should terminate.\n   43: 		 * This is set up automatically in the constructor to an instance of the Pathfinding.EndingConditionDistance class with a \\a maxGScore is specified in the constructor.\n   44  		 * If you want to use another ending condition.\n   45  		 * \\see Pathfinding.PathEndingCondition for examples\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Pathfinders/FloodPath.cs:\n   39  \\n\n   40  Another thing to note is that if you are using NNConstraints on the FloodPathTracer, they must always inherit from Pathfinding.PathIDConstraint.\\n\n   41: The easiest is to just modify the instance of PathIDConstraint which is created as the default one.\n   42  \n   43  \\astarpro\n   ..\n   65  		}\n   66  		\n   67: 		/** Creates a new FloodPath instance */\n   68  		[System.Obsolete (\"Please use the Construct method instead\")]\n   69  		public FloodPath (Vector3 start, OnPathDelegate callbackDelegate) {\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Utilities/AstarParallel.cs:\n    7  	public class Parallel {\n    8  		\n    9: 		Parallel Instance;\n   10  		\n   11  		AutoResetEvent[] jobAvailable;\n   ..\n   27  		public static int iterationStepLength = 10;\n   28  		\n   29: 		// Initialize Parallel class's instance creating required number of threads\n   30  		// and synchronization objects\n   31  		private void Initialize( )\n   ..\n   77  		public static void For( int start, int stop, int stepLength, ForLoopBody loopBody, bool close  )\n   78  		{\n   79: 			// get instance of parallel computation manager\n   80: 			Parallel instance = new Parallel ();\n   81: 			instance.Initialize ();\n   82: 			instance.ForLoop (start,stop,stepLength,loopBody, close);\n   83  			\n   84  		}\n   ..\n   90  			{\n   91  				\n   92: 				//Parallel instance = new Parallel ();\n   93  				\n   94  				\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/Demigiant/DOTween/DOTween.XML:\n 1063          </member>\n 1064          <member name=\"M:DG.Tweening.TweenParams.Clear\">\n 1065:             <summary>Clears and resets this TweenParams instance using default values,\n 1066              so it can be reused without instantiating another one</summary>\n 1067          </member>\n ....\n 1299          <member name=\"T:DG.Tweening.Core.DOTweenComponent\">\n 1300              <summary>\n 1301:             Used to separate DOTween class from the MonoBehaviour instance (in order to use static constructors on DOTween).\n 1302:             Contains all instance-based methods\n 1303              </summary>\n 1304          </member>\n ....\n 1354          <member name=\"T:DG.Tweening.ShortcutExtensions\">\n 1355              <summary>\n 1356:             Methods that extend known Unity objects and allow to directly create and control tweens from their instances\n 1357              </summary>\n 1358          </member>\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/Demigiant/DOTween/DOTween43.xml:\n    7          <member name=\"T:DG.Tweening.ShortcutExtensions\">\n    8              <summary>\n    9:             Methods that extend known Unity objects and allow to directly create and control tweens from their instances.\n   10              These, as all DOTween43 methods, require Unity 4.3 or later.\n   11              </summary>\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/Demigiant/DOTween/DOTween46.xml:\n    7          <member name=\"T:DG.Tweening.ShortcutExtensions\">\n    8              <summary>\n    9:             Methods that extend known Unity objects and allow to directly create and control tweens from their instances.\n   10              These, as all DOTween46 methods, require Unity 4.6 or later.\n   11              </summary>\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/EasyTouch/Plugins/EasyButton.cs:\n  304  		\n  305  		if (Application.isPlaying){\n  306: 			if (EasyTouch.instance != null){\n  307: 				EasyTouch.instance.reservedVirtualAreas.Remove( buttonRect);\n  308  			}\n  309  		}		\n  ...\n  316  		\n  317  		if (Application.isPlaying){\n  318: 			if (EasyTouch.instance != null){\n  319: 				EasyTouch.instance.reservedVirtualAreas.Remove( buttonRect);\n  320  			}\n  321  		}\n  ...\n  357  							GUI.color = currentColor;	\n  358  							if (Application.isPlaying){\n  359: 								EasyTouch.instance.reservedVirtualAreas.Remove( buttonRect);\n  360: 								EasyTouch.instance.reservedVirtualAreas.Add( buttonRect);\n  361  								\n  362  							}							\n  ...\n  365  							GUI.color = new Color(currentColor.r,currentColor.g,currentColor.b,0.2f);\n  366  							if (Application.isPlaying){\n  367: 								EasyTouch.instance.reservedVirtualAreas.Remove( buttonRect);\n  368  							}\n  369  						}\n  ...\n  376  		else{\n  377  			if (Application.isPlaying){\n  378: 				EasyTouch.instance.reservedVirtualAreas.Remove( buttonRect);\n  379  			}\n  380  		}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/EasyTouch/Plugins/EasyJoystick.cs:\n  821  		\n  822  		if (Application.isPlaying){\n  823: 			if (EasyTouch.instance!=null){\n  824: 				EasyTouch.instance.reservedVirtualAreas.Remove( areaRect);\n  825  			}\n  826  		}\n  ...\n  835  		\n  836  		if (Application.isPlaying){\n  837: 			if (EasyTouch.instance!=null){\n  838: 				EasyTouch.instance.reservedVirtualAreas.Remove( areaRect);\n  839  			}\n  840  		}\n  ...\n 1035  					\n 1036  					if (Application.isPlaying && !dynamicJoystick){\n 1037: 						EasyTouch.instance.reservedVirtualAreas.Remove( areaRect);\n 1038: 						EasyTouch.instance.reservedVirtualAreas.Add( areaRect );\n 1039  					}\n 1040  				}\n ....\n 1042  					GUI.color = new Color(areaColor.r,areaColor.g,areaColor.b,0.2f);	\n 1043  					if (Application.isPlaying && !dynamicJoystick){\n 1044: 						EasyTouch.instance.reservedVirtualAreas.Remove( areaRect);\n 1045  \n 1046  					}\n ....\n 1077  		else{\n 1078  			if (Application.isPlaying){\n 1079: 				EasyTouch.instance.reservedVirtualAreas.Remove( areaRect);\n 1080  			}\n 1081  		}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/EasyTouch/Plugins/EasyTouch.cs:\n  162  /// 	* Bugs fixed\n  163  /// 	------------\n  164: /// 	- Fix 2 static methods that didn't properly reference the  EasyTouch instance\n  165  /// 	-\n  166  /// \n  ...\n  435  	\n  436  	#region Public members\n  437: 	public static EasyTouch instance;\n  438  	\n  439  	public bool enable = true;				// Enables or disables Easy Touch\n  ...\n  554  			\n  555  		// Assing the fake singleton\n  556: 		if (EasyTouch.instance == null)\n  557: 			instance = this;\n  558  		\n  559  		// The texture to display the simulation of the second finger.\n  ...\n  582  	void Update(){\n  583  	\n  584: 		if (enable && EasyTouch.instance==this){\n  585  		\n  586  			int i;\n  ...\n 1633  	/// </param>\n 1634  	public static void SetEnabled( bool enable){\n 1635: 		EasyTouch.instance.enable = enable;\n 1636  		if (enable){\n 1637: 			EasyTouch.instance.ResetTouches();	\n 1638  		}\n 1639  	}\n ....\n 1647  	/// </returns>\n 1648  	public static bool GetEnabled(){\n 1649: 		return EasyTouch.instance.enable;\n 1650  	}\n 1651  	\n ....\n 1657  	/// </returns>\n 1658  	public static int GetTouchCount(){\n 1659: 		if (EasyTouch.instance!=null){\n 1660: 			return EasyTouch.instance.input.TouchCount();\n 1661  		}\n 1662  		else{\n ....\n 1672  	/// </param>\n 1673  	public static void SetCamera(Camera cam,bool guiCam=false){\n 1674: 		EasyTouch.instance.touchCameras.Add(new ECamera(cam,guiCam));\n 1675  	}\n 1676  	\n ....\n 1683  	/// >\n 1684  	public static Camera GetCamera(int index=0){\n 1685: 		if (index< EasyTouch.instance.touchCameras.Count){\n 1686: 			return EasyTouch.instance.touchCameras[index].camera;	\n 1687  		}\n 1688  		else{\n ....\n 1699  	/// </param>\n 1700  	public static void SetEnable2FingersGesture( bool enable){\n 1701: 		EasyTouch.instance.enable2FingersGesture = enable;\n 1702  	}\n 1703  	\n ....\n 1710  	/// </returns>\n 1711  	public static bool GetEnable2FingersGesture(){\n 1712: 		return EasyTouch.instance.enable2FingersGesture;\n 1713  	}\n 1714  	\n ....\n 1721  	/// </param>\n 1722  	public static void SetEnableTwist( bool enable){\n 1723: 		EasyTouch.instance.enableTwist = enable;\n 1724  	}\n 1725  	\n ....\n 1732  	/// </returns>\n 1733  	public static bool GetEnableTwist(){\n 1734: 		return EasyTouch.instance.enableTwist;\n 1735  	}\n 1736  	\n ....\n 1743  	/// </param>\n 1744  	public static void SetEnablePinch( bool enable){\n 1745: 		EasyTouch.instance.enablePinch = enable;\n 1746  	}\n 1747  	\n ....\n 1754  	/// </returns>\n 1755  	public static bool GetEnablePinch(){\n 1756: 		return EasyTouch.instance.enablePinch;\n 1757  	}\n 1758  	\n ....\n 1765  	/// </param>\n 1766  	public static void SetEnableAutoSelect( bool enable){\n 1767: 		EasyTouch.instance.autoSelect = enable;\n 1768  	}\n 1769  	\n ....\n 1776  	/// </returns>\n 1777  	public static bool GetEnableAutoSelect(){\n 1778: 		return EasyTouch.instance.autoSelect;\n 1779  	}\n 1780  	\n ....\n 1786  	/// </param>\n 1787  	public static void SetOtherReceiverObject( GameObject receiver){\n 1788: 		EasyTouch.instance.receiverObject = receiver;\n 1789  	}\n 1790  	\n ....\n 1796  	/// </returns>\n 1797  	public static GameObject GetOtherReceiverObject(){\n 1798: 		return EasyTouch.instance.receiverObject;\n 1799  	}\n 1800  		\n ....\n 1806  	/// </param>\n 1807  	public static void SetStationnaryTolerance(float tolerance){\n 1808: 		EasyTouch.instance.StationnaryTolerance = tolerance;\n 1809  	}\n 1810  	\n ....\n 1816  	/// </returns>\n 1817  	public static float GetStationnaryTolerance(){\n 1818: 		return EasyTouch.instance.StationnaryTolerance;\n 1819  	}\n 1820  	\n ....\n 1826  	/// </param>\n 1827  	public static void SetlongTapTime(float time){\n 1828: 		EasyTouch.instance.longTapTime = time;\n 1829  	}\n 1830  	\n ....\n 1836  	/// </returns>\n 1837  	public static float GetlongTapTime(){\n 1838: 		return EasyTouch.instance.longTapTime;\n 1839  	}\n 1840  	\n ....\n 1846  	/// </param>\n 1847  	public static void SetSwipeTolerance( float tolerance){\n 1848: 		EasyTouch.instance.swipeTolerance = tolerance;\n 1849  	}\n 1850  	\n ....\n 1856  	/// </returns>\n 1857  	public static float GetSwipeTolerance(){\n 1858: 		return EasyTouch.instance.swipeTolerance;\n 1859  	}\n 1860  	\n ....\n 1866  	/// </param>\n 1867  	public static void SetMinPinchLength(float length){\n 1868: 		EasyTouch.instance.minPinchLength=length;\n 1869  	}\n 1870  	\n ....\n 1876  	/// </returns>\n 1877  	public static float GetMinPinchLength(){\n 1878: 		return EasyTouch.instance.minPinchLength;\n 1879  	}\n 1880  	\n ....\n 1886  	/// </param>\n 1887  	public static void SetMinTwistAngle(float angle){\n 1888: 		EasyTouch.instance.minTwistAngle = angle;\n 1889  	}\n 1890  	\n ....\n 1896  	/// </returns>\n 1897  	public static float GetMinTwistAngle(){\n 1898: 		return EasyTouch.instance.minTwistAngle;\n 1899  	}\n 1900  	\n ....\n 1910  	public static GameObject GetCurrentPickedObject(int fingerIndex){\n 1911  		\n 1912: 		Finger finger = EasyTouch.instance.GetFinger(fingerIndex);\n 1913: 		if (EasyTouch.instance.GetPickeGameObject(ref finger)){\n 1914  			return finger.pickedObject;\n 1915  		}\n ....\n 1938  		for (int i=0;i<10;i++){\n 1939  		\n 1940: 			if ( EasyTouch.instance.fingers[i]!=null){\n 1941  				if (guiRect){\n 1942  					rect = new Rect( rect.x,Screen.height-rect.y-rect.height,rect.width,rect.height);	\n 1943  				}\n 1944: 				find = rect.Contains(  EasyTouch.instance.fingers[i].position);\n 1945  				if (find)\n 1946  					break;\n ....\n 1963  	public static Vector2 GetFingerPosition(int fingerIndex){\n 1964  	\n 1965: 		if (EasyTouch.instance.fingers[fingerIndex]!=null){\n 1966: 			return EasyTouch.instance.GetFinger(fingerIndex).position;\n 1967  		}\n 1968  		else{\n ....\n 1980  	/// </returns>\n 1981  	public static bool GetIsReservedArea(){\n 1982: 		if (EasyTouch.instance)\n 1983: 			return EasyTouch.instance.enableReservedArea;	\n 1984  		else\n 1985  			return false;\n ....\n 1993  	/// </param>\n 1994  	public static void SetIsReservedArea(bool enable){\n 1995: 		EasyTouch.instance.enableReservedArea = enable;	\n 1996  	}\n 1997  	\n ....\n 2003  	/// </param>\n 2004  	public static void AddReservedArea( Rect rec){\n 2005: 		if (EasyTouch.instance){\n 2006: 			EasyTouch.instance.reservedAreas.Add( rec);\n 2007  			\n 2008  		}\n ....\n 2010  	\n 2011  	public static void AddReservedGuiArea( Rect rec){\n 2012: 		if (EasyTouch.instance){\n 2013: 			EasyTouch.instance.reservedGuiAreas.Add( rec);\n 2014  			\n 2015  		}\n ....\n 2023  	/// </param>\n 2024  	public static void RemoveReservedArea(Rect rec){\n 2025: 		if (EasyTouch.instance)\n 2026: 			EasyTouch.instance.reservedAreas.Remove( rec);\n 2027  	}\n 2028  	\n 2029  	public static void RemoveReservedGuiArea(Rect rec){\n 2030: 		if (EasyTouch.instance)\n 2031: 			EasyTouch.instance.reservedGuiAreas.Remove( rec);\n 2032  	}\n 2033  	\n ....\n 2039  	/// </param>\n 2040  	public static void ResetTouch(int fingerIndex){\n 2041: 		if (EasyTouch.instance)\n 2042: 			EasyTouch.instance.GetFinger(fingerIndex).gesture=GestureType.None;\n 2043  	}\n 2044  	\n ....\n 2050  	/// </param>\n 2051  	public static void SetPickableLayer(LayerMask mask){\n 2052: 		if (EasyTouch.instance)\n 2053: 			EasyTouch.instance.pickableLayers = mask;	\n 2054  	}\n 2055  	\n ....\n 2061  	/// </returns>\n 2062  	public static LayerMask GetPickableLayer(){\n 2063: 		return EasyTouch.instance.pickableLayers;	\n 2064  	}\n 2065  	#endregion\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/EasyTouch/Plugins/EasyTouchInput.cs:\n   40  		int count=0;\n   41  		\n   42: 		if (realTouch || EasyTouch.instance.enableRemote){\n   43  			count = Input.touchCount;\n   44  		}\n   ..\n   46  			if (Input.GetMouseButton(0) || Input.GetMouseButtonUp(0)){\n   47  				count=1;\n   48: 				if (Input.GetKey(KeyCode.LeftAlt) || Input.GetKey(EasyTouch.instance.twistKey)|| Input.GetKey(KeyCode.LeftControl) ||Input.GetKey(EasyTouch.instance.swipeKey ))\n   49  					count=2;\n   50: 				if (Input.GetKeyUp(KeyCode.LeftAlt)|| Input.GetKeyUp(EasyTouch.instance.twistKey)|| Input.GetKeyUp(KeyCode.LeftControl)|| Input.GetKeyUp(EasyTouch.instance.swipeKey))\n   51  					count=2;\n   52  			}		\n   ..\n   70  		\n   71  		\n   72: 		if (fingerIndex==1 && (Input.GetKeyUp(KeyCode.LeftAlt)|| Input.GetKeyUp(EasyTouch.instance.twistKey)|| Input.GetKeyUp(KeyCode.LeftControl)|| Input.GetKeyUp(EasyTouch.instance.swipeKey))){\n   73  			\n   74  			finger.fingerIndex = fingerIndex;\n   ..\n   91  			}\n   92  			\n   93: 			if (Input.GetMouseButtonDown(0) || (fingerIndex==1 && (Input.GetKeyDown(KeyCode.LeftAlt)|| Input.GetKeyDown(EasyTouch.instance.twistKey)|| Input.GetKeyDown(KeyCode.LeftControl)|| Input.GetKeyDown(EasyTouch.instance.swipeKey)))){\n   94  				\n   95  				// Began						\n   ..\n  158  		Vector2 pos = new Vector2(-1,-1);\n  159  		\n  160: 		if ((Input.GetKey(KeyCode.LeftAlt)|| Input.GetKey(EasyTouch.instance.twistKey)) && (Input.GetKey(KeyCode.LeftControl)|| Input.GetKey(EasyTouch.instance.swipeKey))){\n  161  			if (!bComplex){\n  162  				bComplex=true;\n  ...\n  166  			return pos;\n  167  		}\n  168: 		else if (Input.GetKey(KeyCode.LeftAlt)|| Input.GetKey(EasyTouch.instance.twistKey) ){		\n  169  			pos =  GetPinchTwist2Finger();\n  170  			bComplex = false;\n  171  			return pos;\n  172: 		}else if (Input.GetKey(KeyCode.LeftControl)|| Input.GetKey(EasyTouch.instance.swipeKey) ){	\n  173  \n  174  			pos =GetComplex2finger();\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/EasyTouch/Plugins/Gesture.cs:\n  121  	/// </summary>\n  122  	/// <returns>\n  123: 	/// <c>true</c> if this instance is in rect the specified rect; otherwise, <c>false</c>.\n  124  	/// </returns>\n  125  	/// <param name='rect'>\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/EasyTouch/Plugins/MonoSingleton.cs:\n    6  public abstract class MonoSingleton<T> : MonoBehaviour where T : MonoSingleton<T>{\n    7  	\n    8: 	private static T m_Instance = null;\n    9      \n   10: 	public static T instance{\n   11          get{\n   12: 			if( m_Instance == null ){\n   13:             	m_Instance = GameObject.FindObjectOfType(typeof(T)) as T;\n   14:                 if( m_Instance == null ){\n   15:                     m_Instance = new GameObject(\"Singleton of \" + typeof(T).ToString(), typeof(T)).GetComponent<T>();\n   16: 					 m_Instance.Init();\n   17                  }\n   18                 \n   19              }\n   20:             return m_Instance;\n   21          }\n   22      }\n   ..\n   24      private void Awake(){\n   25     \n   26:         if( m_Instance == null ){\n   27:             m_Instance = this as T;\n   28          }\n   29      }\n   ..\n   33  \n   34      private void OnApplicationQuit(){\n   35:         m_Instance = null;\n   36      }\n   37  }\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/EasyTouch/Plugins/VirtualScreen.cs:\n  102  	/// </summary>\n  103  	public static void ComputeVirtualScreen(){\n  104: 		VirtualScreen.instance.ComputeScreen();\n  105  	}\n  106  	\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/EasyTouch/Plugins/Editor/GUIEasyButtonCallBack.cs:\n   24  	}\n   25  	\n   26: 	private static void DrawHierarchyIcon(int instanceID, Rect selectionRect)\n   27  	{\n   28: 		GameObject gameObject = EditorUtility.InstanceIDToObject(instanceID) as GameObject;\n   29  		if (gameObject != null && gameObject.GetComponent<EasyButton>() != null)\n   30  		{\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/EasyTouch/Plugins/Editor/GUIEasyJoystickCallBack.cs:\n   24  	}\n   25  	\n   26: 	private static void DrawHierarchyIcon(int instanceID, Rect selectionRect)\n   27  	{\n   28: 		GameObject gameObject = EditorUtility.InstanceIDToObject(instanceID) as GameObject;\n   29  		if (gameObject != null && gameObject.GetComponent<EasyJoystick>() != null)\n   30  		{\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/EasyTouch/Plugins/Editor/GUIEasytouchCallBack.cs:\n   27  	}\n   28  	\n   29: 	private static void DrawHierarchyIcon(int instanceID, Rect selectionRect)\n   30  	{\n   31: 		GameObject gameObject = EditorUtility.InstanceIDToObject(instanceID) as GameObject;\n   32  		if (gameObject != null && gameObject.GetComponent<EasyTouch>() != null)\n   33  		{\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/iTweenEditor/iTween.cs:\n 7111  				target.SendMessage((string)method,method_param,SendMessageOptions.DontRequireReceiver);\n 7112  			}\n 7113: 			else if(typeof(MulticastDelegate).IsInstanceOfType(method)){\n 7114  				if(method_type == typeof(System.Action)){\n 7115  					System.Action action = (System.Action)method;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Code/Camera/tk2dCamera.cs:\n   86  	/// All resolution and override settings will be pulled from the root inherited camera.\n   87  	/// This allows you to create a tk2dCamera prefab in your project or a master camera\n   88: 	/// in the scene and guarantee that multiple instances of tk2dCameras referencing this\n   89  	/// will use exactly the same paramaters. \n   90  	/// </summary>\n   ..\n  132  \n  133  	/// <summary>\n  134: 	/// Global instance, used by sprite and textmesh class to quickly find the tk2dCamera instance.\n  135  	/// </summary>\n  136: 	public  static tk2dCamera Instance {\n  137  		get {\n  138  			return inst;\n  ...\n  140  	}\n  141  \n  142: 	// Global instance of active tk2dCameras, used to quickly find cameras matching a particular layer.\n  143  	private static List<tk2dCamera> allCameras = new List<tk2dCamera>();\n  144  \n  ...\n  376  			System.Reflection.FieldInfo s_viewModeResolutions = gameViewType.GetField(\"s_viewModeResolutions\", System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic);\n  377  			if (s_viewModeResolutions == null) {\n  378: 				System.Reflection.PropertyInfo currentGameViewSize = gameViewType.GetProperty(\"currentGameViewSize\", System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic);\n  379  				object gameViewSize = currentGameViewSize.GetValue(mainGameViewInst, null);\n  380  				System.Type gameViewSizeType = gameViewSize.GetType();\n  ...\n  404  					&& viewModeStrings != null\n  405  					&& viewModeResolutions != null && viewModeAspects != null) {\n  406: 					int aspectRatio = (int)gameViewType.GetField(\"m_AspectRatio\", System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic).GetValue(mainGameViewInst);\n  407  					string thisViewModeString = viewModeStrings[aspectRatio];\n  408  					if (thisViewModeString.Contains(\"Standalone\")) {\n  ...\n  686  										 nativeResolutionWidth * s, nativeResolutionHeight * s);\n  687  \n  688: 		// Near and far clip planes are tweakable per camera, so we pull from current camera instance regardless of inherited values\n  689  		return OrthoOffCenter(scale, orthoSize * (left + halfTexel) * zoomScale, orthoSize * (right + halfTexel) * zoomScale, \n  690  									 orthoSize * (bottom - halfTexel) * zoomScale, orthoSize * (top - halfTexel) * zoomScale, \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Code/Camera/tk2dCameraUtil.cs:\n  134  	\n  135  	/// <summary>\n  136: 	/// Returns true if this instance of tk2dCameraResolutionOverride matches the curent resolution.\n  137  	/// In future versions this may  change to support ranges of resolutions in addition to explict ones.\n  138  	/// </summary>\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Code/Fonts/tk2dFontData.cs:\n   93  	public bool hasPlatformData = false;\n   94      public bool managedFont = false;\n   95:     public bool needMaterialInstance = false;\n   96      public bool isPacked = false;\n   97      public bool premultipliedAlpha = false;\n   ..\n   99      public tk2dSpriteCollectionData spriteCollection = null;\n  100  \n  101: 	// Returns the active instance\n  102  	public tk2dFontData inst\n  103  	{\n  ...\n  136  	void Init()\n  137  	{\n  138: 		if (needMaterialInstance)\n  139  		{\n  140  			if (spriteCollection)\n  ...\n  149  					}\n  150  				}\n  151: 				if (materialInst == null && !needMaterialInstance) {\n  152  					Debug.LogError(\"Fatal error - font from sprite collection is has an invalid material\");\n  153  				}\n  ...\n  179  	{\n  180  		// if material is from a sprite collection\n  181: 		if (needMaterialInstance && spriteCollection == null)\n  182  			DestroyImmediate(materialInst);\n  183  	}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Code/Fonts/tk2dTextMesh.cs:\n  122  	void FormatText(ref string _targetString, string _source)\n  123  	{\n  124: 		InitInstance();\n  125  		if (formatting == false || wordWrapWidth == 0 || _fontInst.texelSize == Vector2.zero)\n  126  		{\n  ...\n  371  	}\n  372  \n  373: 	void InitInstance()\n  374  	{\n  375  		if (data != null && data.font != null) {\n  ...\n  412  #if UNITY_EDITOR\n  413  	private void OnEnable() {\n  414: 		if (GetComponent<Renderer>() != null && data != null && data.font != null && data.font.inst != null && GetComponent<Renderer>().sharedMaterial == null && data.font.inst.needMaterialInstance) {\n  415  			ForceBuild();\n  416  		}\n  ...\n  456  	public int NumTotalCharacters()\n  457  	{\n  458: 		InitInstance();\n  459  \n  460  		if ((updateFlags & (UpdateFlags.UpdateText | UpdateFlags.UpdateBuffers)) != 0)\n  ...\n  513  	/// </summary>\n  514  	public Bounds GetEstimatedMeshBoundsForString( string str ) {\n  515: 		InitInstance();\n  516  		tk2dTextGeomGen.GeomData geomData = tk2dTextGeomGen.Data( data, _fontInst, _formattedText );\n  517  		Vector2 dims = tk2dTextGeomGen.GetMeshDimensionsForString( FormatText( str ), geomData);\n  ...\n  624  	public void DoNotUse__CommitInternal()\n  625  	{\n  626: 		// Make sure instance is set up, might not be when calling from Awake.\n  627: 		InitInstance();\n  628  \n  629  		// make sure fonts dictionary is initialized properly before proceeding\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Code/Gui/tk2dButton.cs:\n  122  			\n  123  			// See if a tk2dCamera exists\n  124: 			if (viewCamera == null && tk2dCamera.Instance)\n  125  			{\n  126: 				viewCamera = tk2dCamera.Instance.GetComponent<Camera>();\n  127  			}\n  128  			\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Code/Runtime/tk2dSystem.cs:\n   43  			if (_inst == null)\n   44  			{\n   45: 				// Attempt to load the global instance and create one if it doesn't exist\n   46  				_inst = Resources.Load(assetName, typeof(tk2dSystem)) as tk2dSystem;\n   47  				if (_inst == null)\n   48  				{\n   49: 					_inst = ScriptableObject.CreateInstance<tk2dSystem>();\n   50  				}\n   51  				// We don't want to destroy this throughout the lifetime of the game\n   ..\n   56  	}\n   57  \n   58: 	// Variant which will not create the instance if it doesn't exist\n   59  	public static tk2dSystem inst_NoCreate\n   60  	{\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Code/Runtime/tk2dUpdateManager.cs:\n    7  public class tk2dUpdateManager : MonoBehaviour {\n    8  	static tk2dUpdateManager inst;\n    9: 	static tk2dUpdateManager Instance {\n   10  		get {\n   11  			if (inst == null) {\n   ..\n   33  #endif\n   34  		{\n   35: 			Instance.QueueCommitInternal( textMesh );\n   36  		}\n   37  	}\n   ..\n   41  #if UNITY_EDITOR\n   42  		if (Application.isPlaying) {\n   43: 			Instance.FlushQueuesInternal();\n   44  		}\n   45  #else\n   46: 		Instance.FlushQueuesInternal();\n   47  #endif\n   48  	}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Code/Sprites/tk2dBaseSprite.cs:\n   53  	}\n   54  \n   55:     // This is the active instance of the sprite collection\n   56      protected tk2dSpriteCollectionData collectionInst;\n   57  	\n   ..\n   86  	// This is unfortunate, but required due to the unpredictable script execution order in Unity.\n   87  	// The only problem happens in Awake(), where if another class is Awaken before this one, and tries to\n   88: 	// modify this instance before it is initialized, very bad things could happen.\n   89  	// Awake also never gets called on an object which is inactive.\n   90: 	void InitInstance()\n   91  	{\n   92  		if (collectionInst == null && collection != null)\n   ..\n  108  			{\n  109  				_color = value;\n  110: 				InitInstance();\n  111  				UpdateColors();\n  112  			}\n  ...\n  128  			{\n  129  				_scale = value;\n  130: 				InitInstance();\n  131  				UpdateVertices();\n  132  #if UNITY_EDITOR\n  ...\n  170  #if (UNITY_3_5 || UNITY_4_0 || UNITY_4_0_1 || UNITY_4_1 || UNITY_4_2)\n  171  			if (renderLayer != value) { \n  172: 				renderLayer = value; InitInstance(); UpdateVertices(); \n  173  			} \n  174  #else\n  ...\n  218  			if (value != _spriteId)\n  219  			{\n  220: 				InitInstance();\n  221  				value = Mathf.Clamp(value, 0, collectionInst.spriteDefinitions.Length - 1);\n  222  				if (_spriteId < 0 || _spriteId >= collectionInst.spriteDefinitions.Length ||\n  ...\n  360  	public int GetSpriteIdByName(string name)\n  361  	{\n  362: 		InitInstance();\n  363  		return collectionInst.GetSpriteIdByName(name);\n  364  	}\n  ...\n  395  	protected int GetNumVertices()\n  396  	{\n  397: 		InitInstance();\n  398  		return collectionInst.spriteDefinitions[spriteId].positions.Length;\n  399  	}\n  ...\n  401  	protected int GetNumIndices()\n  402  	{\n  403: 		InitInstance();\n  404  		return collectionInst.spriteDefinitions[spriteId].indices.Length;\n  405  	}\n  ...\n  456  	public Bounds GetBounds()\n  457  	{\n  458: 		InitInstance();\n  459  		var sprite = collectionInst.spriteDefinitions[_spriteId];\n  460  		return new Bounds(new Vector3(sprite.boundsData[0].x * _scale.x, sprite.boundsData[0].y * _scale.y, sprite.boundsData[0].z * _scale.z),\n  ...\n  471  	public Bounds GetUntrimmedBounds()\n  472  	{\n  473: 		InitInstance();\n  474  		var sprite = collectionInst.spriteDefinitions[_spriteId];\n  475  		return new Bounds(new Vector3(sprite.untrimmedBoundsData[0].x * _scale.x, sprite.untrimmedBoundsData[0].y * _scale.y, sprite.untrimmedBoundsData[0].z * _scale.z),\n  ...\n  492  	public tk2dSpriteDefinition GetCurrentSpriteDef()\n  493  	{\n  494: 		InitInstance();\n  495  		return (collectionInst == null) ? null : collectionInst.spriteDefinitions[_spriteId];\n  496  	}\n  ...\n  504  	public tk2dSpriteDefinition CurrentSprite {\n  505  		get {\n  506: 			InitInstance();\n  507  			return (collectionInst == null) ? null : collectionInst.spriteDefinitions[_spriteId];\n  508  		}\n  ...\n  917  #if UNITY_EDITOR\n  918  	private void OnEnable() {\n  919: 		if (GetComponent<Renderer>() != null && Collection != null && GetComponent<Renderer>().sharedMaterial == null && Collection.inst.needMaterialInstance) {\n  920  			ForceBuild();\n  921  		}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Code/Sprites/tk2dEditorSpriteDataUnloader.cs:\n   65  		tk2dSpriteCollectionData[] objects = Resources.FindObjectsOfTypeAll(typeof(tk2dSpriteCollectionData)) as tk2dSpriteCollectionData[];\n   66  		foreach (tk2dSpriteCollectionData data in objects) {\n   67: 			if (data.needMaterialInstance) {\n   68  				if (data.textureInsts != null) {\n   69  					foreach (Texture2D tex in data.textureInsts) {\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Code/Sprites/tk2dPixelPerfectHelper.cs:\n   11  	\n   12  	/// <summary>\n   13: 	/// Global singleton instance.\n   14  	/// </summary>\n   15  	public static tk2dPixelPerfectHelper inst \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Code/Sprites/tk2dSpriteAttachPoint.cs:\n   59  	}\n   60  \n   61: 	// Cache instance names as UnityEngine.Object.name allocates memory\n   62: 	Dictionary<Transform, string> cachedInstanceNames = new Dictionary<Transform, string>();\n   63: 	string GetInstanceName(Transform t) {\n   64  		string r = \"\";\n   65: 		if (cachedInstanceNames.TryGetValue(t, out r)) {\n   66  			return r;\n   67  		}\n   68  		else {\n   69: 			cachedInstanceNames[t] = t.name;\n   70  			return t.name;\n   71  		}\n   ..\n   89  				// user deleting things at runtime. Hopefully the user won't have that many attach points\n   90  				// that a linear search becomes an issue\n   91: 				if (inst != null && GetInstanceName(inst) == ap.name) {\n   92  					attachPointUpdated[currAttachPointId] = true;\n   93  					UpdateAttachPointTransform( ap, inst );\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Code/Sprites/tk2dSpriteCollectionData.cs:\n  164  	public string sourceTextureGUID;\n  165  	/// <summary>\n  166: 	/// Speficies if this texture is extracted from a larger texture source, for instance an atlas. This is used in the inspector.\n  167  	/// </summary>\n  168  	public bool extractRegion;\n  ...\n  269  	public int version;\n  270  	public bool materialIdsValid = false;\n  271: 	public bool needMaterialInstance = false;\n  272  	public bool Transient { get; set; } // this should not get serialized\n  273  \n  ...\n  523  	tk2dSpriteCollectionData platformSpecificData = null;\n  524  \n  525: 	// Returns the active instance\n  526  	public tk2dSpriteCollectionData inst\n  527  	{\n  ...\n  570  \n  571  		materialInsts = new Material[materials.Length];\n  572: 		if (needMaterialInstance)\n  573  		{\n  574  			if (tk2dSystem.OverrideBuildMaterial) {\n  ...\n  753  			}\n  754  		}\n  755: 		else if (needMaterialInstance) // exclusive\n  756  		{\n  757  			foreach (Material material in materialInsts) {\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Editor/tk2dEditorUtility.cs:\n  178  	static void CreateIndex()\n  179  	{\n  180: 		tk2dIndex newIndex = ScriptableObject.CreateInstance<tk2dIndex>();\n  181  		newIndex.version = tk2dIndex.CURRENT_VERSION;\n  182  		newIndex.hideFlags = HideFlags.DontSave; // get this to not be destroyed in Unity 4.1\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Editor/tk2dPreferencesEditor.cs:\n   93  	public Color _customGridColor1 = Color.gray;\n   94  \n   95: 	// Instance\n   96  	static tk2dPreferences _inst = null;\n   97  	public static tk2dPreferences inst {\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Editor/tk2dSceneHelper.cs:\n   40  		}\n   41  \n   42: 		int controlId = t.GetInstanceID();\n   43  		Ray mouseRay = HandleUtility.GUIPointToWorldRay(ev.mousePosition);\n   44  		rect = PositiveRect(rect);\n   ..\n  348  			\n  349  			EditorGUI.BeginChangeCheck();\n  350: 			Vector3 newWorldPt = MoveHandle( controlId + t.GetInstanceID() + \"Handle\".GetHashCode() + i, worldPt, t.forward, style, cursor );\n  351  			if (EditorGUI.EndChangeCheck()) {\n  352  				Vector3 localPt = ev.shift ? constrainRectMatrix.inverse.MultiplyPoint(newWorldPt) : t.InverseTransformPoint(newWorldPt);\n  ...\n  458  				MouseCursor cursor = GetHandleCursor(handleCursorN[i], t);\n  459  				EditorGUI.BeginChangeCheck();\n  460: 				Vector3 newWorldPt = MoveHandle(controlId + t.GetInstanceID() + \"Rotate\".GetHashCode() + i, worldPt, t.forward, style, cursor);\n  461  				if (EditorGUI.EndChangeCheck()) {\n  462  					Vector3 d0 = p;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Editor/Runtime/tk2dSystemUtility.cs:\n   38  		// Create resource object\n   39  		string resourcePath = GetOrCreateResourcesDir() + \"/\" + \"tk2d_\" + guid + \".asset\";\n   40: 		tk2dResource resource = ScriptableObject.CreateInstance<tk2dResource>();\n   41  		resource.objectReference = obj;\n   42  		AssetDatabase.CreateAsset(resource, resourcePath);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Editor/Sprites/tk2dSpriteCollectionBuilder.cs:\n 1359  			// Managed?\n 1360  			font.data.managedFont = gen.managedSpriteCollection;\n 1361: 			font.data.needMaterialInstance = (gen.managedSpriteCollection || gen.atlasFormat != tk2dSpriteCollection.AtlasFormat.UnityTexture);\n 1362  \n 1363  			// Mark to save\n ....\n 1391  		gen.spriteCollection.assetName = gen.assetName;\n 1392  		gen.spriteCollection.managedSpriteCollection = gen.managedSpriteCollection;\n 1393: 		gen.spriteCollection.needMaterialInstance = (gen.managedSpriteCollection || gen.atlasFormat != tk2dSpriteCollection.AtlasFormat.UnityTexture);\n 1394  		gen.spriteCollection.textureFilterMode = gen.filterMode;\n 1395  		gen.spriteCollection.textureMipMaps = gen.mipmapEnabled;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Editor/Sprites/tk2dSpriteEditor.cs:\n  120  		}\n  121  	}\n  122: 	tk2dSpriteGuiUtility.SpriteChangedCallback _spriteChangedCallbackInstance = null;\n  123: 	tk2dSpriteGuiUtility.SpriteChangedCallback spriteChangedCallbackInstance {\n  124  		get {\n  125: 			if (_spriteChangedCallbackInstance == null) {\n  126: 				_spriteChangedCallbackInstance = new tk2dSpriteGuiUtility.SpriteChangedCallback( SpriteChangedCallbackImpl );\n  127  			}\n  128: 			return _spriteChangedCallbackInstance;\n  129  		}\n  130  	}\n  ...\n  133  	{\n  134  		Event ev = Event.current;\n  135: 		tk2dSpriteGuiUtility.SpriteSelector( targetSprites[0].Collection, targetSprites[0].spriteId, spriteChangedCallbackInstance, null );\n  136  \n  137          if (targetSprites[0].Collection != null)\n  ...\n  164  					r = GUILayoutUtility.GetLastRect();\n  165  					if (ev.type == EventType.MouseDown && ev.button == 0 && r.Contains(ev.mousePosition)) {\n  166: 						tk2dSpriteGuiUtility.SpriteSelectorPopup( sprite.Collection, sprite.spriteId, spriteChangedCallbackInstance, null );\n  167  					}\n  168  				}\n  ...\n  300  		if (needUpdatePrefabs)\n  301  		{\n  302: 			// Rebuild prefab instances\n  303  			tk2dBaseSprite[] allSprites = Resources.FindObjectsOfTypeAll(typeof(tk2dBaseSprite)) as tk2dBaseSprite[];\n  304  			foreach (var spr in allSprites)\n  305  			{\n  306: 				if (PrefabUtility.GetPrefabType(spr) == PrefabType.PrefabInstance)\n  307  				{\n  308  					Object parent = PrefabUtility.GetPrefabParent(spr.gameObject);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Editor/Sprites/tk2dStaticSpriteBatcherEditor.cs:\n  286  	}\n  287  \n  288: 	void DrawInstanceGUI()\n  289  	{\n  290  		if (GUILayout.Button(\"Edit\"))\n  ...\n  443  		}\n  444  		else {\n  445: 			DrawInstanceGUI();\n  446  		}\n  447      }\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Editor/Sprites/SpriteAnimationEditor/tk2dSpriteAnimationClipEditor.cs:\n   45  \n   46  		// Sprite changed callback\n   47: 		// Create an instance - only ever use the instance through the property\n   48  		void SpriteChangedCallbackImpl(tk2dSpriteCollectionData spriteCollection, int spriteId, object data) {\n   49  			FrameGroup fg = data as FrameGroup;\n   ..\n   60  			}\n   61  		}\n   62: 		tk2dSpriteGuiUtility.SpriteChangedCallback _spriteChangedCallbackInstance = null;\n   63: 		tk2dSpriteGuiUtility.SpriteChangedCallback spriteChangedCallbackInstance {\n   64  			get {\n   65: 				if (_spriteChangedCallbackInstance == null) {\n   66: 					_spriteChangedCallbackInstance = new tk2dSpriteGuiUtility.SpriteChangedCallback( SpriteChangedCallbackImpl );\n   67  				}\n   68: 				return _spriteChangedCallbackInstance;\n   69  			}\n   70  		}\n   ..\n  366  \n  367  			FrameGroup fg = frameGroups[timelineEditor.CurrentState.selectedFrame];\n  368: 			tk2dSpriteGuiUtility.SpriteSelector( fg.spriteCollection, fg.spriteId, spriteChangedCallbackInstance, fg );\n  369  \n  370  			int numFrames = EditorGUILayout.IntField(\"Frames\", fg.frames.Count);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Editor/Sprites/SpriteAnimationEditor/tk2dSpriteAnimationEditorPopup.cs:\n   28  					if (type.BaseType == typeof(tk2dEditor.SpriteAnimationEditor.AnimOperator))\n   29  					{\n   30: 						tk2dEditor.SpriteAnimationEditor.AnimOperator inst = (tk2dEditor.SpriteAnimationEditor.AnimOperator)System.Activator.CreateInstance(type);\n   31  						if (inst != null)\n   32  							animOpList.Add(inst);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Editor/Sprites/Triangulator/tk2dSpriteFromTextureEditor.cs:\n   56  		if (tex != null) {\n   57  			tk2dSpriteCollectionSize scs = tk2dSpriteCollectionSize.Default();\n   58: 			if (tk2dCamera.Instance != null) {\n   59: 				scs = tk2dSpriteCollectionSize.ForTk2dCamera(tk2dCamera.Instance);\n   60  			}\n   61  			sft.Create( scs, tex, tk2dBaseSprite.Anchor.MiddleCenter );\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d_demo/tk2dDemoRuntimeSpriteController.cs:\n   15  	public GameObject destroyOnStart;\n   16  \n   17: 	tk2dBaseSprite spriteInstance = null;\n   18: 	tk2dSpriteCollectionData spriteCollectionInstance = null;\n   19  \n   20  	// Use this for initialization\n   ..\n   31  \n   32  	void DestroyData() {\n   33: 		if (spriteInstance != null) {\n   34: 			Destroy(spriteInstance.gameObject);\n   35  		}\n   36: 		if (spriteCollectionInstance != null) {\n   37: 			Destroy(spriteCollectionInstance.gameObject);\n   38  		}\n   39  	}\n   ..\n   44  \n   45  			// Create atlas\n   46: 			spriteCollectionInstance = tk2dSpriteCollectionData.CreateFromTexturePacker(spriteCollectionSize, texturePackerExportFile.text, texturePackerTexture );\n   47  \n   48  			GameObject go = new GameObject(\"sprite\");\n   49  			go.transform.localPosition = new Vector3(-1, 0, 0);\n   50: 			spriteInstance = go.AddComponent<tk2dSprite>();\n   51: 			spriteInstance.SetSprite(spriteCollectionInstance, \"sun\");\n   52  \n   53  			go = new GameObject(\"sprite2\");\n   54: 			go.transform.parent = spriteInstance.transform;\n   55  			go.transform.localPosition = new Vector3(2, 0, 0);\n   56  			tk2dSprite sprite = go.AddComponent<tk2dSprite>();\n   57: 			sprite.SetSprite(spriteCollectionInstance, \"2dtoolkit_logo\");\n   58  \n   59  			go = new GameObject(\"sprite3\");\n   60: 			go.transform.parent = spriteInstance.transform;\n   61  			go.transform.localPosition = new Vector3(1, 1, 0);\n   62  			sprite = go.AddComponent<tk2dSprite>();\n   63: 			sprite.SetSprite(spriteCollectionInstance, \"button_up\");\n   64  \n   65  			go = new GameObject(\"sprite4\");\n   66: 			go.transform.parent = spriteInstance.transform;\n   67  			go.transform.localPosition = new Vector3(1, -1, 0);\n   68  			sprite = go.AddComponent<tk2dSprite>();\n   69: 			sprite.SetSprite(spriteCollectionInstance, \"Rock\");\n   70  		}\n   71  	}\n   ..\n   79  			Vector2 anchor = new Vector2(region.width / 2, region.height / 2);\n   80  			GameObject go = tk2dSprite.CreateFromTexture(runtimeTexture, spriteCollectionSize, region, anchor);\n   81: 			spriteInstance = go.GetComponent<tk2dSprite>();\n   82: 			spriteCollectionInstance = spriteInstance.Collection;\n   83  		}\n   84  \n   ..\n   90  			Vector2 anchor = new Vector2(region.width / 2, region.height / 2);\n   91  			GameObject go = tk2dSprite.CreateFromTexture(runtimeTexture, spriteCollectionSize, region, anchor);\n   92: 			spriteInstance = go.GetComponent<tk2dSprite>();\n   93: 			spriteCollectionInstance = spriteInstance.Collection;\n   94  		}\n   95  \n   ..\n  114  \n  115  			// Create a sprite collection with multiple sprites, using regions of the texture\n  116: 			spriteCollectionInstance = tk2dSpriteCollectionData.CreateFromTexture(runtimeTexture, spriteCollectionSize, names, regions, anchors);\n  117  			GameObject go = new GameObject(\"sprite\");\n  118  			go.transform.localPosition = new Vector3(-1, 0, 0);\n  119: 			spriteInstance = go.AddComponent<tk2dSprite>();\n  120: 			spriteInstance.SetSprite(spriteCollectionInstance, 0);\n  121  \n  122  			go = new GameObject(\"sprite2\");\n  123: 			go.transform.parent = spriteInstance.transform;\n  124  			go.transform.localPosition = new Vector3(2, 0, 0);\n  125  			tk2dSprite sprite = go.AddComponent<tk2dSprite>();\n  126: 			sprite.SetSprite(spriteCollectionInstance, \"Another region\");\n  127  		}		\n  128  	}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2dTileMap/Code/tk2dTileMap.cs:\n   87  \n   88  	[System.Serializable]\n   89: 	public class TilemapPrefabInstance {\n   90  		public int x, y, layer;\n   91: 		public GameObject instance;\n   92  	}\n   93  \n   94  	[SerializeField]\n   95: 	List<TilemapPrefabInstance> tilePrefabsList = new List<TilemapPrefabInstance>();\n   96  	\n   97  	[SerializeField]\n   ..\n  105  	{\n  106  		bool spriteCollectionKeyMatch = true;\n  107: 		if (SpriteCollectionInst && (SpriteCollectionInst.buildKey != spriteCollectionKey || SpriteCollectionInst.needMaterialInstance)) {\n  108  			spriteCollectionKeyMatch = false;\n  109  		}\n  ...\n  144  	void OnEnable() {\n  145  		if (spriteCollection != null && data != null && renderData != null \n  146: 			&& SpriteCollectionInst != null && SpriteCollectionInst.needMaterialInstance) {\n  147  \n  148  			bool needBuild = false;\n  ...\n  217  	public void ForceBuild() { Build(BuildFlags.ForceBuild); }\n  218  	\n  219: 	// Clears all spawned instances, but retains the renderData object\n  220: 	void ClearSpawnedInstances()\n  221  	{\n  222  		if (layers == null)\n  ...\n  302  \n  303  		if (forceBuild) {\n  304: 			ClearSpawnedInstances();\n  305  		}\n  306  \n  ...\n  622  	}\n  623  \n  624: 	public List<TilemapPrefabInstance> TilePrefabsList {\n  625  		get {\n  626  			return tilePrefabsList;\n  ...\n  628  	}\n  629  \n  630: 	public void GetTilePrefabsListItem(int index, out int x, out int y, out int layer, out GameObject instance) {\n  631: 		TilemapPrefabInstance item = tilePrefabsList[index];\n  632  		x = item.x;\n  633  		y = item.y;\n  634  		layer = item.layer;\n  635: 		instance = item.instance;\n  636  	}\n  637  \n  638: 	public void SetTilePrefabsList(List<int> xs, List<int> ys, List<int> layers, List<GameObject> instances) {\n  639: 		int n = instances.Count;\n  640: 		tilePrefabsList = new List<TilemapPrefabInstance>(n);\n  641  		for (int i = 0; i < n; ++i) {\n  642: 			TilemapPrefabInstance item = new TilemapPrefabInstance();\n  643  			item.x = xs[i];\n  644  			item.y = ys[i];\n  645  			item.layer = layers[i];\n  646: 			item.instance = instances[i];\n  647  			tilePrefabsList.Add(item);\n  648  		}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2dTileMap/Code/tk2dTileMapBuilderUtil.cs:\n   75  		static List<int> TilePrefabsY;\n   76  		static List<int> TilePrefabsLayer;\n   77: 		static List<GameObject> TilePrefabsInstance;\n   78  \n   79: 		static GameObject GetExistingTilePrefabInstance(tk2dTileMap tileMap, int tileX, int tileY, int tileLayer) {\n   80  			int n = tileMap.GetTilePrefabsListCount();\n   81  			for (int i = 0; i < n; ++i) {\n   82  				int x, y, layer;\n   83: 				GameObject instance;\n   84: 				tileMap.GetTilePrefabsListItem(i, out x, out y, out layer, out instance);\n   85  				if (x == tileX && y == tileY && layer == tileLayer)\n   86: 					return instance;\n   87  			}\n   88  			return null;\n   ..\n  115  						prefabCounts[tile]++;\n  116  \n  117: 						GameObject instance = GetExistingTilePrefabInstance(tileMap, baseX + x, baseY + y, layer);\n  118: 						bool foundExisting = (instance != null);\n  119  \n  120  					#if UNITY_EDITOR\n  121: 						if (instance != null) {\n  122: 							if (UnityEditor.PrefabUtility.GetPrefabParent(instance) != prefab) {\n  123: 								instance = null;\n  124  							}\n  125  						}\n  126  					#endif\n  127  \n  128: 						if (instance == null) {\n  129  					#if UNITY_EDITOR\n  130: 							instance = UnityEditor.PrefabUtility.InstantiatePrefab(prefab) as GameObject;\n  131  					#else\n  132: 							instance = GameObject.Instantiate(prefab, Vector3.zero, Quaternion.identity) as GameObject;\n  133  					#endif\n  134  \n  135  					#if UNITY_EDITOR && !(UNITY_3_5 || UNITY_4_0 || UNITY_4_0_1 || UNITY_4_1 || UNITY_4_2)\n  136  							if (!Application.isPlaying) {\n  137: 								UnityEditor.Undo.RegisterCreatedObjectUndo(instance, \"Instantiated Prefab\");\n  138  							}\n  139  					#endif\n  140  						}\n  141  						\n  142: 						if (instance != null) {\n  143  							GameObject prefabGameObject = prefab as GameObject;\n  144  \n  ...\n  152  \n  153  							if (!foundExisting)\n  154: 								instance.name = prefab.name + \" \" + prefabCounts[tile].ToString();\n  155  \n  156: 							tk2dUtil.SetTransformParent(instance.transform, parent);\n  157: 							instance.transform.localPosition = pos;\n  158  \n  159  							// Add to tilePrefabs list\n  ...\n  161  							TilePrefabsY.Add(baseY + y);\n  162  							TilePrefabsLayer.Add(layer);\n  163: 							TilePrefabsInstance.Add(instance);\n  164  						}\n  165  					}\n  ...\n  176  			TilePrefabsY = new List<int>();\n  177  			TilePrefabsLayer = new List<int>();\n  178: 			TilePrefabsInstance = new List<GameObject>();\n  179  \n  180  			int[] prefabCounts = new int[tileMap.data.tilePrefabs.Length];\n  ...\n  207  			}\n  208  \n  209: 			tileMap.SetTilePrefabsList(TilePrefabsX, TilePrefabsY, TilePrefabsLayer, TilePrefabsInstance);\n  210  		}\n  211  \n  ...\n  243  						for (int q = 0; q < instListCount; ++q) {\n  244  							int x, y, layerIdx;\n  245: 							GameObject instance;\n  246: 							tileMap.GetTilePrefabsListItem(q, out x, out y, out layerIdx, out instance);\n  247: 							if (instance == go) {\n  248  								instExists[q] = true;\n  249  								break;\n  ...\n  261  			for (int i = 0; i < instListCount; ++i) {\n  262  				int x, y, layerIdx;\n  263: 				GameObject instance;\n  264: 				tileMap.GetTilePrefabsListItem(i, out x, out y, out layerIdx, out instance);\n  265  				\n  266  				// Is it already IN the list for some reason?\n  ...\n  276  					tileY.Add(y);\n  277  					tileLayer.Add(layerIdx);\n  278: 					tileInst.Add(instance);\n  279  \n  280: 					tk2dUtil.SetTransformParent(instance.transform, tileMap.PrefabsRoot.transform);\n  281  				}\n  282  			}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2dTileMap/Editor/tk2dTileMapEditor.cs:\n  540  					Undo.RegisterCompleteObjectUndo(tileMap, \"Create TileMap Data\");\n  541  #endif\n  542: 					tk2dTileMapData tileMapData = ScriptableObject.CreateInstance<tk2dTileMapData>();\n  543  					AssetDatabase.CreateAsset(tileMapData, assetPath);\n  544  					tileMap.data = tileMapData;\n  ...\n  584  					Undo.RegisterCompleteObjectUndo(tileMap, \"Create TileMap Editor Data\");\n  585  #endif\n  586: 					tk2dTileMapEditorData tileMapEditorData = ScriptableObject.CreateInstance<tk2dTileMapEditorData>();\n  587  					AssetDatabase.CreateAsset(tileMapEditorData, assetPath);\n  588  					tileMap.editorDataGUID = AssetDatabase.AssetPathToGUID(assetPath);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2dTileMap/Editor/tk2dTileMapUtility.cs:\n  184  			// Move all prefabs to new layer\n  185  			int targetLayer = layer + direction;\n  186: 			foreach (tk2dTileMap.TilemapPrefabInstance v in tileMap.TilePrefabsList) {\n  187  				if (v.layer == layer) {\n  188  					v.layer = targetLayer;\n  ...\n  200  		}\n  201  \n  202: 		/// Deletes all generated instances\n  203  		public static void MakeUnique(tk2dTileMap tileMap)\n  204  		{\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2dTileMap/Editor/Importer/tk2dTileMapImporter.cs:\n  136  		{\n  137  			System.IO.MemoryStream ms = new System.IO.MemoryStream();\n  138: 			var obj = System.Activator.CreateInstance(zlibType, ms);\n  139  			var invokeFlags = System.Reflection.BindingFlags.Default | System.Reflection.BindingFlags.InvokeMethod;\n  140  			zlibType.InvokeMember(\"Write\", \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2dUI/Code/Controls/tk2dUIDragItem.cs:\n   35          if (isBtnActive)\n   36          {\n   37:             if (tk2dUIManager.Instance__NoCreate != null)\n   38              {\n   39:                 tk2dUIManager.Instance.OnInputUpdate -= UpdateBtnPosition;\n   40              }\n   41              isBtnActive = false;\n   ..\n   53          Vector2 pos = uiItem.Touch.position;\n   54  \n   55:         Camera viewingCamera = tk2dUIManager.Instance.GetUICameraForControl( gameObject );\n   56          Vector3 worldPos = viewingCamera.ScreenToWorldPoint(new Vector3(pos.x, pos.y, transform.position.z - viewingCamera.transform.position.z));\n   57          worldPos.z = transform.position.z;\n   ..\n   67          if (!isBtnActive)\n   68          {\n   69:             tk2dUIManager.Instance.OnInputUpdate += UpdateBtnPosition;\n   70          }\n   71          isBtnActive = true;\n   ..\n   82          if (isBtnActive)\n   83          {\n   84:             tk2dUIManager.Instance.OnInputUpdate -= UpdateBtnPosition;\n   85          }\n   86          isBtnActive = false;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2dUI/Code/Controls/tk2dUIScrollableArea.cs:\n  173  \n  174                  if (isBackgroundButtonDown || isSwipeScrollingInProgress) {\n  175:                     if (tk2dUIManager.Instance__NoCreate != null) {\n  176:                         tk2dUIManager.Instance.OnInputUpdate -= BackgroundOverUpdate;\n  177                      }\n  178                      isBackgroundButtonDown = false;\n  ...\n  265          if (isBackgroundButtonOver)\n  266          {\n  267:             if (tk2dUIManager.Instance__NoCreate != null)\n  268              {\n  269:                 tk2dUIManager.Instance.OnScrollWheelChange -= BackgroundHoverOverScrollWheelChange;\n  270              }\n  271              isBackgroundButtonOver = false;\n  ...\n  274          if (isBackgroundButtonDown || isSwipeScrollingInProgress)\n  275          {\n  276:             if (tk2dUIManager.Instance__NoCreate != null)\n  277              {\n  278:                 tk2dUIManager.Instance.OnInputUpdate -= BackgroundOverUpdate;\n  279              }\n  280              isBackgroundButtonDown = false;\n  ...\n  369              if (!isBackgroundButtonDown && !isSwipeScrollingInProgress)\n  370              {\n  371:                 tk2dUIManager.Instance.OnInputUpdate += BackgroundOverUpdate;\n  372              }\n  373              swipeScrollingPressDownStartLocalPos = transform.InverseTransformPoint(CalculateClickWorldPos(backgroundUIItem));\n  ...\n  467                  {\n  468                      isSwipeScrollingInProgress = false;\n  469:                     tk2dUIManager.Instance.OnInputUpdate -= BackgroundOverUpdate;\n  470                  }\n  471  \n  ...\n  534  \n  535                  //unpress anything currently pressed in list\n  536:                 tk2dUIManager.Instance.OverrideClearAllChildrenPresses(backgroundUIItem);\n  537              }\n  538          }\n  ...\n  565                  if (!isSwipeScrollingInProgress)\n  566                  {\n  567:                     tk2dUIManager.Instance.OnInputUpdate -= BackgroundOverUpdate;\n  568                  }\n  569              }\n  ...\n  578              if (!isBackgroundButtonOver)\n  579              {\n  580:                 tk2dUIManager.Instance.OnScrollWheelChange += BackgroundHoverOverScrollWheelChange;\n  581              }\n  582              isBackgroundButtonOver = true;\n  ...\n  588          if (isBackgroundButtonOver)\n  589          {\n  590:             tk2dUIManager.Instance.OnScrollWheelChange -= BackgroundHoverOverScrollWheelChange;\n  591          }\n  592  \n  ...\n  597      {\n  598          Vector2 pos = btn.Touch.position;\n  599:         Camera viewingCamera = tk2dUIManager.Instance.GetUICameraForControl( gameObject );\n  600          Vector3 worldPos = viewingCamera.ScreenToWorldPoint(new Vector3(pos.x, pos.y, btn.transform.position.z - viewingCamera.transform.position.z));\n  601          worldPos.z = btn.transform.position.z;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2dUI/Code/Controls/tk2dUIScrollbar.cs:\n  229          if (isScrollThumbButtonDown)\n  230          {\n  231:             if (tk2dUIManager.Instance__NoCreate != null)\n  232              {\n  233:                 tk2dUIManager.Instance.OnInputUpdate -= MoveScrollThumbButton;\n  234              }\n  235              isScrollThumbButtonDown = false;\n  ...\n  238          if (isTrackHoverOver)\n  239          {\n  240:             if (tk2dUIManager.Instance__NoCreate != null)\n  241              {\n  242:                 tk2dUIManager.Instance.OnScrollWheelChange -= TrackHoverScrollWheelChange;\n  243              }\n  244              isTrackHoverOver = false;\n  ...\n  247          if (scrollUpDownButtonState != 0)\n  248          {\n  249:             tk2dUIManager.Instance.OnInputUpdate -= CheckRepeatScrollUpDownButton;\n  250              scrollUpDownButtonState = 0;\n  251          }\n  ...\n  317      private Vector3 CalculateClickWorldPos(tk2dUIItem btn)\n  318      {\n  319:         Camera viewingCamera = tk2dUIManager.Instance.GetUICameraForControl( gameObject );\n  320          Vector2 pos = btn.Touch.position;\n  321          Vector3 worldPos = viewingCamera.ScreenToWorldPoint(new Vector3(pos.x, pos.y, btn.transform.position.z - viewingCamera.transform.position.z));\n  ...\n  354              if (!isTrackHoverOver)\n  355              {\n  356:                 tk2dUIManager.Instance.OnScrollWheelChange += TrackHoverScrollWheelChange;\n  357              }\n  358              isTrackHoverOver = true;\n  ...\n  364          if (isTrackHoverOver)\n  365          {\n  366:             tk2dUIManager.Instance.OnScrollWheelChange -= TrackHoverScrollWheelChange;\n  367          }\n  368          isTrackHoverOver = false;\n  ...\n  373          if (!isScrollThumbButtonDown)\n  374          {\n  375:             tk2dUIManager.Instance.OnInputUpdate += MoveScrollThumbButton;\n  376          }\n  377          isScrollThumbButtonDown = true;\n  ...\n  395          if (isScrollThumbButtonDown)\n  396          {\n  397:             tk2dUIManager.Instance.OnInputUpdate -= MoveScrollThumbButton;\n  398          }\n  399          isScrollThumbButtonDown = false;\n  ...\n  415          if (scrollUpDownButtonState == 0)\n  416          {\n  417:             tk2dUIManager.Instance.OnInputUpdate += CheckRepeatScrollUpDownButton;\n  418          }\n  419          scrollUpDownButtonState = -1;\n  ...\n  426          if (scrollUpDownButtonState != 0)\n  427          {\n  428:             tk2dUIManager.Instance.OnInputUpdate -= CheckRepeatScrollUpDownButton;\n  429          }\n  430          scrollUpDownButtonState = 0;\n  ...\n  437          if (scrollUpDownButtonState == 0)\n  438          {\n  439:             tk2dUIManager.Instance.OnInputUpdate += CheckRepeatScrollUpDownButton;\n  440          }\n  441          scrollUpDownButtonState = 1;\n  ...\n  447          if (scrollUpDownButtonState != 0)\n  448          {\n  449:             tk2dUIManager.Instance.OnInputUpdate -= CheckRepeatScrollUpDownButton;\n  450          }\n  451          scrollUpDownButtonState = 0;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2dUI/Code/Controls/tk2dUISoundItem.cs:\n   70      private void PlaySound(AudioClip source)\n   71      {\n   72:         tk2dUIAudioManager.Instance.Play(source);\n   73      }\n   74  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2dUI/Code/Controls/tk2dUITextInput.cs:\n  171      {\n  172          wasStartedCalled = true;\n  173:         if (tk2dUIManager.Instance__NoCreate != null)\n  174          {\n  175:             tk2dUIManager.Instance.OnAnyPress += AnyPress;\n  176          }\n  177          wasOnAnyPressEventAttached = true;\n  ...\n  182          if (wasStartedCalled && !wasOnAnyPressEventAttached)\n  183          {\n  184:             if (tk2dUIManager.Instance__NoCreate != null)\n  185              {\n  186:                 tk2dUIManager.Instance.OnAnyPress += AnyPress;\n  187              }\n  188          }\n  ...\n  198      void OnDisable()\n  199      {\n  200:         if (tk2dUIManager.Instance__NoCreate != null)\n  201          {\n  202:             tk2dUIManager.Instance.OnAnyPress -= AnyPress;\n  203              if (listenForKeyboardText)\n  204              {\n  205:                 tk2dUIManager.Instance.OnInputUpdate -= ListenForKeyboardTextUpdate;\n  206              }\n  207          }\n  ...\n  329          if (!listenForKeyboardText)\n  330          {\n  331:             tk2dUIManager.Instance.OnInputUpdate += ListenForKeyboardTextUpdate;\n  332          }\n  333          listenForKeyboardText = true;\n  ...\n  380          if (listenForKeyboardText)\n  381          {\n  382:             tk2dUIManager.Instance.OnInputUpdate -= ListenForKeyboardTextUpdate;\n  383          }\n  384          listenForKeyboardText = false;\n  ...\n  395      private void AnyPress()\n  396      {\n  397:         if (isSelected && tk2dUIManager.Instance.PressedUIItem != selectionBtn)\n  398          {\n  399              InputDeselected();\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2dUI/Code/Core/tk2dUIAudioManager.cs:\n    3  \n    4  /// <summary>\n    5: /// Singleton AudioManager used by tk2dUISoundButton ex: tk2dUIAudioManager.Instance.Play(audioClip);\n    6  /// </summary>\n    7  [AddComponentMenu(\"2D Toolkit/UI/Core/tk2dUIAudioManager\")]\n    8  public class tk2dUIAudioManager : MonoBehaviour\n    9  {\n   10:     private static tk2dUIAudioManager instance;\n   11  \n   12      private AudioSource audioSrc;\n   13  \n   14:     public static tk2dUIAudioManager Instance\n   15      {\n   16          get\n   17          {\n   18:             if (instance == null)\n   19              {\n   20:                 instance = FindObjectOfType(typeof(tk2dUIAudioManager)) as tk2dUIAudioManager;\n   21:                 if (instance == null)\n   22                  {\n   23:                     instance = new GameObject(\"tk2dUIAudioManager\").AddComponent<tk2dUIAudioManager>();\n   24                  }\n   25              }\n   26:             return instance;\n   27          }\n   28      }\n   ..\n   30      void Awake()\n   31      {\n   32:         if (instance == null)\n   33          {\n   34:             instance = this;\n   35          }\n   36          else\n   37          {\n   38:             if (instance != this)\n   39              {\n   40                  Destroy(this); // remove self, but don't destroy the gameobject its attached to. i.e. don't kill the host object.\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2dUI/Code/Core/tk2dUIItem.cs:\n  125      void Start()\n  126      {\n  127:         if (tk2dUIManager.Instance == null) {\n  128              Debug.LogError(\"Unable to find tk2dUIManager. Please create a tk2dUIManager in the scene before proceeding.\");\n  129          }\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2dUI/Code/Core/tk2dUIManager.cs:\n   16      ///  Used to reference tk2dUIManager without a direct reference via singleton structure (will not auto-create and only one can exist at a time)\n   17      /// </summary>\n   18:     private static tk2dUIManager instance;\n   19:     public static tk2dUIManager Instance\n   20      {\n   21          get\n   22          {\n   23:             if (instance == null)\n   24              {\n   25:                 instance = FindObjectOfType(typeof(tk2dUIManager)) as tk2dUIManager;\n   26:                 if (instance == null) {\n   27                      GameObject go = new GameObject(\"tk2dUIManager\");\n   28:                     instance = go.AddComponent<tk2dUIManager>();\n   29                  }\n   30              }\n   31:             return instance;\n   32          }\n   33      }\n   34  	\n   35: 	public static tk2dUIManager Instance__NoCreate {\n   36  		get {\n   37: 			return instance;\n   38  		}\n   39  	}\n   ..\n  242      void Awake()\n  243      {\n  244:         if (instance == null)\n  245          {\n  246:             instance = this;\n  247  \n  248:             if (instance.transform.childCount != 0) {\n  249                  Debug.LogError(\"You should not attach anything to the tk2dUIManager object. \" +\n  250                      \"The tk2dUIManager will not get destroyed between scene switches and any children will persist as well.\");\n  ...\n  258          {\n  259              //can only be one tk2dUIManager at one-time, if another one is found Destroy it\n  260:             if (instance != this)\n  261              {\n  262:                 Debug.Log(\"Discarding unnecessary tk2dUIManager instance.\");\n  263  \n  264                  if (uiCamera != null) {\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2dUI/Editor/Core/tk2dUIMethodBindingHelper.cs:\n   24              System.Type type = beh.GetType();\n   25              if (addedTypes.IndexOf(type) == -1) {\n   26:                 System.Reflection.MethodInfo[] methods = type.GetMethods(System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic);\n   27                  foreach (System.Reflection.MethodInfo method in methods) {\n   28                      // Only add variables added by user, i.e. we don't want functions from the base UnityEngine baseclasses or lower\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2dUI_demo/tk2dUIDemo2Controller.cs:\n   49  		// Get screen extents		\n   50  		int last = rectMin.Length - 1;\n   51: 		rectMin[last].Set(tk2dCamera.Instance.ScreenExtents.xMin, tk2dCamera.Instance.ScreenExtents.yMin, 0);\n   52: 		rectMax[last].Set(tk2dCamera.Instance.ScreenExtents.xMax, tk2dCamera.Instance.ScreenExtents.yMax, 0);\n   53  	}\n   54  }\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2dUI_demo/tk2dUIDemo6Controller.cs:\n   64  	// This will be called as an item comes into view, so don't do any crazy\n   65  	// processing in here. It is possible to start a coroutine to cache a profile\n   66: 	// picture, for instance.\n   67  	void CustomizeListObject( Transform contentRoot, int itemId ) {\n   68  		contentRoot.Find(\"Name\").GetComponent<tk2dTextMesh>().text = allItems[itemId].name;\n\n886 matches across 155 files\n\n\nSearching 1452 files for \"LoadCLRPackage\"\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/Example/ExampleBehaviour.cs:\n   76  	void Awake() {\n   77  		env = new Lua();\n   78: 		env.LoadCLRPackage();\n   79  		\n   80  		env[\"this\"] = this; // Give the script access to the gameobject.\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/Example/SpawnSphere.cs:\n   25  	void Awake() {\n   26  		env = new Lua();\n   27: 		env.LoadCLRPackage();\n   28  \n   29  		env[\"this\"] = this;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/Example/TestBehaviour.cs:\n   25  	void Awake() {\n   26  		env = new Lua();\n   27: 		env.LoadCLRPackage();\n   28  \n   29  		env[\"this\"] = this; // Give the script access to the gameobject.\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/Lua.cs:\n  736  		}\n  737  \n  738: 		public void LoadCLRPackage ()\n  739  		{\n  740  			LuaLib.LuaLDoString (luaState, Lua.clr_package);\n\n4 matches across 4 files\n\n\nSearching 1452 files for \"class Lua\"\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KeraLua/Lua.cs:\n    7  	public delegate int LuaNativeFunction (KeraLua.LuaState luaState);\n    8  \n    9: 	public static partial class Lua\n   10  	{\n   11  		public static int LuaGC (IntPtr luaState, int what, int data)\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lapi.cs:\n   20  	using ZIO = Lua.Zio;\n   21  \n   22: 	public partial class Lua\n   23  	{\n   24  		public const string LuaIdent =\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lauxlib.cs:\n   20  	using LuaIntegerType = System.Int32;\n   21  \n   22: 	public partial class Lua\n   23  	{\n   24  		#if LUA_COMPAT_GETN\n   ..\n   39  \n   40  \n   41: 		public class LuaLReg {\n   42  		  public LuaLReg(CharPtr name, LuaNativeFunction func) {\n   43  			  this.name = name;\n   ..\n   94  \n   95  \n   96: 		public class LuaLBuffer {\n   97  		  public int p;			/* current position in buffer */\n   98  		  public int lvl;  /* number of strings in the stack (level) */\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lbaselib.cs:\n   13  	using LuaNumberType = System.Double;\n   14  \n   15: 	public partial class Lua\n   16  	{\n   17  		/*\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lcode.cs:\n   71  	};\n   72  \n   73: 	public partial class Lua\n   74  	{\n   75  		/*\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/ldblib.cs:\n   11  namespace KopiLua\n   12  {\n   13: 	public partial class Lua\n   14  	{\n   15  		private static int DBGetRegistry (LuaState L) {\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/ldebug.cs:\n   16  	using Instruction = System.UInt32;\n   17  \n   18: 	public partial class Lua\n   19  	{\n   20  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/ldo.cs:\n   32  	using ZIO = Lua.Zio;\n   33  \n   34: 	public partial class Lua\n   35  	{\n   36  		public static void LuaDCheckStack(LuaState L, int n) {\n   ..\n   78  \n   79  		/* chain list of long jump buffers */\n   80: 		public class LuaLongJmp {\n   81  		  public LuaLongJmp previous;\n   82  		  public LuaIJmpBuf b;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/ldump.cs:\n   19  	using TValue = Lua.LuaTypeValue;\n   20  \n   21: 	public partial class Lua\n   22  	{\n   23  		public class DumpState {\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lfunc.cs:\n   17  	using Instruction = System.UInt32;\n   18  \n   19: 	public partial class Lua\n   20  	{\n   21  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lgc.cs:\n   21  	using Instruction = System.UInt32;\n   22  \n   23: 	public partial class Lua\n   24  	{\n   25  		/*\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/linit.cs:\n   11  namespace KopiLua\n   12  {\n   13: 	public partial class Lua\n   14  	{\n   15  		private readonly static LuaLReg[] lualibs = {\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/liolib.cs:\n   21  	}\n   22  \n   23: 	public partial class Lua\n   24  	{\n   25  		public const int IOINPUT	= 1;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/llex.cs:\n   17  	using ZIO = Lua.Zio;\n   18  \n   19: 	public partial class Lua\n   20  	{\n   21  		public const int FIRSTRESERVED	= 257;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/llimits.cs:\n   22  	using Instruction = System.UInt32;\n   23  \n   24: 	public partial class Lua\n   25  	{\n   26  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lmathlib.cs:\n   13  	using LuaNumberType = System.Double;\n   14  \n   15: 	public partial class Lua\n   16  	{\n   17  		public const double PI = 3.14159265358979323846;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lmem.cs:\n   14  namespace KopiLua\n   15  {\n   16: 	public partial class Lua\n   17  	{\n   18  		public const string MEMERRMSG	= \"not enough memory\";\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lnet.cs:\n    3  namespace KopiLua\n    4  {\n    5: 	public partial class Lua\n    6  	{\n    7  		private static object tag = 0;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/loadlib.cs:\n   18  namespace KopiLua\n   19  {\n   20: 	public partial class Lua\n   21  	{\n   22  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lobject.cs:\n   19  	using Instruction = System.UInt32;\n   20  \n   21: 	public partial class Lua\n   22  	{\n   23  		/* tags for values visible from Lua */\n   ..\n  104  		//#define TValuefields	Value value; int tt\n  105  \n  106: 		public class LuaTypeValue : ArrayElement\n  107  		{\n  108  			private LuaTypeValue[] values = null;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lopcodes.cs:\n   13  	using Instruction = System.UInt32;\n   14  \n   15: 	public partial class Lua\n   16  	{\n   17  		/*===========================================================================\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/loslib.cs:\n   19  	using lua_Number = System.Double;\n   20  \n   21: 	public partial class Lua\n   22  	{\n   23  		private static int OSPushResult (LuaState L, int i, CharPtr filename) {\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lparser.cs:\n   17  	using ZIO = Lua.Zio;\n   18  \n   19: 	public partial class Lua\n   20  	{\n   21  		/*\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lstate.cs:\n   21  	using Instruction = System.UInt32;\n   22  \n   23: 	public partial class Lua\n   24  	{\n   25  		/* table of globals */\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lstring.cs:\n   15  	using lu_byte = System.Byte;\n   16  \n   17: 	public partial class Lua\n   18  	{\n   19  		public static int sizestring(TString s) {return ((int)s.len + 1) * GetUnmanagedSize(typeof(char)); }\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lstrlib.cs:\n   18  	using UNSIGNED_LUA_INTFRM_T = System.UInt64;\n   19  \n   20: 	public partial class Lua\n   21  	{\n   22  		private static int str_len (LuaState L) {\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/ltable.cs:\n   17  	using lua_Number = System.Double;\n   18  \n   19: 	public partial class Lua\n   20  	{\n   21  		/*\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/ltablib.cs:\n   13  	using lua_Number = System.Double;\n   14  \n   15: 	public partial class Lua\n   16  	{\n   17  		private static int aux_getn(LuaState L, int n)	{LuaLCheckType(L, n, LUA_TTABLE); return LuaLGetN(L, n);}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/ltm.cs:\n   13  	using TValue = Lua.LuaTypeValue;\n   14  \n   15: 	public partial class Lua\n   16  	{\n   17  		/*\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lua.cs:\n   22  \n   23  	[CLSCompliantAttribute(true)]\n   24: 	public partial class Lua\n   25  	{\n   26  		private static bool RunningOnUnix\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/luaconf.cs:\n   22      using System.Globalization;\n   23  \n   24: 	public partial class Lua\n   25  	{\n   26  		/*\n   ..\n  654  		//#define LUAI_USER_ALIGNMENT_T	union { double u; void *s; long l; }\n  655  \n  656: 		public class LuaException : Exception\n  657  		{\n  658  			public LuaState L;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/LuaDebug.cs:\n    3  namespace KopiLua\n    4  {\n    5: 	public class LuaDebug {\n    6  		public int event_;\n    7  		public CharPtr name;	/* (n) */\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lualib.cs:\n   11  namespace KopiLua\n   12  {\n   13: 	public partial class Lua\n   14  	{\n   15  		/* Key to file-handle type */\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/LuaState.cs:\n   13  		** `per thread' state\n   14  		*/\n   15: 	public class LuaState : Lua.GCObject {\n   16  \n   17  		public lu_byte status;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lundump.cs:\n   22  	using ZIO = Lua.Zio;\n   23  \n   24: 	public partial class Lua\n   25  	{\n   26  		/* for header of binary files -- this is Lua 5.1 */\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lvm.cs:\n   19  	using Instruction = System.UInt32;\n   20  \n   21: 	public partial class Lua\n   22  	{\n   23  		[CLSCompliantAttribute(false)]\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lzio.cs:\n   14  	using ZIO = Lua.Zio;\n   15  \n   16: 	public partial class Lua\n   17  	{\n   18  		public const int EOZ = -1;			/* end of stream */\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/print.cs:\n   16  	using Instruction = System.UInt32;\n   17  \n   18: 	public partial class Lua\n   19  	{\n   20  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/Lua.cs:\n   69  	 * */\n   70  	[CLSCompliant(true)]\n   71: 	public class Lua : IDisposable\n   72  	{\n   73  		#region lua debug functions\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/LuaBase.cs:\n   33  	/// Base class to provide consistent disposal flow across lua objects. Uses code provided by Yves Duhoux and suggestions by Hans Schmeidenbacher and Qingrui Li \n   34  	/// </summary>\n   35: 	public abstract class LuaBase : IDisposable\n   36  	{\n   37  		private bool _Disposed;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/LuaFunction.cs:\n   40  	#endif\n   41  \n   42: 	public class LuaFunction : LuaBase\n   43  	{\n   44  		internal LuaNativeFunction function;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/LuaGlobalAttribute.cs:\n   34  	/// <see cref=\"LuaRegistrationHelper.TaggedStaticMethods\"/>\n   35  	[AttributeUsage(AttributeTargets.Method)]\n   36: 	public sealed class LuaGlobalAttribute : Attribute\n   37  	{\n   38  		/// <summary>\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/LuaHideAttribute.cs:\n   32  	/// </summary>\n   33  	[AttributeUsage(AttributeTargets.Method | AttributeTargets.Field | AttributeTargets.Property)]\n   34: 	public sealed class LuaHideAttribute : Attribute\n   35  	{\n   36  	}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/LuaRegistrationHelper.cs:\n   34  namespace NLua\n   35  {\n   36: 	public static class LuaRegistrationHelper\n   37  	{\n   38  		#region Tagged instance methods\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/LuaTable.cs:\n   47  	 * Version: 1.0\n   48  	 */\n   49: 	public class LuaTable : LuaBase\n   50  	{\n   51  		public LuaTable (int reference, Lua interpreter)\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/LuaUserData.cs:\n   38  	#endif\n   39  \n   40: 	public class LuaUserData : LuaBase\n   41  	{\n   42  		public LuaUserData (int reference, Lua interpreter)\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/Exceptions/LuaException.cs:\n   37  	[Serializable]\n   38  #endif\n   39: 	public class LuaException : Exception\n   40  	{\n   41  		public LuaException ()\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/Exceptions/LuaScriptException.cs:\n   35  	[Serializable]\n   36  #endif\n   37: 	public class LuaScriptException : LuaException\n   38  	{\n   39  		/// <summary>\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/GenerateEventAssembly/CodeGeneration.cs:\n  571  \n  572  			// Gets the function the method will delegate to by calling\n  573: 			// the getTableFunction method of class LuaClassHelper\n  574  			generator.Emit (OpCodes.Ldarg_0);\n  575  			generator.Emit (OpCodes.Ldfld, luaTableField);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/LuaLib/LuaIndexes.cs:\n   37  	#endif\n   38  \n   39: 	public class LuaIndexes\n   40  	{\n   41  		static int registryIndex = 0;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/LuaLib/LuaLib.cs:\n   46  \n   47  \n   48: 	public class LuaLib\n   49  	{\n   50  		public static int LuaGC (LuaState luaState, GCOptions what, int data)\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/Method/LuaClassHelper.cs:\n   33  	 * Version: 1.0\n   34  	 */\n   35: 	public class LuaClassHelper\n   36  	{\n   37  		/*\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/Method/LuaDelegate.cs:\n   35  	 * Version: 1.0\n   36  	 */\n   37: 	public class LuaDelegate\n   38  	{\n   39  		public LuaFunction function;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/Method/LuaEventHandler.cs:\n   35  	 * Version: 1.0\n   36  	 */\n   37: 	public class LuaEventHandler\n   38  	{\n   39  		public LuaFunction handler = null;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/Method/LuaMethodWrapper.cs:\n   53  	 * Version: 1.0\n   54  	 */\n   55: 	class LuaMethodWrapper\n   56  	{\n   57  		internal LuaNativeFunction invokeFunction;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Editor/BindLua.cs:\n   13  \n   14  \n   15: public static class LuaBinding\n   16  {\n   17      public class BindType\n   ..\n  255          sb.AppendLine(\"using System;\");\n  256          sb.AppendLine();\n  257:         sb.AppendLine(\"public static class LuaBinder\");\n  258          sb.AppendLine(\"{\");\n  259          sb.AppendLine(\"\\tpublic static void Bind(IntPtr L)\");\n  ...\n  291          sb.AppendLine(\"using System;\");\n  292          sb.AppendLine();\n  293:         sb.AppendLine(\"public static class LuaBinder\");\n  294          sb.AppendLine(\"{\");\n  295          sb.AppendLine(\"\\tpublic static void Bind(IntPtr L)\");\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/Base/LuaScriptMgr.cs:\n    8  using System.Diagnostics;\n    9  \n   10: public class LuaScriptMgr\n   11  {\n   12      private static LuaScriptMgr s_cInstance;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/LuaBinder.cs:\n    1  using System;\n    2: public static class LuaBinder\n    3  {\n    4  	public static void Bind(IntPtr L)\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/LuaWrap.cs:\n   55  }\n   56  \n   57: public class LuaStringBuffer\n   58  {\n   59      public LuaStringBuffer(IntPtr source,int len)\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/GenerateEventAssembly.cs:\n  536              }\n  537              // Gets the function the method will delegate to by calling\n  538:             // the getTableFunction method of class LuaClassHelper\n  539              generator.Emit(OpCodes.Ldarg_0);\n  540              generator.Emit(OpCodes.Ldfld,luaTableField);\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/Lua.cs:\n   17      using UnityEngine;\n   18  \n   19:     public class LuaState : IDisposable\n   20      {\n   21          public IntPtr L;\n   ..\n  865      }\n  866  \n  867:     public class LuaThread : LuaState\n  868      {\n  869          // Tracks if thread is running or not\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaBase.cs:\n    8      /// Base class to provide consistent disposal flow across lua objects. Uses code provided by Yves Duhoux and suggestions by Hans Schmeidenbacher and Qingrui Li\n    9      /// </summary>\n   10:     public abstract class LuaBase : IDisposable\n   11      {        \n   12          private bool _Disposed;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaDLL.cs:\n   51      }\n   52  \n   53: 	sealed class LuaIndexes\n   54  	{\n   55  		public static int LUA_REGISTRYINDEX=-10000;\n   ..\n   69  \n   70      public delegate int LuaFunctionCallback(IntPtr luaState);\n   71: 	public class LuaDLL\n   72  	{\n   73          public static int LUA_MULTRET = -1;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaException.cs:\n    8      /// </summary>\n    9      [Serializable]\n   10:     public class LuaException : Exception\n   11      {\n   12          public LuaException()\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaFunction.cs:\n    5  namespace LuaInterface\n    6  {\n    7:     public class LuaFunction : LuaBase\n    8      {        \n    9          internal LuaCSFunction function;        \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaGlobalAttribute.cs:\n   10      [AttributeUsage(AttributeTargets.Method)]\n   11      // sealed\n   12:     public class LuaGlobalAttribute : Attribute\n   13      {\n   14          private string name,descript;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaHideAttribute.cs:\n    7      /// </summary>\n    8      [AttributeUsage(AttributeTargets.Method | AttributeTargets.Field | AttributeTargets.Property)]\n    9:     public sealed class LuaHideAttribute : Attribute\n   10      {}\n   11  }\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaObjectMap.cs:\n    3  \n    4  //查询，添加都比较快速。 Remove 较少，按照二分查找插入pool中\n    5: public class LuaObjectMap\n    6  {\n    7      public class FastQueue\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaRegistrationHelper.cs:\n    5  namespace LuaInterface\n    6  {\n    7:     public static class LuaRegistrationHelper\n    8      {\n    9          #region Tagged instance methods\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaScriptException.cs:\n    6      /// Exceptions thrown by the Lua runtime because of errors in the script\n    7      /// </summary>\n    8:     public class LuaScriptException : LuaException\n    9      {\n   10          private bool isNet;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaStatic.cs:\n   13      public delegate byte[] ReadLuaFile(string name);\n   14  	\n   15: 	public static class LuaStatic\n   16  	{\n   17          public static ReadLuaFile Load = null;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaTable.cs:\n   12       * Version: 1.0\n   13       */\n   14:     public class LuaTable : LuaBase\n   15      {\n   16          //internal int _Reference;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaUserData.cs:\n    5  namespace LuaInterface\n    6  {\n    7:     public class LuaUserData : LuaBase\n    8      {\n    9          //internal int _Reference;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/MethodWrapper.cs:\n   70       * Version: 1.0\n   71       */\n   72:     class LuaMethodWrapper\n   73      {\n   74          private ObjectTranslator _Translator;\n   ..\n  473       * Version: 1.0\n  474       */\n  475:     public class LuaEventHandler\n  476      {\n  477          public LuaFunction handler = null;\n  ...\n  497       * Version: 1.0\n  498       */\n  499:     public class LuaDelegate\n  500      {\n  501          public Type[] returnTypes;\n  ...\n  541       * Version: 1.0\n  542       */\n  543:     public class LuaClassHelper\n  544      {\n  545          /*\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Examples/06_LuaCoroutines/LuaCoroutines.cs:\n    3  using LuaInterface;\n    4  \n    5: public class LuaCoroutines : MonoBehaviour {\n    6  \n    7      // This example will print a fibonacci sequence for 1 to 10, waiting 1 second between each iteration\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/Common.cs:\n    2  namespace UniLua\n    3  {\n    4: 	public static class LuaConf\n    5  	{\n    6  		public const int LUAI_BITSINT			= 32;\n    .\n   22  	}\n   23  \n   24: 	public static class LuaLimits\n   25  	{\n   26  		public const int MAX_INT 	= System.Int32.MaxValue - 2;\n   ..\n   30  	}\n   31  \n   32: 	public static class LuaDef\n   33  	{\n   34  		public const int LUA_MINSTACK 			= 20;\n   ..\n   58  	}\n   59  \n   60: 	public static class LuaConstants\n   61  	{\n   62  		public const int LUA_NOREF = -2;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/Do.cs:\n    9  	using Exception = System.Exception;\n   10  \n   11: 	public class LuaRuntimeException : Exception\n   12  	{\n   13  		public ThreadStatus ErrCode { get; private set; }\n   ..\n   19  	}\n   20  \n   21: 	public partial class LuaState\n   22  	{\n   23  		internal void D_Throw( ThreadStatus errCode )\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaAPI.cs:\n  123  	}\n  124  \n  125: 	public static class LuaAPI\n  126  	{\n  127  		public static ILuaState NewState()\n  ...\n  133  	internal delegate void PFuncDelegate<T>(ref T ud);\n  134  \n  135: 	public partial class LuaState : ILuaState\n  136  	{\n  137  		LuaState ILuaAPI.NewThread()\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaAuxLib.cs:\n  125  	}\n  126  \n  127: 	public partial class LuaState\n  128  	{\n  129  		private const int LEVELS1 = 12; // size of the first part of the stack\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaBaseLib.cs:\n    8  	using Int32 = System.Int32;\n    9  \n   10: 	internal static class LuaBaseLib\n   11  	{\n   12  		internal static int OpenLib( ILuaState lua )\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaBitLib.cs:\n    3  {\n    4  \n    5: 	internal class LuaBitLib\n    6  	{\n    7  		public const string LIB_NAME = \"bit32\";\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaCoroLib.cs:\n    3  {\n    4  \n    5: 	internal class LuaCoroLib\n    6  	{\n    7  		public const string LIB_NAME = \"coroutine\";\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaDebug.cs:\n    2  namespace UniLua\n    3  {\n    4: 	public class LuaDebug\n    5  	{\n    6  		public string 		Name;\n    .\n   19  	}\n   20  \n   21: 	public partial class LuaState\n   22  	{\n   23  		bool ILuaAPI.GetStack( int level, LuaDebug ar )\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaDebugLib.cs:\n    2  namespace UniLua\n    3  {\n    4: 	internal class LuaDebugLib\n    5  	{\n    6  		public const string LIB_NAME = \"debug\";\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaEncLib.cs:\n    4  namespace UniLua\n    5  {\n    6: 	class LuaEncLib\n    7  	{\n    8  		public const string LIB_NAME = \"enc\";\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaFFILib.cs:\n    8  	using ULDebug = UniLua.Tools.ULDebug;\n    9  \n   10: 	internal class LuaFFILib\n   11  	{\n   12  		public const string LIB_NAME = \"ffi.cs\";\n   ..\n  327  		}\n  328  \n  329: 		static class LuaStackUtil\n  330  		{\n  331  			public static int PushRawValue( ILuaState lua, object o, Type t )\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaFile.cs:\n    7  namespace UniLua\n    8  {\n    9: 	internal class LuaFile\n   10  	{\n   11  		// private static readonly string LUA_ROOT = System.IO.Path.Combine(Application.streamingAssetsPath, \"LuaRoot\");\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaFunc.cs:\n    8  namespace UniLua\n    9  {\n   10: 	public partial class LuaState\n   11  	{\n   12  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaMathLib.cs:\n    7  	using BitConverter = System.BitConverter;\n    8  \n    9: 	internal class LuaMathLib\n   10  	{\n   11  		public const string LIB_NAME = \"math\";\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaObject.cs:\n  238  	}\n  239  \n  240: 	public class LuaLClosureValue\n  241  	{\n  242  		public LuaProto 		Proto;\n  ...\n  252  	}\n  253  	\n  254: 	public class LuaUserDataValue\n  255  	{\n  256  		public object Value;\n  ...\n  273  	}\n  274  \n  275: 	public class LuaProto\n  276  	{\n  277  		public List<Instruction> 	Code;\n  ...\n  307  	}\n  308  	\n  309: 	public class LuaUpvalue\n  310  	{\n  311  		public StkId			V;\n  ...\n  321  	}\n  322  \n  323: 	public class LuaCsClosureValue\n  324  	{\n  325  		public CSharpFunctionDelegate 	F;\n  ...\n  344  	}\n  345  \n  346: 	public partial class LuaState\n  347  	{\n  348  		internal static StkId TheNilValue;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaOsLib.cs:\n    4  	using System.Diagnostics;\n    5  \n    6: 	internal class LuaOSLib\n    7  	{\n    8  		public const string LIB_NAME = \"os\";\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaPkgLib.cs:\n   13  	using Exception = System.Exception;\n   14  \n   15: 	internal class LuaPkgLib\n   16  	{\n   17  		public const string LIB_NAME = \"package\";\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaState.cs:\n  132  	public delegate void LuaHookDelegate(ILuaState lua, LuaDebug ar);\n  133  \n  134: 	public partial class LuaState\n  135  	{\n  136  		public StkId[]			Stack;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaStrLib.cs:\n    6  	using Convert = System.Convert;\n    7  \n    8: 	internal static class LuaStrLib\n    9  	{\n   10  		public const string LIB_NAME = \"string\";\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaTable.cs:\n    9  	using ULDebug = UniLua.Tools.ULDebug;\n   10  \n   11: 	public class LuaTable {\n   12  		public LuaTable MetaTable;\n   13  		public uint NoTagMethodFlags;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaTableLib.cs:\n    6  	using StringBuilder = System.Text.StringBuilder;\n    7  \n    8: 	internal class LuaTableLib\n    9  	{\n   10  		public const string LIB_NAME = \"table\";\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/TagMethod.cs:\n   25  	}\n   26  \n   27: 	public partial class LuaState\n   28  	{\n   29  		private string GetTagMethodName( TMS tm )\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/VM.cs:\n   22  	using StringBuilder = System.Text.StringBuilder;\n   23  \n   24: 	public partial class LuaState\n   25  	{\n   26  		private const int MAXTAGLOOP = 100;\n\n122 matches across 98 files\n\n\nSearching 1452 files for \"\"require\"\"\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/loadlib.cs:\n  639  		private readonly static LuaLReg[] LLFuncs = {\n  640  		  new LuaLReg(\"module\", LLModule),\n  641: 		  new LuaLReg(\"require\", LLRequire),\n  642  		  new LuaLReg(null, null)\n  643  		};\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaPkgLib.cs:\n  108  			{\n  109  				new NameFuncPair( \"module\", 	LL_Module ),\n  110: 				new NameFuncPair( \"require\", 	LL_Require ),\n  111  			};\n  112  			lua.L_SetFuncs( loadLibFuncs, 1 ); // open lib into global table\n\n2 matches across 2 files\n\n\nSearching 1367 files for \"class ILuaAuxLib\"\n\n0 matches across 0 files\n\n\nSearching 1017 files for \"L_NewLib\"\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaAuxLib.cs:\n   40  		void 	L_RequireF( string moduleName, CSharpFunctionDelegate openFunc, bool global );\n   41  		void 	L_OpenLibs();\n   42: 		void 	L_NewLibTable( NameFuncPair[] define );\n   43: 		void	L_NewLib( NameFuncPair[] define );\n   44  		void 	L_SetFuncs( NameFuncPair[] define, int nup );\n   45  		\n   ..\n  613  		}\n  614  \n  615: 		public void L_NewLibTable( NameFuncPair[] define )\n  616  		{\n  617  			API.CreateTable( 0, define.Length );\n  618  		}\n  619  \n  620: 		public void L_NewLib( NameFuncPair[] define )\n  621  		{\n  622: 			L_NewLibTable( define );\n  623  			L_SetFuncs( define, 0 );\n  624  		}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaBitLib.cs:\n   27  			};\n   28  \n   29: 			lua.L_NewLib( define );\n   30  			return 1;\n   31  		}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaCoroLib.cs:\n   19  			};\n   20  \n   21: 			lua.L_NewLib( define );\n   22  			return 1;\n   23  		}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaDebugLib.cs:\n   13  			};\n   14  \n   15: 			lua.L_NewLib( define );\n   16  			return 1;\n   17  		}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaEncLib.cs:\n   18  			};\n   19  \n   20: 			lua.L_NewLib( define );\n   21  \n   22  			lua.PushString( ENC_UTF8 );\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaFFILib.cs:\n   42  			};\n   43  \n   44: 			lua.L_NewLib( define );\n   45  			return 1;\n   46  		}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaIOLib.cs:\n   26  			};\n   27  \n   28: 			lua.L_NewLib( define );\n   29  			return 1;\n   30  		}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaMathLib.cs:\n   49  			};\n   50  \n   51: 			lua.L_NewLib( define );\n   52  \n   53  			lua.PushNumber( Math.PI );\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaOsLib.cs:\n   17  			};\n   18  \n   19: 			lua.L_NewLib( define );\n   20  			return 1;\n   21  		}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaPkgLib.cs:\n   57  			// };\n   58  \n   59: 			// lua.L_NewLib( define );\n   60  			\n   61  			// // create table CLIBS to keep track of loaded C libraries\n   ..\n   71  				new NameFuncPair( \"seeall\", 	PKG_SeeAll ),\n   72  			};\n   73: 			lua.L_NewLib( pkg_define );\n   74  \n   75  			CreateSearchersTable( lua );\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaStrLib.cs:\n   42  			};\n   43  \n   44: 			lua.L_NewLib( define );\n   45  			CreateMetaTable( lua );\n   46  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaTableLib.cs:\n   23  			};\n   24  \n   25: 			lua.L_NewLib( define );\n   26  \n   27  #if LUA_COMPAT_UNPACK\n\n17 matches across 12 files\n\n\nSearching 1017 files for \"class api\"\n\n0 matches across 0 files\n\n\nSearching 1017 files for \"class API\"\n\n0 matches across 0 files\n\n\nSearching 1017 files for \"API\"\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/Manager/MyApplaction.cs:\n   39          // // LuaScriptMgr luaMgr = LuaScriptMgr.Instance;\n   40  \n   41:         Lua = LuaAPI.NewState();\n   42          Lua.L_OpenLibs();\n   43  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DGameResource/src/ResAPI/ResAPI.cs:\n    3  using System.Collections.Generic;\n    4  \n    5: //	ResAPI.cs\n    6  //	Author: Lu Zexi\n    7  //	2014-10-18\n    .\n   11  {\n   12  	/// <summary>\n   13: 	/// Res API.\n   14  	/// </summary>\n   15: 	public class ResAPI : MonoBehaviour\n   16  	{\n   17  		public delegate void DOWN_FINISH_CALLBACK(Dictionary<string , object> res);\n   ..\n   25  \n   26  		//\n   27: 		public static ResAPI Create()\n   28  		{\n   29: 			GameObject go = new GameObject(\"RequestAPI\");\n   30: 			ResAPI api = go.AddComponent<ResAPI>();\n   31: 			return api;\n   32  		}\n   33  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/Tools/LuaCompiler.cs:\n   43  		public static LuaProto CompileFile( string filename )\n   44  		{\n   45: 			// var lua = LuaAPI.NewState();\n   46  			// var reader = new BinaryReader( File.Open(filename, FileMode.Open) );\n   47  			// var p = new Parser( lua );\n   48  			// return p.Parse( reader, \"@\" + filename );\n   49  \n   50: 			var lua = LuaAPI.NewState();\n   51  			var status = lua.L_LoadFileX( filename, null );\n   52  			if( status != ThreadStatus.LUA_OK )\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/U3DLua/LuaEngine.cs:\n   30          public UniLuaEngine()\n   31          {\n   32:             this.m_cLuaState = LuaAPI.NewState();\n   33              this.m_cLuaState.L_OpenLibs();\n   34          }\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaAPI.cs:\n   12  \n   13  	public delegate int CSharpFunctionDelegate(ILuaState state);\n   14: 	public interface ILuaAPI\n   15  	{\n   16  		LuaState NewThread();\n   ..\n  119  	}\n  120  \n  121: 	public interface ILuaState : ILuaAPI, ILuaAuxLib\n  122  	{\n  123  	}\n  124  \n  125: 	public static class LuaAPI\n  126  	{\n  127  		public static ILuaState NewState()\n  ...\n  135  	public partial class LuaState : ILuaState\n  136  	{\n  137: 		LuaState ILuaAPI.NewThread()\n  138  		{\n  139  			LuaState newLua = new LuaState(G);\n  140  			Top.V.SetThValue(newLua);\n  141: 			ApiIncrTop();\n  142  \n  143  			newLua.HookMask = HookMask;\n  ...\n  168  		// }\n  169  \n  170: 		// ThreadStatus ILuaAPI.LoadBinary( byte[] bytes )\n  171  		// {\n  172  		// 	var status = D_PCall( F_LoadBinary, bytes, Top, ErrFunc );\n  ...\n  236  		private static PFuncDelegate<LoadParameter> DG_F_Load = F_Load;\n  237  \n  238: 		ThreadStatus ILuaAPI.Load( ILoadInfo loadinfo, string name, string mode )\n  239  		{\n  240  			var param  = new LoadParameter(this, loadinfo, name, mode);\n  ...\n  254  		}\n  255  \n  256: 		DumpStatus ILuaAPI.Dump( LuaWriter writeFunc )\n  257  		{\n  258: 			Utl.ApiCheckNumElems( this, 1 );\n  259  \n  260  			var below = Stack[Top.Index-1];\n  ...\n  269  		}\n  270  \n  271: 		ThreadStatus ILuaAPI.GetContext( out int context )\n  272  		{\n  273  			if( (CI.CallStatus & CallStatus.CIST_YIELDED) != 0 )\n  ...\n  283  		}\n  284  \n  285: 		void ILuaAPI.Call( int numArgs, int numResults )\n  286  		{\n  287  			// StkId func = Top - (numArgs + 1);\n  ...\n  291  			// }\n  292  \n  293: 			API.CallK( numArgs, numResults, 0, null );\n  294  		}\n  295  \n  296: 		void ILuaAPI.CallK( int numArgs, int numResults,\n  297  			int context, CSharpFunctionDelegate continueFunc )\n  298  		{\n  299: 			Utl.ApiCheck( continueFunc == null || !CI.IsLua,\n  300  				\"cannot use continuations inside hooks\" );\n  301: 			Utl.ApiCheckNumElems( this, numArgs + 1 );\n  302: 			Utl.ApiCheck( Status == ThreadStatus.LUA_OK,\n  303  				\"cannot do calls on non-normal thread\" );\n  304  			CheckResults( numArgs, numResults );\n  ...\n  336  		private void CheckResults( int numArgs, int numResults )\n  337  		{\n  338: 			Utl.ApiCheck( numResults == LuaDef.LUA_MULTRET ||\n  339  				CI.TopIndex - Top.Index >= numResults - numArgs,\n  340  				\"results from function overflow current stack size\" );\n  ...\n  350  		}\n  351  \n  352: 		ThreadStatus ILuaAPI.PCall( int numArgs, int numResults, int errFunc)\n  353  		{\n  354: 			return API.PCallK( numArgs, numResults, errFunc, 0, null );\n  355  		}\n  356  \n  357: 		ThreadStatus ILuaAPI.PCallK( int numArgs, int numResults, int errFunc,\n  358  			int context, CSharpFunctionDelegate continueFunc )\n  359  		{\n  360: 			Utl.ApiCheck( continueFunc == null || !CI.IsLua,\n  361  				\"cannot use continuations inside hooks\" );\n  362: 			Utl.ApiCheckNumElems( this, numArgs + 1 );\n  363: 			Utl.ApiCheck( Status == ThreadStatus.LUA_OK,\n  364  				\"cannot do calls on non-normal thread\" );\n  365  			CheckResults( numArgs, numResults );\n  ...\n  426  \n  427  			int n = ci.ContinueFunc( this ); // call\n  428: 			Utl.ApiCheckNumElems( this, n );\n  429  			// finish `D_PreCall'\n  430  			D_PosCall( Top.Index-n );\n  ...\n  530  						ci.CallStatus |= CallStatus.CIST_YIELDED;\n  531  						int n = ci.ContinueFunc( this ); // call continuation\n  532: 						Utl.ApiCheckNumElems( this, n );\n  533  						firstArg = Top.Index - n; // yield results come from continuation\n  534  					}\n  ...\n  550  		private static PFuncDelegate<ResumeParam> DG_Resume = ResumeWrap;\n  551  \n  552: 		ThreadStatus ILuaAPI.Resume( ILuaState from, int numArgs )\n  553  		{\n  554  			LuaState fromState = from as LuaState;\n  ...\n  556  			NumNonYieldable = 0; // allow yields\n  557  \n  558: 			Utl.ApiCheckNumElems( this, (Status == ThreadStatus.LUA_OK) ? numArgs + 1 : numArgs );\n  559  \n  560  			var resumeParam = new ResumeParam();\n  ...\n  593  		}\n  594  \n  595: 		int ILuaAPI.Yield( int numResults )\n  596  		{\n  597: 			return API.YieldK( numResults, 0, null );\n  598  		}\n  599  \n  600: 		int ILuaAPI.YieldK( int numResults,\n  601  			int context, CSharpFunctionDelegate continueFunc )\n  602  		{\n  603  			CallInfo ci = CI;\n  604: 			Utl.ApiCheckNumElems( this, numResults );\n  605  \n  606  			if( NumNonYieldable > 0 )\n  ...\n  615  			if( ci.IsLua ) // inside a hook\n  616  			{\n  617: 				Utl.ApiCheck( continueFunc == null, \"hooks cannot continue after yielding\" );\n  618  			}\n  619  			else\n  ...\n  632  		\n  633  \n  634: 		int ILuaAPI.AbsIndex( int index )\n  635  		{\n  636  			return (index > 0 || index <= LuaDef.LUA_REGISTRYINDEX)\n  ...\n  639  		}\n  640  \n  641: 		int ILuaAPI.GetTop()\n  642  		{\n  643  			return Top.Index - (CI.FuncIndex + 1);\n  644  		}\n  645  \n  646: 		void ILuaAPI.SetTop( int index )\n  647  		{\n  648  			if( index >= 0 )\n  649  			{\n  650: 				Utl.ApiCheck(index <= StackLast-(CI.FuncIndex+1), \"new top too large\");\n  651  				int newTop = CI.FuncIndex+1+index;\n  652  				for(int i=Top.Index; i<newTop; ++i)\n  ...\n  656  			else\n  657  			{\n  658: 				Utl.ApiCheck( -(index+1) <= (Top.Index - (CI.FuncIndex + 1)), \"invalid new top\" );\n  659  				Top = Stack[Top.Index + index + 1];\n  660  			}\n  661  		}\n  662  \n  663: 		void ILuaAPI.Remove( int index )\n  664  		{\n  665  			StkId addr;\n  ...\n  673  		}\n  674  \n  675: 		void ILuaAPI.Insert( int index )\n  676  		{\n  677  			StkId p;\n  ...\n  696  		}\n  697  \n  698: 		void ILuaAPI.Replace( int index )\n  699  		{\n  700: 			Utl.ApiCheckNumElems( this, 1 );\n  701  			MoveTo( Stack[Top.Index-1], index );\n  702  			Top = Stack[Top.Index-1];\n  703  		}\n  704  		\n  705: 		void ILuaAPI.Copy( int fromIndex, int toIndex )\n  706  		{\n  707  			StkId fr;\n  ...\n  711  		}\n  712  \n  713: 		void ILuaAPI.XMove( ILuaState to, int n )\n  714  		{\n  715  			var toLua = to as LuaState;\n  ...\n  717  				return;\n  718  \n  719: 			Utl.ApiCheckNumElems( this, n );\n  720: 			Utl.ApiCheck( G == toLua.G, \"moving among independent states\" );\n  721: 			Utl.ApiCheck( toLua.CI.TopIndex - toLua.Top.Index >= n, \"not enough elements to move\" );\n  722  \n  723  			int index = Top.Index-n;\n  ...\n  742  		private static PFuncDelegate<GrowStackParam> DG_GrowStack = GrowStackWrap;\n  743  \n  744: 		bool ILuaAPI.CheckStack(int size)\n  745  		{\n  746  			bool res = false;\n  ...\n  767  		}\n  768  \n  769: 		int ILuaAPI.Error()\n  770  		{\n  771: 			Utl.ApiCheckNumElems( this, 1 );\n  772  			G_ErrorMsg();\n  773  			return 0;\n  774  		}\n  775  \n  776: 		int ILuaAPI.UpvalueIndex( int i )\n  777  		{\n  778  			return LuaDef.LUA_REGISTRYINDEX - i;\n  ...\n  805  		}\n  806  \n  807: 		string ILuaAPI.GetUpvalue( int funcIndex, int n )\n  808  		{\n  809  			StkId addr;\n  ...\n  817  \n  818  			Top.V.SetObj(ref val.V);\n  819: 			ApiIncrTop();\n  820  			return name;\n  821  		}\n  822  \n  823: 		string ILuaAPI.SetUpvalue( int funcIndex, int n )\n  824  		{\n  825  			StkId addr;\n  ...\n  827  				return null;\n  828  \n  829: 			Utl.ApiCheckNumElems( this, 1 );\n  830  \n  831  			StkId val;\n  ...\n  839  		}\n  840  \n  841: 		void ILuaAPI.CreateTable( int narray, int nrec )\n  842  		{\n  843  			var tbl = new LuaTable(this);\n  844  			Top.V.SetHValue(tbl);\n  845: 			ApiIncrTop();\n  846  			if(narray > 0 || nrec > 0)\n  847  				{ tbl.Resize(narray, nrec); }\n  848  		}\n  849  \n  850: 		void ILuaAPI.NewTable()\n  851  		{\n  852: 			API.CreateTable( 0, 0 );\n  853  		}\n  854  \n  855: 		bool ILuaAPI.Next( int index )\n  856  		{\n  857  			StkId addr;\n  ...\n  866  			if( tbl.Next( key, Top ) )\n  867  			{\n  868: 				ApiIncrTop();\n  869  				return true;\n  870  			}\n  ...\n  876  		}\n  877  \n  878: 		void ILuaAPI.RawGetI( int index, int n )\n  879  		{\n  880  			StkId addr;\n  881  			if( !Index2Addr( index, out addr ) )\n  882: 				Utl.ApiCheck( false, \"table expected\" );\n  883  \n  884  			var tbl = addr.V.HValue();\n  885: 			Utl.ApiCheck( tbl != null, \"table expected\" );\n  886  \n  887  			Top.V.SetObj(ref tbl.GetInt(n).V);\n  888: 			ApiIncrTop();\n  889  		}\n  890  \n  891: 		// void ILuaAPI.DebugRawGetI( int index, int n )\n  892  		// {\n  893  		// 	StkId addr;\n  894  		// 	if( !Index2Addr( index, out addr ) )\n  895: 		// 		Utl.ApiCheck( false, \"table expected\" );\n  896  \n  897  		// 	var tbl = addr.Value as LuaTable;\n  898: 		// 	Utl.ApiCheck( tbl != null, \"table expected\" );\n  899  \n  900  		// 	var key = new LuaNumber( n );\n  ...\n  902  		// 	tbl.DebugGet( key, out outKey, out outValue );\n  903  		// 	Top.Value = outKey;\n  904: 		// 	ApiIncrTop();\n  905  		// 	Top.Value = outValue;\n  906: 		// 	ApiIncrTop();\n  907  		// }\n  908  \n  909: 		string ILuaAPI.DebugGetInstructionHistory()\n  910  		{\n  911  #if DEBUG_RECORD_INS\n  ...\n  920  		}\n  921  \n  922: 		void ILuaAPI.RawGet( int index )\n  923  		{\n  924  			StkId addr;\n  ...\n  934  		}\n  935  \n  936: 		void ILuaAPI.RawSetI( int index, int n )\n  937  		{\n  938: 			Utl.ApiCheckNumElems( this, 1 );\n  939  			StkId addr;\n  940  			if( !Index2Addr( index, out addr ) )\n  941  				Utl.InvalidIndex();\n  942: 			Utl.ApiCheck( addr.V.TtIsTable(), \"table expected\" );\n  943  			var tbl = addr.V.HValue();\n  944  			tbl.SetInt( n, ref Stack[Top.Index-1].V );\n  ...\n  946  		}\n  947  \n  948: 		void ILuaAPI.RawSet( int index )\n  949  		{\n  950: 			Utl.ApiCheckNumElems( this, 2 );\n  951  			StkId addr;\n  952  			if( !Index2Addr( index, out addr ) )\n  953  				Utl.InvalidIndex();\n  954: 			Utl.ApiCheck( addr.V.TtIsTable(), \"table expected\" );\n  955  			var tbl = addr.V.HValue();\n  956  			tbl.Set( ref Stack[Top.Index-2].V, ref Stack[Top.Index-1].V );\n  ...\n  958  		}\n  959  \n  960: 		void ILuaAPI.GetField( int index, string key )\n  961  		{\n  962  			StkId addr;\n  ...\n  966  			Top.V.SetSValue(key);\n  967  			var below = Top;\n  968: 			ApiIncrTop();\n  969  			V_GetTable( addr, below, below );\n  970  		}\n  971  \n  972: 		void ILuaAPI.SetField( int index, string key )\n  973  		{\n  974  			StkId addr;\n  ...\n  981  		}\n  982  \n  983: 		void ILuaAPI.GetTable( int index )\n  984  		{\n  985  			StkId addr;\n  ...\n  991  		}\n  992  \n  993: 		void ILuaAPI.SetTable( int index )\n  994  		{\n  995  			StkId addr;\n  996: 			Utl.ApiCheckNumElems( this, 2 );\n  997  			if(! Index2Addr( index, out addr ) )\n  998  				Utl.InvalidIndex();\n  ...\n 1004  		}\n 1005  \n 1006: 		void ILuaAPI.Concat( int n )\n 1007  		{\n 1008: 			Utl.ApiCheckNumElems( this, n );\n 1009  			if( n >= 2 )\n 1010  			{\n ....\n 1014  			{\n 1015  				Top.V.SetSValue(\"\");\n 1016: 				ApiIncrTop();\n 1017  			}\n 1018  		}\n 1019  \n 1020: 		LuaType ILuaAPI.Type( int index )\n 1021  		{\n 1022  			StkId addr;\n ....\n 1072  		}\n 1073  \n 1074: 		string ILuaAPI.TypeName( LuaType t )\n 1075  		{\n 1076  			return TypeName(t);\n ....\n 1082  		}\n 1083  \n 1084: 		// 用于内部使用 不会因为 ApiIncrTop() 检查 Top 超过 CI.Top 报错\n 1085  		internal void O_PushString( string s )\n 1086  		{\n ....\n 1089  		}\n 1090  \n 1091: 		bool ILuaAPI.IsNil( int index )\n 1092  		{\n 1093: 			return API.Type( index ) == LuaType.LUA_TNIL;\n 1094  		}\n 1095  \n 1096: 		bool ILuaAPI.IsNone( int index )\n 1097  		{\n 1098: 			return API.Type( index ) == LuaType.LUA_TNONE;\n 1099  		}\n 1100  \n 1101: 		bool ILuaAPI.IsNoneOrNil( int index )\n 1102  		{\n 1103: 			LuaType t = API.Type( index );\n 1104  			return t == LuaType.LUA_TNONE ||\n 1105  				t == LuaType.LUA_TNIL;\n 1106  		}\n 1107  \n 1108: 		bool ILuaAPI.IsString( int index )\n 1109  		{\n 1110: 			LuaType t = API.Type( index );\n 1111  			return( t == LuaType.LUA_TSTRING || t == LuaType.LUA_TNUMBER );\n 1112  		}\n 1113  \n 1114: 		bool ILuaAPI.IsTable( int index )\n 1115  		{\n 1116: 			return API.Type( index ) == LuaType.LUA_TTABLE;\n 1117  		}\n 1118  \n 1119: 		bool ILuaAPI.IsFunction( int index )\n 1120  		{\n 1121: 			return API.Type( index ) == LuaType.LUA_TFUNCTION;\n 1122  		}\n 1123  \n 1124: 		bool ILuaAPI.Compare( int index1, int index2, LuaEq op )\n 1125  		{\n 1126  			StkId addr1;\n ....\n 1137  				case LuaEq.LUA_OPLT: return V_LessThan( addr1, addr2 );\n 1138  				case LuaEq.LUA_OPLE: return V_LessEqual( addr1, addr2 );\n 1139: 				default: Utl.ApiCheck( false, \"invalid option\" ); return false;\n 1140  			}\n 1141  		}\n 1142  \n 1143: 		bool ILuaAPI.RawEqual( int index1, int index2 )\n 1144  		{\n 1145  			StkId addr1;\n ....\n 1154  		}\n 1155  \n 1156: 		int ILuaAPI.RawLen( int index )\n 1157  		{\n 1158  			StkId addr;\n ....\n 1179  		}\n 1180  \n 1181: 		void ILuaAPI.Len( int index )\n 1182  		{\n 1183  			StkId addr;\n ....\n 1187  			V_ObjLen( Top, addr );\n 1188  \n 1189: 			ApiIncrTop();\n 1190  		}\n 1191  \n 1192: 		void ILuaAPI.PushNil()\n 1193  		{\n 1194  			Top.V.SetNilValue();\n 1195: 			ApiIncrTop();\n 1196  		}\n 1197  \n 1198: 		void ILuaAPI.PushBoolean( bool b )\n 1199  		{\n 1200  			Top.V.SetBValue( b );\n 1201: 			ApiIncrTop();\n 1202  		}\n 1203  \n 1204: 		void ILuaAPI.PushNumber( double n )\n 1205  		{\n 1206  			Top.V.SetNValue( n );\n 1207: 			ApiIncrTop();\n 1208  		}\n 1209  \n 1210: 		void ILuaAPI.PushInteger( int n )\n 1211  		{\n 1212  			Top.V.SetNValue( (double)n );\n 1213: 			ApiIncrTop();\n 1214  		}\n 1215  \n 1216: 		void ILuaAPI.PushUnsigned( uint n )\n 1217  		{\n 1218  			Top.V.SetNValue( (double)n );\n 1219: 			ApiIncrTop();\n 1220  		}\n 1221  \n 1222: 		string ILuaAPI.PushString( string s )\n 1223  		{\n 1224  			if( s == null )\n 1225  			{\n 1226: 				API.PushNil();\n 1227  				return null;\n 1228  			}\n ....\n 1230  			{\n 1231  				Top.V.SetSValue(s);\n 1232: 				ApiIncrTop();\n 1233  				return s;\n 1234  			}\n 1235  		}\n 1236  \n 1237: 		void ILuaAPI.PushCSharpFunction( CSharpFunctionDelegate f )\n 1238  		{\n 1239: 			API.PushCSharpClosure( f, 0 );\n 1240  		}\n 1241  		\n 1242: 		void ILuaAPI.PushCSharpClosure( CSharpFunctionDelegate f, int n )\n 1243  		{\n 1244  			if( n == 0 )\n ....\n 1249  			{\n 1250  				// 带 UpValue 的 C# function\n 1251: 				Utl.ApiCheckNumElems( this, n );\n 1252: 				Utl.ApiCheck( n <= LuaLimits.MAXUPVAL, \"upvalue index too large\" );\n 1253  \n 1254  				LuaCsClosureValue cscl = new LuaCsClosureValue( f, n );\n ....\n 1260  				Top.V.SetClCsValue( cscl );\n 1261  			}\n 1262: 			ApiIncrTop();\n 1263  		}\n 1264  \n 1265: 		void ILuaAPI.PushValue( int index )\n 1266  		{\n 1267  			StkId addr;\n ....\n 1270  \n 1271  			Top.V.SetObj(ref addr.V);\n 1272: 			ApiIncrTop();\n 1273  		}\n 1274  \n 1275: 		void ILuaAPI.PushGlobalTable()\n 1276  		{\n 1277: 			API.RawGetI( LuaDef.LUA_REGISTRYINDEX, LuaDef.LUA_RIDX_GLOBALS );\n 1278  		}\n 1279  \n 1280: 		void ILuaAPI.PushLightUserData( object o )\n 1281  		{\n 1282  			Top.V.SetPValue( o );\n 1283: 			ApiIncrTop();\n 1284  		}\n 1285  \n 1286: 		void ILuaAPI.PushUInt64( UInt64 o )\n 1287  		{\n 1288  			Top.V.SetUInt64Value( o );\n 1289: 			ApiIncrTop();\n 1290  		}\n 1291  \n 1292: 		bool ILuaAPI.PushThread()\n 1293  		{\n 1294  			Top.V.SetThValue(this);\n 1295: 			ApiIncrTop();\n 1296  			return G.MainThread == (LuaState)this;\n 1297  		}\n 1298  \n 1299: 		void ILuaAPI.Pop( int n )\n 1300  		{\n 1301: 			API.SetTop( -n-1 );\n 1302  		}\n 1303  \n 1304: 		bool ILuaAPI.GetMetaTable( int index )\n 1305  		{\n 1306  			StkId addr;\n ....\n 1334  			{\n 1335  				Top.V.SetHValue( mt );\n 1336: 				ApiIncrTop();\n 1337  				return true;\n 1338  			}\n 1339  		}\n 1340  \n 1341: 		bool ILuaAPI.SetMetaTable( int index )\n 1342  		{\n 1343: 			Utl.ApiCheckNumElems( this, 1 );\n 1344  \n 1345  			StkId addr;\n ....\n 1353  			else\n 1354  			{\n 1355: 				Utl.ApiCheck( below.V.TtIsTable(), \"table expected\" );\n 1356  				mt = below.V.HValue();\n 1357  			}\n ....\n 1381  		}\n 1382  \n 1383: 		void ILuaAPI.GetGlobal( string name )\n 1384  		{\n 1385  			var gt = G.Registry.V.HValue().GetInt( LuaDef.LUA_RIDX_GLOBALS );\n ....\n 1388  		}\n 1389  \n 1390: 		void ILuaAPI.SetGlobal( string name )\n 1391  		{\n 1392  			var gt = G.Registry.V.HValue().GetInt( LuaDef.LUA_RIDX_GLOBALS );\n ....\n 1396  		}\n 1397  \n 1398: 		string ILuaAPI.ToString( int index )\n 1399  		{\n 1400  			StkId addr;\n ....\n 1417  		}\n 1418  \n 1419: 		double ILuaAPI.ToNumberX( int index, out bool isnum )\n 1420  		{\n 1421  			StkId addr;\n ....\n 1443  		}\n 1444  \n 1445: 		double ILuaAPI.ToNumber( int index )\n 1446  		{\n 1447  			bool isnum;\n 1448: 			return API.ToNumberX( index, out isnum );\n 1449  		}\n 1450  \n 1451: 		int ILuaAPI.ToIntegerX( int index, out bool isnum )\n 1452  		{\n 1453  			StkId addr;\n ....\n 1475  		}\n 1476  \n 1477: 		int ILuaAPI.ToInteger( int index )\n 1478  		{\n 1479  			bool isnum;\n 1480: 			return API.ToIntegerX( index, out isnum );\n 1481  		}\n 1482  \n 1483: 		uint ILuaAPI.ToUnsignedX( int index, out bool isnum )\n 1484  		{\n 1485  			StkId addr;\n ....\n 1506  		}\n 1507  \n 1508: 		uint ILuaAPI.ToUnsigned( int index )\n 1509  		{\n 1510  			bool isnum;\n 1511: 			return API.ToUnsignedX( index, out isnum );\n 1512  		}\n 1513  \n 1514: 		bool ILuaAPI.ToBoolean( int index )\n 1515  		{\n 1516  			StkId addr;\n ....\n 1521  		}\n 1522  \n 1523: 		UInt64 ILuaAPI.ToUInt64X( int index, out bool isnum )\n 1524  		{\n 1525  			StkId addr;\n ....\n 1538  		}\n 1539  \n 1540: 		UInt64 ILuaAPI.ToUInt64( int index )\n 1541  		{\n 1542  			bool isnum;\n 1543: 			return API.ToUInt64X( index, out isnum );\n 1544  		}\n 1545  \n 1546: 		object ILuaAPI.ToObject( int index )\n 1547  		{\n 1548  			StkId addr;\n ....\n 1553  		}\n 1554  \n 1555: 		object ILuaAPI.ToUserData( int index )\n 1556  		{\n 1557  			StkId addr;\n ....\n 1568  		}\n 1569  \n 1570: 		ILuaState ILuaAPI.ToThread( int index )\n 1571  		{\n 1572  			StkId addr;\n ....\n 1582  			{\n 1583  				var addrIndex = ci.FuncIndex + index;\n 1584: 				Utl.ApiCheck( index <= ci.TopIndex - (ci.FuncIndex + 1), \"unacceptable index\" );\n 1585  				if( addrIndex >= Top.Index ) {\n 1586  					addr = default(StkId);\n ....\n 1593  			else if( index > LuaDef.LUA_REGISTRYINDEX )\n 1594  			{\n 1595: 				Utl.ApiCheck( index != 0 && -index <= Top.Index - (ci.FuncIndex + 1), \"invalid index\" );\n 1596  				addr = Stack[Top.Index + index];\n 1597  				return true;\n ....\n 1606  			{\n 1607  				index = LuaDef.LUA_REGISTRYINDEX - index;\n 1608: 				Utl.ApiCheck( index <= LuaLimits.MAXUPVAL + 1, \"upvalue index too large\" );\n 1609  				var func = Stack[ci.FuncIndex];\n 1610  				Utl.Assert(func.V.TtIsFunction());\n ....\n 1629  		// private void RegisterGlobalFunc( string name, CSharpFunctionDelegate f )\n 1630  		// {\n 1631: 		// 	API.PushCSharpFunction( f );\n 1632: 		// 	API.SetGlobal( name );\n 1633  		// }\n 1634  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaAuxLib.cs:\n  133  		{\n  134  			LuaDebug ar = new LuaDebug();\n  135: 			if( API.GetStack( level, ar ) ) // check function at level\n  136  			{\n  137  				GetInfo( \"Sl\", ar ); // get info about it\n  138  				if( ar.CurrentLine > 0 ) // is there info?\n  139  				{\n  140: 					API.PushString( string.Format( \"{0}:{1}: \", ar.ShortSrc, ar.CurrentLine ) );\n  141  					return;\n  142  				}\n  143  			}\n  144: 			API.PushString( \"\" ); // else, no information available...\n  145  		}\n  146  \n  ...\n  148  		{\n  149  			L_Where( 1 );\n  150: 			API.PushString( string.Format( fmt, args ) );\n  151: 			API.Concat( 2 );\n  152: 			return API.Error();\n  153  		}\n  154  \n  ...\n  156  		{\n  157  			// keep some extra space to run error routines, if needed\n  158: 			if(!API.CheckStack(size + LuaDef.LUA_MINSTACK)) {\n  159  				if(msg != null)\n  160  					{ L_Error(string.Format(\"stack overflow ({0})\", msg)); }\n  ...\n  166  		public void L_CheckAny( int narg )\n  167  		{\n  168: 			if( API.Type( narg ) == LuaType.LUA_TNONE )\n  169  				L_ArgError( narg, \"value expected\" );\n  170  		}\n  ...\n  173  		{\n  174  			bool isnum;\n  175: 			double d = API.ToNumberX( narg, out isnum );\n  176  			if( !isnum )\n  177  				TagError( narg, LuaType.LUA_TNUMBER );\n  ...\n  182  		{\n  183  			bool isnum;\n  184: 			UInt64 v = API.ToUInt64X( narg, out isnum );\n  185  			if( !isnum )\n  186  				TagError( narg, LuaType.LUA_TUINT64 );\n  ...\n  191  		{\n  192  			bool isnum;\n  193: 			int d = API.ToIntegerX( narg, out isnum );\n  194  			if( !isnum )\n  195  				TagError( narg, LuaType.LUA_TNUMBER );\n  ...\n  199  		public string L_CheckString( int narg )\n  200  		{\n  201: 			string s = API.ToString( narg );\n  202  			if( s == null ) TagError( narg, LuaType.LUA_TSTRING );\n  203  			return s;\n  ...\n  207  		{\n  208  			bool isnum;\n  209: 			uint d = API.ToUnsignedX( narg, out isnum );\n  210  			if( !isnum )\n  211  				TagError( narg, LuaType.LUA_TNUMBER );\n  ...\n  215  		public T L_Opt<T>( Func<int,T> f, int n, T def )\n  216  		{\n  217: 			LuaType t = API.Type( n );\n  218  			if( t == LuaType.LUA_TNONE ||\n  219  				t == LuaType.LUA_TNIL )\n  ...\n  229  		public int L_OptInt( int narg, int def )\n  230  		{\n  231: 			LuaType t = API.Type( narg );\n  232  			if( t == LuaType.LUA_TNONE ||\n  233  				t == LuaType.LUA_TNIL )\n  ...\n  243  		public string L_OptString( int narg, string def )\n  244  		{\n  245: 			LuaType t = API.Type( narg );\n  246  			if( t == LuaType.LUA_TNONE ||\n  247  				t == LuaType.LUA_TNIL )\n  ...\n  259  			string msg = string.Format( \"{0} expected, got {1}\",\n  260  				typeName, L_TypeName( index ) );\n  261: 			API.PushString( msg );\n  262  			return L_ArgError( index, msg );\n  263  		}\n  ...\n  265  		private void TagError( int index, LuaType t )\n  266  		{\n  267: 			TypeError( index, API.TypeName( t ) );\n  268  		}\n  269  \n  270  		public void L_CheckType( int index, LuaType t )\n  271  		{\n  272: 			if( API.Type( index ) != t )\n  273  				TagError( index, t );\n  274  		}\n  ...\n  284  \n  285  			LuaDebug ar = new LuaDebug();\n  286: 			if( !API.GetStack( 0, ar ) ) // no stack frame ?\n  287  				return L_Error( \"bad argument {0} ({1})\", narg, extraMsg );\n  288  \n  ...\n  295  			}\n  296  			if( ar.Name == null )\n  297: 				ar.Name = PushGlobalFuncName( ar ) ? API.ToString(-1) : \"?\";\n  298  			return L_Error( \"bad argument {0} to '{1}' ({2})\",\n  299  				narg, ar.Name, extraMsg );\n  ...\n  302  		public string L_TypeName( int index )\n  303  		{\n  304: 			return API.TypeName( API.Type( index ) );\n  305  		}\n  306  \n  307  		public bool L_GetMetaField( int obj, string name )\n  308  		{\n  309: 			if( !API.GetMetaTable(obj) ) // no metatable?\n  310  				return false;\n  311: 			API.PushString( name );\n  312: 			API.RawGet( -2 );\n  313: 			if( API.IsNil( -1 ) )\n  314  			{\n  315: 				API.Pop( 2 );\n  316  				return false;\n  317  			}\n  318  			else\n  319  			{\n  320: 				API.Remove( -2 );\n  321  				return true;\n  322  			}\n  ...\n  325  		public bool L_CallMeta( int obj, string name )\n  326  		{\n  327: 			obj = API.AbsIndex( obj );\n  328  			if( !L_GetMetaField( obj, name ) ) // no metafield?\n  329  				return false;\n  330  \n  331: 			API.PushValue( obj );\n  332: 			API.Call( 1, 1 );\n  333  			return true;\n  334  		}\n  ...\n  337  		{\n  338  			if( ar.NameWhat.Length > 0 && ar.NameWhat[0] != '\\0' ) // is there a name?\n  339: 				API.PushString( string.Format( \"function '{0}'\", ar.Name ) );\n  340  			else if( ar.What.Length > 0 && ar.What[0] == 'm' ) // main?\n  341: 				API.PushString( \"main chunk\" );\n  342  			else if( ar.What.Length > 0 && ar.What[0] == 'C' )\n  343  			{\n  344  				if( PushGlobalFuncName( ar ) )\n  345  				{\n  346: 					API.PushString( string.Format( \"function '{0}'\", API.ToString(-1) ) );\n  347: 					API.Remove( -2 ); //remove name\n  348  				}\n  349  				else\n  350: 					API.PushString( \"?\" );\n  351  			}\n  352  			else\n  353: 				API.PushString( string.Format( \"function <{0}:{1}>\", ar.ShortSrc, ar.LineDefined ) );\n  354  		}\n  355  \n  ...\n  360  			int le = 1;\n  361  			// find an upper bound\n  362: 			while( API.GetStack(le, ar) )\n  363  			{\n  364  				li = le;\n  ...\n  369  			{\n  370  				int m = (li + le)/2;\n  371: 				if( API.GetStack( m, ar ) )\n  372  					li = m + 1;\n  373  				else\n  ...\n  381  			LuaState oLua = otherLua as LuaState;\n  382  			LuaDebug ar = new LuaDebug();\n  383: 			int top = API.GetTop();\n  384  			int numLevels = oLua.CountLevels();\n  385  			int mark = (numLevels > LEVELS1 + LEVELS2) ? LEVELS1 : 0;\n  386  			if( msg != null )\n  387: 				API.PushString( string.Format( \"{0}\\n\", msg ) );\n  388: 			API.PushString( \"stack traceback:\" );\n  389  			while( otherLua.GetStack( level++, ar ) )\n  390  			{\n  391  				if( level == mark ) // too many levels?\n  392  				{\n  393: 					API.PushString( \"\\n\\t...\" );\n  394  					level = numLevels - LEVELS2; // and skip to last ones\n  395  				}\n  ...\n  397  				{\n  398  					oLua.GetInfo( \"Slnt\", ar );\n  399: 					API.PushString( string.Format( \"\\n\\t{0}:\", ar.ShortSrc ) );\n  400  					if( ar.CurrentLine > 0 )\n  401: 						API.PushString( string.Format( \"{0}:\", ar.CurrentLine ) );\n  402: 					API.PushString(\" in \");\n  403  					PushFuncName( ar );\n  404  					if( ar.IsTailCall )\n  405: 						API.PushString( \"\\n\\t(...tail calls...)\" );\n  406: 					API.Concat( API.GetTop() - top );\n  407  				}\n  408  			}\n  409: 			API.Concat( API.GetTop() - top );\n  410  		}\n  411  \n  412  		public int L_Len( int index )\n  413  		{\n  414: 			API.Len( index );\n  415  \n  416  			bool isnum;\n  417: 			int l = (int)API.ToIntegerX( -1, out isnum );\n  418  			if( !isnum )\n  419  				L_Error( \"object length is not a number\" );\n  420: 			API.Pop( 1 );\n  421  			return l;\n  422  		}\n  ...\n  430  		{\n  431  			var loadinfo = new StringLoadInfo( s );\n  432: 			return API.Load( loadinfo, name, mode );\n  433  		}\n  434  \n  ...\n  436  		{\n  437  			var loadinfo = new BytesLoadInfo( bytes );\n  438: 			return API.Load( loadinfo, name, null );\n  439  		}\n  440  \n  ...\n  458  			}\n  459  \n  460: 			int fnameindex = API.GetTop() + 1;\n  461: 			API.PushString( \"@\" + filename );\n  462  			try\n  463  			{\n  ...\n  465  				{\n  466  					loadinfo.SkipComment();\n  467: 					status = API.Load( loadinfo, API.ToString(-1), mode );\n  468  				}\n  469  			}\n  470  			catch( LuaRuntimeException e )\n  471  			{\n  472: 				API.PushString( string.Format( \"cannot open {0}: {1}\",\n  473  					filename, e.Message ) );\n  474  				return ThreadStatus.LUA_ERRFILE;\n  475  			}\n  476  \n  477: 			API.Remove( fnameindex );\n  478  			return status;\n  479  		}\n  ...\n  489  			if( status != ThreadStatus.LUA_OK )\n  490  				return status;\n  491: 			return API.PCall( 0, LuaDef.LUA_MULTRET, 0 );\n  492  		}\n  493  \n  ...\n  497  			if( status != ThreadStatus.LUA_OK )\n  498  				return status;\n  499: 			return API.PCall( 0, LuaDef.LUA_MULTRET, 0 );\n  500  		}\n  501  \n  ...\n  503  		{\n  504  			string res = src.Replace(pattern, rep);\n  505: 			API.PushString( res );\n  506  			return res;\n  507  		}\n  ...\n  511  			if( !L_CallMeta( index, \"__tostring\" ) ) // no metafield? // TODO L_CallMeta\n  512  			{\n  513: 				switch( API.Type(index) )\n  514  				{\n  515  					case LuaType.LUA_TNUMBER:\n  516  					case LuaType.LUA_TSTRING:\n  517: 						API.PushValue( index );\n  518  						break;\n  519  \n  520  					case LuaType.LUA_TBOOLEAN:\n  521: 						API.PushString( API.ToBoolean( index ) ? \"true\" : \"false\" );\n  522  						break;\n  523  \n  524  					case LuaType.LUA_TNIL:\n  525: 						API.PushString( \"nil\" );\n  526  						break;\n  527  \n  528  					default:\n  529: 						API.PushString( string.Format(\"{0}: {1:X}\"\n  530  							, L_TypeName( index )\n  531: 							, API.ToObject( index ).GetHashCode()\n  532  							) );\n  533  						break;\n  534  				}\n  535  			}\n  536: 			return API.ToString( -1 );\n  537  		}\n  538  \n  ...\n  575  			{\n  576  				L_RequireF( define[i].Name, define[i].Func, true );\n  577: 				API.Pop( 1 );\n  578  			}\n  579  \n  ...\n  583  		public void L_RequireF( string moduleName, CSharpFunctionDelegate openFunc, bool global )\n  584  		{\n  585: 			API.PushCSharpFunction( openFunc );\n  586: 			API.PushString( moduleName );\n  587: 			API.Call( 1, 1 );\n  588  			L_GetSubTable( LuaDef.LUA_REGISTRYINDEX, \"_LOADED\" );\n  589: 			API.PushValue( -2 );\n  590: 			API.SetField( -2, moduleName );\n  591: 			API.Pop( 1 );\n  592  			if( global )\n  593  			{\n  594: 				API.PushValue( -1 );\n  595: 				API.SetGlobal( moduleName );\n  596  			}\n  597  		}\n  ...\n  599  		public int L_GetSubTable( int index, string fname )\n  600  		{\n  601: 			API.GetField( index, fname );\n  602: 			if( API.IsTable( -1 ) )\n  603  				return 1;\n  604  			else\n  605  			{\n  606: 				API.Pop( 1 );\n  607: 				index = API.AbsIndex( index );\n  608: 				API.NewTable();\n  609: 				API.PushValue( -1 );\n  610: 				API.SetField( index, fname );\n  611  				return 0;\n  612  			}\n  ...\n  615  		public void L_NewLibTable( NameFuncPair[] define )\n  616  		{\n  617: 			API.CreateTable( 0, define.Length );\n  618  		}\n  619  \n  ...\n  631  			{\n  632  				for( int i=0; i<nup; ++i )\n  633: 					API.PushValue( -nup );\n  634: 				API.PushCSharpClosure( define[j].Func, nup );\n  635: 				API.SetField( -(nup + 2), define[j].Name );\n  636  			}\n  637: 			API.Pop( nup );\n  638  		}\n  639  \n  640  		private bool FindField( int objIndex, int level )\n  641  		{\n  642: 			if( level == 0 || !API.IsTable(-1) )\n  643  				return false; // not found\n  644  \n  645: 			API.PushNil(); // start 'next' loop\n  646: 			while( API.Next(-2) ) // for each pair in table\n  647  			{\n  648: 				if( API.Type(-2) == LuaType.LUA_TSTRING ) // ignore non-string keys\n  649  				{\n  650: 					if( API.RawEqual( objIndex, -1 ) ) // found object?\n  651  					{\n  652: 						API.Pop(1); // remove value (but keep name)\n  653  						return true;\n  654  					}\n  655  					else if( FindField( objIndex, level-1 ) ) // try recursively\n  656  					{\n  657: 						API.Remove( -2 ); // remove table (but keep name)\n  658: 						API.PushString( \".\" );\n  659: 						API.Insert( -2 ); // place '.' between the two names\n  660: 						API.Concat( 3 );\n  661  						return true;\n  662  					}\n  663  				}\n  664: 				API.Pop(1); // remove value\n  665  			}\n  666  			return false; // not found\n  ...\n  669  		private bool PushGlobalFuncName( LuaDebug ar )\n  670  		{\n  671: 			int top = API.GetTop();\n  672  			GetInfo( \"f\", ar );\n  673: 			API.PushGlobalTable();\n  674  			if( FindField( top+1, 2 ) )\n  675  			{\n  676: 				API.Copy( -1, top+1 );\n  677: 				API.Pop( 2 );\n  678  				return true;\n  679  			}\n  680  			else\n  681  			{\n  682: 				API.SetTop( top ); // remove function and global table\n  683  				return false;\n  684  			}\n  ...\n  689  		public int L_Ref( int t )\n  690  		{\n  691: 			if( API.IsNil(-1) )\n  692  			{\n  693: 				API.Pop(1); // remove from stack\n  694  				return LuaConstants.LUA_REFNIL; // `nil' has a unique fixed reference\n  695  			}\n  696  \n  697: 			t = API.AbsIndex(t);\n  698: 			API.RawGetI(t, FreeList); // get first free element\n  699: 			int reference = API.ToInteger(-1); // ref = t[freelist]\n  700: 			API.Pop(1); // remove it from stack\n  701  			if( reference != 0 ) // any free element?\n  702  			{\n  703: 				API.RawGetI(t, reference); // remove it from list\n  704: 				API.RawSetI(t, FreeList); // t[freelist] = t[ref]\n  705  			}\n  706  			else // no free elements\n  707: 				reference = API.RawLen(t) + 1; // get a new reference\n  708: 			API.RawSetI(t, reference);\n  709  			return reference;\n  710  		}\n  ...\n  714  			if( reference >= 0 )\n  715  			{\n  716: 				t = API.AbsIndex(t);\n  717: 				API.RawGetI(t, FreeList);\n  718: 				API.RawSetI(t, reference); // t[ref] = t[freelist]\n  719: 				API.PushInteger(reference);\n  720: 				API.RawSetI(t, FreeList); // t[freelist] = ref\n  721  			}\n  722  		}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaDebug.cs:\n   21  	public partial class LuaState\n   22  	{\n   23: 		bool ILuaAPI.GetStack( int level, LuaDebug ar )\n   24  		{\n   25  			if( level < 0 )\n   ..\n   49  				func = Stack[Top.Index - 1];\n   50  \n   51: 				Utl.ApiCheck(func.V.TtIsFunction(), \"function expected\");\n   52  				pos++;\n   53  \n   ..\n  246  		private void AddInfo( string msg )\n  247  		{\n  248: 			// var api = (ILuaAPI)this;\n  249  			// TODO\n  250  			if( CI.IsLua )\n  ...\n  255  					src = \"?\";\n  256  \n  257: 				// 不能用 PushString, 因为 PushString 是 API 接口\n  258: 				// API 接口中的 ApiIncrTop 会检查 Top 是否超过了 CI.Top 导致出错\n  259: 				// api.PushString( msg );\n  260  				O_PushString( string.Format( \"{0}:{1}: {2}\",\n  261  					src, line, msg ) );\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaState.cs:\n  157  #endif\n  158  \n  159: 		private ILuaAPI 	API;\n  160  \n  161  		static LuaState()\n  ...\n  167  		public LuaState( GlobalState g=null )\n  168  		{\n  169: 			API = (ILuaAPI)this;\n  170  \n  171  			NumNonYieldable = 1;\n  ...\n  208  		}\n  209  \n  210: 		private void ApiIncrTop()\n  211  		{\n  212  			StkId.inc(ref Top);\n  213: 			// ULDebug.Log( \"[ApiIncrTop] ==== Top.Index:\" + Top.Index );\n  214: 			// ULDebug.Log( \"[ApiIncrTop] ==== CI.Top.Index:\" + CI.Top.Index );\n  215: 			Utl.ApiCheck( Top.Index <= CI.TopIndex, \"stack overflow\" );\n  216  		}\n  217  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/Util.cs:\n    1  \n    2: #define API_CHECK\n    3  #define UNILUA_ASSERT\n    4  \n    .\n   44  		}\n   45  \n   46: 		public static void ApiCheck( bool condition, string message )\n   47  		{\n   48  #if UNILUA_ASSERT\n   49: #if API_CHECK\n   50  			Assert( condition, message );\n   51  #endif\n   ..\n   53  		}\n   54  \n   55: 		public static void ApiCheckNumElems( LuaState lua, int n )\n   56  		{\n   57  #if UNILUA_ASSERT\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DTable/json&xml/Readme.txt:\n   26  To contact us: info@aworldforus.com\n   27  \n   28: XML Deserialization API\n   29  ==================================================\n   30  \n   ..\n  104  });\n  105  \n  106: XML Serialization API\n  107  ==================================================\n  108  \n  ...\n  129  </root>\n  130  \n  131: JSON API\n  132  ==================================================\n  133  \n  134: The JSON API is very similar to the XML API. The main differences are:\n  135  \n  136  1. There are no attributes\n  ...\n  166        .End();\n  167  \n  168: JSONSerializer and XMLSerializer API\n  169  ==================================================\n  170  \n  ...\n  214  }\n  215  \n  216: EscapeString API\n  217  ==================================================\n  218  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DWebView/platform_src/Mac/Sources/WebView.m:\n   93  	WebView *webView;\n   94  	NSString *gameObject;\n   95: 	NSBitmapImageRep *bitmap;\n   96  	int textureId;\n   97  	BOOL needsDisplay;\n   ..\n  218  			[bitmap release];\n  219  			bitmap = [[webView\n  220: 				bitmapImageRepForCachingDisplayInRect:[webView visibleRect]] retain];\n  221  			[webView cacheDisplayInRect:[webView visibleRect]\n  222: 				toBitmapImageRep:bitmap];\n  223  		}\n  224  	}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AIStateMachine/Scripts/Editor/ReorderableList.cs:\n   92  	}\n   93  	private Rect draggingLineRect;\n   94: 	int swapIndex=-1;\n   95  	[SerializeField]\n   96  	private GUIStyle elementBackground;\n   ..\n  173  					if (Event.current.mousePosition.y < elementRect.y + elementRect.height * 0.5f) {//Top items[i]\n  174  						draggingLineRect = new Rect (elementRect.x, elementRect.y, elementRect.width, 1);\n  175: 						swapIndex = (selectedIndex > i ? i : i - 1);\n  176  					}\n  177  					if (Event.current.mousePosition.y > elementRect.y + elementRect.height * 0.5f) {//Buttom items[i]\n  178  						draggingLineRect = new Rect (elementRect.x, elementRect.y + elementRect.height + 2.0f, elementRect.width, 1);\n  179: 						swapIndex = (selectedIndex > i ? i + 1 : i);\n  180  					}\n  181  					//GUI.FocusControl (title + i);\n  ...\n  196  		}\n  197  \n  198: 		if (swapIndex != -1 && !isDragging && draggable && selectedIndex != -1) {\n  199: 			items.MoveTo(selectedIndex, swapIndex);\n  200: 			swapIndex=-1;\n  201  		}\n  202  \n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/changelog.cs:\n    8  	- Added back local avoidance!!\n    9  		The new system uses a sampling based algorithm instead of a geometric one.\n   10: 		The API is almost exactly the same so if you used the previous system this will be a drop in replacement.\n   11  		As for performance, it is roughly the same, maybe slightly worse in high density situations and slightly better\n   12  		in less dense situations. It can handle several thousand agents on an i7 processor.\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Core/AstarMath.cs:\n 1122  		/** Returns the closest point on the triangle.\n 1123  		 * \n 1124: 		 * \\author Got code from the internet, changed a bit to work with the Unity API\n 1125  		 * \n 1126  		 */\n ....\n 1355  		/* Returns the closest point on the triangle.\n 1356  		 * \n 1357: 		 * \\author Got code from the internet, changed a bit to work with the Unity API\n 1358  		 * \n 1359  		 * \\todo Uses Dot product to get the sqrMagnitude of a vector, should change to sqrMagnitude for readability and possibly for speed (unlikely though)\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Core/AstarPath.cs:\n  379  	 * When it is safe is defined as between the path searches.\n  380  	 * This callback will only be sent once and is nulled directly after the callback is sent.\n  381: 	 * \\warning Note that these callbacks are not thread safe when using multithreading, DO NOT call any part of the Unity API from these callbacks except for Debug.Log\n  382  	 */\n  383  	private static OnVoidDelegate OnSafeCallback;\n  ...\n 2069  	  * \n 2070  	  * \\warning Note that if you do not set \\a threadSafe to true, the callback might not be called from the Unity thread,\n 2071: 	  * DO NOT call any part of the Unity API from those callbacks except for Debug.Log\n 2072  	  * \n 2073  	  * \\code\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Core/Path.cs:\n  397  		 */\n  398  		private void ErrorCheck () {\n  399: 			if (!hasBeenReset) throw new System.Exception (\"The path has never been reset. Use pooling API or call Reset() after creating the path with the default constructor.\");\n  400  			if (recycled) throw new System.Exception (\"The path is currently in a path pool. Are you sending the path for calculation twice?\");\n  401  			if (pathHandler == null) throw new System.Exception (\"Field pathHandler is not set. Please report this bug.\");\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Core/Misc/BinaryHeap.cs:\n   97  #endif\n   98  \n   99: 			//node.heapIndex = numberOfItems;//Heap index\n  100  \n  101  			int bubbleIndex = numberOfItems;\n  ...\n  114  					//Node tmpValue = binaryHeap[parentIndex];\n  115  					\n  116: 					//tmpValue.heapIndex = bubbleIndex;//HeapIndex\n  117  					\n  118  					binaryHeap[bubbleIndex] = binaryHeap[parentIndex];\n  119  					binaryHeap[parentIndex] = obj;\n  120  					\n  121: 					//binaryHeap[bubbleIndex].heapIndex = bubbleIndex; //Heap index\n  122: 					//binaryHeap[parentIndex].heapIndex = parentIndex; //Heap index\n  123  					\n  124  					bubbleIndex = parentIndex;\n  ...\n  142  #endif\n  143  \n  144: 		 	//returnItem.heapIndex = 0;//Heap index\n  145  			\n  146  			binaryHeap[0] = binaryHeap[numberOfItems];\n  147: 			//binaryHeap[1].heapIndex = 1;//Heap index\n  148  			\n  149: 			int swapItem = 0, parent = 0;\n  150  			\n  151  			do {\n  152  \n  153  				if (D == 0) {\n  154: 					parent = swapItem;\n  155  					int p2 = parent * D;\n  156  					if (p2 + 1 <= numberOfItems) {\n  157  						// Both children exist\n  158  						if (binaryHeap[parent].F > binaryHeap[p2].F) {\n  159: 							swapItem = p2;//2 * parent;\n  160  						}\n  161: 						if (binaryHeap[swapItem].F > binaryHeap[p2 + 1].F) {\n  162: 							swapItem = p2 + 1;\n  163  						}\n  164  					} else if ((p2) <= numberOfItems) {\n  165  						// Only one child exists\n  166  						if (binaryHeap[parent].F > binaryHeap[p2].F) {\n  167: 							swapItem = p2;\n  168  						}\n  169  					}\n  170  				} else {\n  171: 					parent = swapItem;\n  172: 					uint swapF = binaryHeap[swapItem].F;\n  173  					int pd = parent * D + 1;\n  174  					\n  175  					if (D >= 1 && pd+0 <= numberOfItems && binaryHeap[pd+0].F < swapF ) {\n  176  						swapF = binaryHeap[pd+0].F;\n  177: 						swapItem = pd+0;\n  178  					}\n  179  					\n  180  					if (D >= 2 && pd+1 <= numberOfItems && binaryHeap[pd+1].F < swapF ) {\n  181  						swapF = binaryHeap[pd+1].F;\n  182: 						swapItem = pd+1;\n  183  					}\n  184  					\n  185  					if (D >= 3 && pd+2 <= numberOfItems && binaryHeap[pd+2].F < swapF ) {\n  186  						swapF = binaryHeap[pd+2].F;\n  187: 						swapItem = pd+2;\n  188  					}\n  189  					\n  190  					if (D >= 4 && pd+3 <= numberOfItems && binaryHeap[pd+3].F < swapF ) {\n  191  						swapF = binaryHeap[pd+3].F;\n  192: 						swapItem = pd+3;\n  193  					}\n  194  					\n  195  					if (D >= 5 && pd+4 <= numberOfItems && binaryHeap[pd+4].F < swapF ) {\n  196  						swapF = binaryHeap[pd+4].F;\n  197: 						swapItem = pd+4;\n  198  					}\n  199  					\n  200  					if (D >= 6 && pd+5 <= numberOfItems && binaryHeap[pd+5].F < swapF ) {\n  201  						swapF = binaryHeap[pd+5].F;\n  202: 						swapItem = pd+5;\n  203  					}\n  204  					\n  205  					if (D >= 7 && pd+6 <= numberOfItems && binaryHeap[pd+6].F < swapF ) {\n  206  						swapF = binaryHeap[pd+6].F;\n  207: 						swapItem = pd+6;\n  208  					}\n  209  					\n  210  					if (D >= 8 && pd+7 <= numberOfItems && binaryHeap[pd+7].F < swapF ) {\n  211  						swapF = binaryHeap[pd+7].F;\n  212: 						swapItem = pd+7;\n  213  					}\n  214  					\n  215  					if (D >= 9 && pd+8 <= numberOfItems && binaryHeap[pd+8].F < swapF ) {\n  216  						swapF = binaryHeap[pd+8].F;\n  217: 						swapItem = pd+8;\n  218  					}\n  219  				}\n  220  				\n  221  				// One if the parent's children are smaller or equal, swap them\n  222: 				if (parent != swapItem) {\n  223  					var tmpIndex = binaryHeap[parent];\n  224: 					//tmpIndex.heapIndex = swapItem;//Heap index\n  225  					\n  226: 					binaryHeap[parent] = binaryHeap[swapItem];\n  227: 					binaryHeap[swapItem] = tmpIndex;\n  228  					\n  229: 					//binaryHeap[parent].heapIndex = parent;//Heap index\n  230  				} else {\n  231  					break;\n  232  				}\n  233: 			} while (true);//parent != swapItem);\n  234  \n  235  			//Validate ();\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Core/Nodes/GraphNode.cs:\n   33  		// Some fallback properties\n   34  		\n   35: 		[System.Obsolete (\"This attribute is deprecated. Please use .position (not a capital P)\")]\n   36  		public Int3 Position { get { return position; } }\n   37  		\n   38: 		[System.Obsolete (\"This attribute is deprecated. Please use .Walkable (with a capital W)\")]\n   39  		public bool walkable { get { return Walkable; } set { Walkable = value; } }\n   40  		\n   41: 		[System.Obsolete (\"This attribute is deprecated. Please use .Tag (with a capital T)\")]\n   42  		public uint tags { get { return Tag; } set { Tag = value; } }\n   43  		\n   44: 		[System.Obsolete (\"This attribute is deprecated. Please use .GraphIndex (with a capital G)\")]\n   45  		public uint graphIndex { get { return GraphIndex; } set { GraphIndex = value; } }\n   46  		\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Editor/GraphEditors/GraphEditor.cs:\n  196  			Separator ();\n  197  			\n  198: 			collision.use2D = EditorGUILayout.Toggle (new GUIContent (\"Use 2D Physics\", \"Use the Physics2D API for collision checking\"), collision.use2D );\n  199  			\n  200  #if UNITY_LE_4_3\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Generators/Base.cs:\n  549  		public bool unwalkableWhenNoGround = true;\n  550  		\n  551: 		/** Use Unity 2D API */\n  552  		public bool use2D = false;\n  553  		\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/AstarPathfindingProject/Pathfinders/RandomPath.cs:\n   87  		\n   88  		public RandomPath (Vector3 start, int length, OnPathDelegate callback = null) {\n   89: 			throw new System.Exception (\"This constructor is obsolete. Please use the pooling API and the Setup methods\");\n   90  		}\n   91  		\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/EasyTouch/Example/C# Example/Examples for EasyTouch/Example-ManipulationImage/Photo.cs:\n   90  	void On_PinchIn(Gesture gesture){\n   91  	\n   92: 		float zoom = Time.deltaTime * gesture.deltaPinch/25;\n   93  		Vector3 scale = transform.localScale ;\n   94  	\n   ..\n   99  	void On_PinchOut(Gesture gesture){\n  100  	\n  101: 		float zoom = Time.deltaTime * gesture.deltaPinch/25;\n  102  		Vector3 scale = transform.localScale ;\n  103  		\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/EasyTouch/Example/C# Example/Examples for EasyTouch/Example-Multiplefingers/ObjectTouch.cs:\n  154  	\n  155  		if (gesture.pickObject == gameObject){\n  156: 			float zoom = Time.deltaTime * gesture.deltaPinch;\n  157  		\n  158  			Vector3 scale = transform.localScale ;\n  ...\n  164  	\n  165  		if (gesture.pickObject == gameObject){\n  166: 			float zoom = Time.deltaTime * gesture.deltaPinch;\n  167  		\n  168  			Vector3 scale = transform.localScale ;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/EasyTouch/Example/C# Example/Examples for EasyTouch/Example-TwoFinger/Pinch.cs:\n   53  		if (gesture.pickObject == gameObject){\n   54  			\n   55: 			float zoom = Time.deltaTime * gesture.deltaPinch;\n   56  		\n   57  			Vector3 scale = transform.localScale ;\n   58  			transform.localScale = new Vector3( scale.x - zoom, scale.y -zoom, scale.z-zoom);\n   59  			\n   60: 			textMesh.text = \"Delta pinch : \" + gesture.deltaPinch.ToString();\n   61  		}\n   62  		\n   ..\n   68  		// Verification that the action on the object\n   69  		if (gesture.pickObject == gameObject){\n   70: 			float zoom = Time.deltaTime * gesture.deltaPinch;\n   71  		\n   72  			Vector3  scale = transform.localScale ;\n   73  			transform.localScale = new Vector3( scale.x + zoom, scale.y +zoom,scale.z+zoom);\n   74  			\n   75: 			textMesh.text = \"Delta pinch : \" + gesture.deltaPinch.ToString();\n   76  		}\n   77  	}\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/EasyTouch/Plugins/EasyTouch.cs:\n  869  			gesture.swipeVector = swipeVector;\n  870  			\n  871: 			gesture.deltaPinch = 0;\n  872  			gesture.twistAngle = 0;\n  873  			gesture.pickObject = finger.pickedObject;\n  ...\n 1231  			gesture.swipeVector = swipeVector;\n 1232  			\n 1233: 			gesture.deltaPinch = pinch;\n 1234  			gesture.twistAngle = twist;\n 1235  			gesture.twoFingerDistance = twoDistance;\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/EasyTouch/Plugins/Gesture.cs:\n   54  	/// The pinch length delta since last change.\n   55  	/// </summary>\n   56: 	public float deltaPinch;	\n   57  	/// <summary>\n   58  	/// The angle of the twist.\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/iTweenEditor/README.txt:\n   11  0.6.0 ====\n   12  \n   13: Fixed warnings resulting from API changes in Unity 3.4.  Fixed error where bool fields could pass the wrong value.  Updated bundled iTween version to 2.0.45.1.  Made initial delay field always show, even when 'Play Automatically' was not selected.\n   14  \n   15  0.5.2 ====\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Editor/Fonts/tk2dFontBuilder.cs:\n  388  			}\n  389  			\n  390: 			// duplicate capitals to lower case, or vice versa depending on which ones exist\n  391  	        if (dupeCaps)\n  392  	        {\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/TK2DROOT/tk2d/Editor/Sprites/SpriteCollectionEditor/tk2dSpriteCollectionEditorTextureView.cs:\n  930  			tk2dSpriteGuiUtility.showOpenEditShortcuts = false;\n  931  			tk2dSpriteDefinition.AttachPoint newEditingAttachPointName = editingAttachPointName;\n  932: 			int apIdx = 0;\n  933  			foreach (var ap in param.attachPoints) {\n  934  				GUILayout.BeginHorizontal();\n  ...\n  956  \n  957  				if (GUILayout.Button(\"x\", GUILayout.Width(22))) {\n  958: 					toDelete = apIdx;\n  959  				}\n  960  				GUILayout.EndHorizontal();\n  ...\n  983  \n  984  				editingAttachPointName = newEditingAttachPointName;\n  985: 				++apIdx;\n  986  			}\n  987  			\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lapi.cs:\n    1  /*\n    2: ** $Id: lapi.c,v 2.55.1.5 2008/07/04 18:41:18 roberto Exp $\n    3: ** Lua API\n    4  ** See Copyright Notice in lua.h\n    5  */\n    .\n   29  		public static void CheckNElements(LuaState L, int n)\n   30  		{\n   31: 			ApiCheck(L, n <= L.top - L.base_);\n   32  		}\n   33  \n   34  		public static void CheckValidIndex(LuaState L, StkId i)\n   35  		{\n   36: 			ApiCheck(L, i != LuaONilObject);\n   37  		}\n   38  \n   39  		public static void IncrementTop(LuaState L)\n   40  		{\n   41: 			ApiCheck(L, L.top < L.ci.top);\n   42  			StkId.Inc(ref L.top);\n   43  		}\n   ..\n   48  		  if (idx > 0) {\n   49  			TValue o = L.base_ + (idx - 1);\n   50: 			ApiCheck(L, idx <= L.ci.top - L.base_);\n   51  			if (o >= L.top) return LuaONilObject;\n   52  			else return o;\n   53  		  }\n   54  		  else if (idx > LUA_REGISTRYINDEX) {\n   55: 			ApiCheck(L, idx != 0 && -idx <= L.top - L.base_);\n   56  			return L.top + idx;\n   57  		  }\n   ..\n  111  		  LuaLock(to);\n  112  		  CheckNElements(from, n);\n  113: 		  ApiCheck(from, G(from) == G(to));\n  114: 		  ApiCheck(from, to.ci.top - to.top >= n);\n  115  		  from.top -= n;\n  116  		  for (i = 0; i < n; i++) {\n  ...\n  163  		  LuaLock(L);\n  164  		  if (idx >= 0) {\n  165: 			ApiCheck(L, idx <= L.stack_last - L.base_);\n  166  			while (L.top < L.base_ + idx)\n  167  			  SetNilValue(StkId.Inc(ref L.top));\n  ...\n  169  		  }\n  170  		  else {\n  171: 			ApiCheck(L, -(idx+1) <= (L.top - L.base_));\n  172  			L.top += idx+1;  /* `subtract' index (index is negative) */\n  173  		  }\n  ...\n  210  		  if (idx == LUA_ENVIRONINDEX) {\n  211  			Closure func = CurrFunc(L);\n  212: 			ApiCheck(L, TTIsTable(L.top - 1)); \n  213  			func.c.env = HValue(L.top - 1);\n  214  			LuaCBarrier(L, func, L.top - 1);\n  ...\n  561  		  LuaLock(L);\n  562  		  t = Index2Address(L, idx);\n  563: 		  ApiCheck(L, TTIsTable(t));\n  564  		  SetObj2S(L, L.top - 1, luaH_get(HValue(t), L.top - 1));\n  565  		  LuaUnlock(L);\n  ...\n  571  		  LuaLock(L);\n  572  		  o = Index2Address(L, idx);\n  573: 		  ApiCheck(L, TTIsTable(o));\n  574  		  SetObj2S(L, L.top, luaH_getnum(HValue(o), n));\n  575  		  IncrementTop(L);\n  ...\n  676  		  CheckNElements(L, 2);\n  677  		  t = Index2Address(L, idx);\n  678: 		  ApiCheck(L, TTIsTable(t));\n  679  		  SetObj2T(L, luaH_set(L, HValue(t), L.top-2), L.top-1);\n  680  		  LuaCBarrierT(L, HValue(t), L.top-1);\n  ...\n  689  		  CheckNElements(L, 1);\n  690  		  o = Index2Address(L, idx);\n  691: 		  ApiCheck(L, TTIsTable(o));\n  692  		  SetObj2T(L, luaH_setnum(L, HValue(o), n), L.top-1);\n  693  		  LuaCBarrierT(L, HValue(o), L.top-1);\n  ...\n  707  			  mt = null;\n  708  		  else {\n  709: 			ApiCheck(L, TTIsTable(L.top - 1));\n  710  			mt = HValue(L.top - 1);\n  711  		  }\n  ...\n  741  		  o = Index2Address(L, idx);\n  742  		  CheckValidIndex(L, o);\n  743: 		  ApiCheck(L, TTIsTable(L.top - 1));\n  744  		  switch (TType(o)) {\n  745  			case LUA_TFUNCTION:\n  ...\n  775  \n  776  		public static void CheckResults(LuaState L, int na, int nr) {\n  777: 			ApiCheck(L, (nr) == LUA_MULTRET || (L.ci.top - L.top >= (nr) - (na)));\n  778  		}\n  779  			\n  ...\n  983  		  LuaLock(L);\n  984  		  t = Index2Address(L, idx);\n  985: 		  ApiCheck(L, TTIsTable(t));\n  986  		  more = luaH_next(L, HValue(t), L.top - 1);\n  987  		  if (more != 0) {\n\n/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/Lua.cs:\n   59  	/*\n   60  	 * Main class of NLua\n   61: 	 * Object-oriented wrapper to Lua API\n   62  	 *\n   63  	 * Author: Fabio Mascarenhas\n   ..\n  340  		static int PanicCallback (LuaState luaState)\n  341  		{\n  342: 			string reason = string.Format (\"unprotected error in call to Lua API ({0})\", LuaLib.LuaToString (luaState, -1));\n  343  			throw new LuaException (reason);\n  344  		}\n\n425 matches across 31 files\n",
			"settings":
			{
				"buffer_size": 277528,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"re",
				"Package Control: Remove Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"package",
				"Preferences: Browse Packages"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"instll",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"gitst",
				"Git: Status"
			],
			[
				"gitdif",
				"Git: Diff All"
			],
			[
				"set",
				"Set Syntax: C#"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/lapi.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/LuaBase.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/lua/Main.lua",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Resources/UI/Prefabs/UI_Common.prefab",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Resources/Message/Common_msg.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/Model/CModelMgr.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/Table/SimpleJSON.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/Controller/Input/UIEvent.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/Controller/CController.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/Controller/Input/INPUT_INFO.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/Controller/CPage.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/Controller/UILAYER.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/View/CView.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/Controller/CPageSwitch.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/README.md",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/coroutineWrap.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaState.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/ObjectWrap.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/LuaWrap.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaAPI.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaDLL.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaFunction.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaBase.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/AnimationClipPairWrap.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/Base/LuaScriptMgr.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/Tools/CompilerMain.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/Tools/LuaCompiler.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/Dump.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uniLua/U3DLua/uLua/Core/Lua.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uniLua/U3DLua/Source/Base/LuaScriptMgr.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uniLua/UniLua/LuaFile.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/lua/Scene/TitleScene.lua",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uniLua/UniLua/LuaAPI.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uniLua/UniLua/Util.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uniLua/UniLua/LuaState.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uniLua/U3DLua/Source/Base/Debugger.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uniLua/U3DLua/Source/LuaWrap/GameObjectWrap.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uniLua/U3DLua/Source/Base/Client.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uniLua/U3DLua/uLua/Core/LuaDLL.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uniLua/U3DLua/Source/LuaWrap/Base/ToLua.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uLua/Examples/06_LuaCoroutines/LuaCoroutines.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uLua/Core/LuaDLL.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uLua/Core/Lua.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uLua/Core/LuaStatic.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uLua/Core/ObjectTranslator.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uLua/README.txt",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uniLua/UniLua/LuaPkgLib.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uLua/Core/LuaFunction.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uniLua/Tools/LuaCompiler.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/Manager/MyApplaction.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/Manager/UIManager.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uLua/Examples/03_AccessingLuaVariables/AccessingLuaVariables.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uLua/Examples/02_CreateGameObject/CreateGameObject.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uLua/Examples/01_HelloWorld/HelloWorld.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uLua/Examples/04_ScriptsFromFile/04_ScriptsFromFile.lua.txt",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uLua/Examples/04_ScriptsFromFile/ScriptsFromFile.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/uLua/Examples/05_CallLuaFunction/CallLuaFunction.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/lua/Scene/Title.lua",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DUtil/CFile.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/Scene/GameScene.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DMVC/src/Controller/CScene.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/Scene/LoginScene.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/Scene/TitleScene.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/submodule/Unity3DUtil/CSingleton.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/App/Scripts/Editor/InspectorTool.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/NGUI/Scripts/Internal/UIDrawCall.cs",
		"/Users/luzexi/Desktop/work/pstage/client/u3d/Assets/MyPlugins/Reporter/Editor/ReporterEditor.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Resources/Message/Common_msg.csv",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Character/State/PlayerStateAction.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App_China/Script/Network/Model/DownloadListModel.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App_China/Script/UI/UI_Download_reward.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App_China/Script/UI/UI_Download_reward_ok.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App_China/Script/UI/UI_DownLoad_All.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App_China/Script/Manager/GAME_DEFINE.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Network/Model/QuestGetDreamModel.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Network/Model/QuestGenerateModel.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Manager/InGameManager.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Manager/InGameManager_StageDatas.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Manager/StageManager.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/State/StageManagerStateStageClear.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/State/StageManagerStateResult.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Manager/GlobalDataManager.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/UI/UI_Inn.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Network/NetworkManager.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Network/NetworkManager_Asset.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/UI/UI_TopMenu.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/State/StageManagerStatePlaying.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/UI/UI_World.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Stage/FieldModel.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Manager/ResourceManager.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/UI/Area/UI_Area.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App_China/Script/Manager/PvpManager.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/UI/UI_Common.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Resources/Message/Common_msg_cn.msg.asset",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App_China/Script/UI/UI_Download_RewardItem.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/UI/UI_Menu.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/UI/UI_Opinion.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Network/Model/QuestListModel.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Editor/AndroidExporter.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/AI System/Scripts/Actions/Quest/CompleteQuest.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Stage/StageEventListener.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Manager/InGameManager_Logo.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/UI/InGame/UI_InGame.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Network/Model/DeckModel.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Network/Model/PlayerModel.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/UI/InGame/UI_InGamePauseMenu.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Network/Model/AssetModel.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Network/Model/BaseModel.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Manager/OutGameManager.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Network/Model/AssetBundleVersionModel.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Network/Model/WeaponModel.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Network/Model/DeckUpdateEquipmentModel.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Manager/NotificationManager.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Lib/Native.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/UI/System/UIController.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/AI System/Scripts/Actions/Quest/SetupEpsodeSituation.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/State/StageManagerStateStageIn.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Manager/StageManager_Pop.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Network/NetworkErrorCode.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/UI/UI_DreamCutScene.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/UI/UI_Dream.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App_China/Script/UI/Vip/UI_VipIcon.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Coop/CoopManager_Room.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App_China/Script/UI/PVP_Reward_Alert.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/Lib/Util.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/UI/UI_StartupDownload.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App_China/Editor/ResoucesDownLoadEditor.cs",
		"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Scripts/UI/UI_Title.cs"
	],
	"find":
	{
		"height": 50.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"API",
			"class API",
			"class api",
			"L_NewLib",
			"class ILuaAuxLib",
			"ILuaAuxLib",
			"transform",
			"LLRequire",
			"\"require\"",
			"require",
			"class Lua",
			"clr_package",
			"LoadCLRPackage",
			"Instance",
			"L_SetFuncs",
			"class luaindexes",
			"luaindexes",
			"LuaStringBuffer",
			"NoToLuaAttribute",
			"CSharpFunctionDelegate",
			"NameFuncPair",
			"registerlib",
			"register",
			"m_mapRes",
			"OnLoadComplete",
			"JsonMapper",
			"class JsonMapper",
			"PushCSharpFunction",
			"PushArray",
			"CreateTable",
			"PushLuaFunction",
			"PushLuaTable",
			" LuaCSFunction",
			"LuaCSFunction",
			"LuaBase",
			"refGCList",
			"Loader",
			"set_name",
			"LuaCSFunction",
			"class LuaCSFunction",
			" LuaCSFunction",
			"class LuaCSFunction",
			"OnUpdate",
			"coroutineWrap",
			"Timer",
			"LuaScriptMgr",
			"DumpingToFile",
			"DumpVector",
			"DumpItemDelegate",
			"dumpItem",
			"DumpVector",
			"DumpCode",
			"DumpFunction",
			"DumpBlock",
			"DumpHeader",
			"Dump",
			"luaopen_pb",
			"class LuaState",
			" L",
			" L ",
			"L ",
			"L",
			"DoFile",
			"CreateTable",
			"Instance",
			"Debugger",
			"Timer",
			"Debugger",
			"return",
			"IsTable",
			"streamingasset",
			"streamasset",
			"assetstream",
			"assetsstream",
			"assetstream",
			"Compiler",
			"luaL_loadbuffer",
			"ThrowExceptionFromError",
			"luaL_loadbuffer",
			"loadAssembly",
			"loadAssemblyFunction",
			"loadfileluaFunction",
			"loadAssemblyFunction",
			"loadAssembly",
			"loadAssemblyFunction",
			"load_assembly",
			" load_assembly(",
			"load_assembly",
			"require(",
			"FindLoader",
			"require(",
			"require",
			"LuaStatic.dofile",
			"dofile(",
			"dofile",
			"loadfileluaFunction",
			"loadfileFunction",
			"init_luanet",
			"SearchPath",
			"FindFile",
			"loadfile",
			"loader",
			"include",
			"MonoPInvokeCallbackAttribute",
			"searchers",
			"FindLoader",
			"require(",
			"require '",
			"require",
			"DrawScale",
			"DrawRotation",
			"FloatField",
			"DrawRotation",
			"NGUIEditorTools",
			"NGUITransformInspector",
			"NGUIEditorTools",
			"NGUITransformInspector",
			"SHOW_HIDDEN_OBJECTS",
			"hideflags",
			"hidflags",
			"OnTouchDown",
			" ",
			"pvp_interval",
			"Challenge_List",
			"RequestBuyFightAndPoint",
			"getMaxChallengeNum",
			"challengeListModel",
			"selfPVPInfo"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"PLATFORM_ID"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 7,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/App/Scripts/Manager/MyApplaction.cs",
					"settings":
					{
						"buffer_size": 2414,
						"regions":
						{
						},
						"selection":
						[
							[
								122,
								122
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/Base/LuaScriptMgr.cs",
					"settings":
					{
						"buffer_size": 49602,
						"regions":
						{
						},
						"selection":
						[
							[
								5587,
								5587
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/U3DLua/LuaEngine.cs",
					"settings":
					{
						"buffer_size": 1174,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								1173
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/C#/C#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 362.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaState.cs",
					"settings":
					{
						"buffer_size": 6774,
						"regions":
						{
						},
						"selection":
						[
							[
								228,
								228
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaAPI.cs",
					"settings":
					{
						"buffer_size": 36542,
						"regions":
						{
						},
						"selection":
						[
							[
								7942,
								7942
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaBaseLib.cs",
					"settings":
					{
						"buffer_size": 11444,
						"regions":
						{
						},
						"selection":
						[
							[
								533,
								545
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/ToLua.cs",
					"settings":
					{
						"buffer_size": 65927,
						"regions":
						{
						},
						"selection":
						[
							[
								63947,
								63947
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 30121.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaAuxLib.cs",
					"settings":
					{
						"buffer_size": 17289,
						"regions":
						{
						},
						"selection":
						[
							[
								14381,
								14381
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8831.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/LuaWrap.cs",
					"settings":
					{
						"buffer_size": 1059,
						"regions":
						{
						},
						"selection":
						[
							[
								249,
								249
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/U3DLua/LuaWrap.cs",
					"settings":
					{
						"buffer_size": 1343,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								1343
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/NetObjectWrap.cs",
					"settings":
					{
						"buffer_size": 3636,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 586.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/Lua.cs",
					"settings":
					{
						"buffer_size": 34443,
						"regions":
						{
						},
						"selection":
						[
							[
								618,
								618
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 160.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/Example/TestBehaviour.cs",
					"settings":
					{
						"buffer_size": 1914,
						"regions":
						{
						},
						"selection":
						[
							[
								903,
								903
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 240.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/KeraLua/Lua.cs",
					"settings":
					{
						"buffer_size": 12201,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3393.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/Example/ExampleBehaviour.cs",
					"settings":
					{
						"buffer_size": 2897,
						"regions":
						{
						},
						"selection":
						[
							[
								1659,
								1517
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 828.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "Assets/App/Scripts/Manager/UIManager.cs",
					"settings":
					{
						"buffer_size": 207,
						"regions":
						{
						},
						"selection":
						[
							[
								192,
								192
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "Assets/App/Scripts/lua/Main.lua",
					"settings":
					{
						"buffer_size": 313,
						"regions":
						{
						},
						"selection":
						[
							[
								78,
								78
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "Assets/App/Scripts/lua/Scene/TitleScene.lua",
					"settings":
					{
						"buffer_size": 139,
						"regions":
						{
						},
						"selection":
						[
							[
								99,
								99
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 18,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/ObjectWrap.cs",
					"settings":
					{
						"buffer_size": 9416,
						"regions":
						{
						},
						"selection":
						[
							[
								1939,
								1939
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 737.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/loadlib.cs",
					"settings":
					{
						"buffer_size": 20682,
						"regions":
						{
						},
						"selection":
						[
							[
								13607,
								13607
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6983.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/Lua.cs",
					"settings":
					{
						"buffer_size": 34654,
						"regions":
						{
						},
						"selection":
						[
							[
								6575,
								6575
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/uLua/Core/LuaDLL.cs",
					"settings":
					{
						"buffer_size": 17704,
						"regions":
						{
						},
						"selection":
						[
							[
								1442,
								1442
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 799.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaBaseLib.cs",
					"settings":
					{
						"buffer_size": 11444,
						"regions":
						{
						},
						"selection":
						[
							[
								1717,
								1717
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 418.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/U3DLua/LuaWrap.cs",
					"settings":
					{
						"buffer_size": 1343,
						"regions":
						{
						},
						"selection":
						[
							[
								86,
								86
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/Tools/CompilerMain.cs",
					"settings":
					{
						"buffer_size": 2717,
						"regions":
						{
						},
						"selection":
						[
							[
								265,
								265
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/Tools/LuaCompiler.cs",
					"settings":
					{
						"buffer_size": 3619,
						"regions":
						{
						},
						"selection":
						[
							[
								80,
								80
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "Assets/App/Scripts/Manager/MyApplaction.cs",
					"settings":
					{
						"buffer_size": 2414,
						"regions":
						{
						},
						"selection":
						[
							[
								573,
								573
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 331.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/U3DLua/LuaEngine.cs",
					"settings":
					{
						"buffer_size": 1174,
						"regions":
						{
						},
						"selection":
						[
							[
								786,
								786
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/C#/C#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 236.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 9,
			"sheets":
			[
				{
					"buffer": 24,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/toLua/Editor/BindLua.cs",
					"settings":
					{
						"buffer_size": 16398,
						"regions":
						{
						},
						"selection":
						[
							[
								147,
								147
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/KopiLua/LuaState.cs",
					"settings":
					{
						"buffer_size": 1711,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 113.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/KeraLua/LuaState.cs",
					"settings":
					{
						"buffer_size": 409,
						"regions":
						{
						},
						"selection":
						[
							[
								114,
								114
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/Example/ExampleBehaviour.cs",
					"settings":
					{
						"buffer_size": 2897,
						"regions":
						{
						},
						"selection":
						[
							[
								1260,
								1260
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 558.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/NLua/Lua.cs",
					"settings":
					{
						"buffer_size": 34654,
						"regions":
						{
						},
						"selection":
						[
							[
								14179,
								14179
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6640.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "Assets/App/Scripts/lua/Scene/TitleScene.lua",
					"settings":
					{
						"buffer_size": 139,
						"regions":
						{
						},
						"selection":
						[
							[
								139,
								139
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/Example/TestBehaviour.cs",
					"settings":
					{
						"buffer_size": 1914,
						"regions":
						{
						},
						"selection":
						[
							[
								501,
								501
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/NLua/Example/SpawnSphere.cs",
					"settings":
					{
						"buffer_size": 1827,
						"regions":
						{
						},
						"selection":
						[
							[
								311,
								317
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Assets/App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaAPI.cs",
					"settings":
					{
						"buffer_size": 36542,
						"regions":
						{
						},
						"selection":
						[
							[
								3223,
								3223
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1632.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 28,
					"settings":
					{
						"buffer_size": 277528,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										232,
										244
									],
									[
										471,
										483
									],
									[
										592,
										604
									],
									[
										842,
										854
									],
									[
										891,
										903
									],
									[
										943,
										955
									],
									[
										1138,
										1150
									],
									[
										1247,
										1259
									],
									[
										1464,
										1476
									],
									[
										1603,
										1615
									],
									[
										1631,
										1643
									],
									[
										1673,
										1685
									],
									[
										1735,
										1747
									],
									[
										1806,
										1818
									],
									[
										1879,
										1891
									],
									[
										1953,
										1965
									],
									[
										2021,
										2033
									],
									[
										2132,
										2144
									],
									[
										2205,
										2217
									],
									[
										2278,
										2290
									],
									[
										2352,
										2364
									],
									[
										2426,
										2438
									],
									[
										2496,
										2508
									],
									[
										2633,
										2645
									],
									[
										2765,
										2777
									],
									[
										2893,
										2905
									],
									[
										3160,
										3172
									],
									[
										3188,
										3200
									],
									[
										3230,
										3242
									],
									[
										3294,
										3306
									],
									[
										3372,
										3384
									],
									[
										3436,
										3448
									],
									[
										3499,
										3511
									],
									[
										3563,
										3575
									],
									[
										3631,
										3643
									],
									[
										3692,
										3704
									],
									[
										3757,
										3769
									],
									[
										3818,
										3830
									],
									[
										3881,
										3893
									],
									[
										3944,
										3956
									],
									[
										4007,
										4019
									],
									[
										4075,
										4087
									],
									[
										4139,
										4151
									],
									[
										4203,
										4215
									],
									[
										4267,
										4279
									],
									[
										4331,
										4343
									],
									[
										4406,
										4418
									],
									[
										4481,
										4493
									],
									[
										4549,
										4561
									],
									[
										4617,
										4629
									],
									[
										4678,
										4690
									],
									[
										4935,
										4947
									],
									[
										4963,
										4975
									],
									[
										5005,
										5017
									],
									[
										5072,
										5084
									],
									[
										5130,
										5142
									],
									[
										5188,
										5200
									],
									[
										5244,
										5256
									],
									[
										5302,
										5314
									],
									[
										5362,
										5374
									],
									[
										5426,
										5438
									],
									[
										5493,
										5505
									],
									[
										5558,
										5570
									],
									[
										5622,
										5634
									],
									[
										5690,
										5702
									],
									[
										5950,
										5962
									],
									[
										5978,
										5990
									],
									[
										6020,
										6032
									],
									[
										6073,
										6085
									],
									[
										6126,
										6138
									],
									[
										6181,
										6193
									],
									[
										6234,
										6246
									],
									[
										6285,
										6297
									],
									[
										6532,
										6544
									],
									[
										6560,
										6572
									],
									[
										6602,
										6614
									],
									[
										6872,
										6884
									],
									[
										6914,
										6926
									],
									[
										6967,
										6979
									],
									[
										7230,
										7242
									],
									[
										7272,
										7284
									],
									[
										7349,
										7361
									],
									[
										7421,
										7433
									],
									[
										7492,
										7504
									],
									[
										7551,
										7563
									],
									[
										7629,
										7641
									],
									[
										7685,
										7697
									],
									[
										7755,
										7767
									],
									[
										7828,
										7840
									],
									[
										7888,
										7900
									],
									[
										7958,
										7970
									],
									[
										8016,
										8028
									],
									[
										8085,
										8097
									],
									[
										8162,
										8174
									],
									[
										8218,
										8230
									],
									[
										8287,
										8299
									],
									[
										8354,
										8366
									],
									[
										8432,
										8444
									],
									[
										8696,
										8708
									],
									[
										8724,
										8736
									],
									[
										8766,
										8778
									],
									[
										8818,
										8830
									],
									[
										8870,
										8882
									],
									[
										8922,
										8934
									],
									[
										8974,
										8986
									],
									[
										9024,
										9036
									],
									[
										9077,
										9089
									],
									[
										9129,
										9141
									],
									[
										9179,
										9191
									],
									[
										9234,
										9246
									],
									[
										9284,
										9296
									],
									[
										9530,
										9542
									],
									[
										9558,
										9570
									],
									[
										9600,
										9612
									],
									[
										9652,
										9664
									],
									[
										9705,
										9717
									],
									[
										9758,
										9770
									],
									[
										9812,
										9824
									],
									[
										9865,
										9877
									],
									[
										9918,
										9930
									],
									[
										9971,
										9983
									],
									[
										10023,
										10035
									],
									[
										10075,
										10087
									],
									[
										10127,
										10139
									],
									[
										10181,
										10193
									],
									[
										10234,
										10246
									],
									[
										10288,
										10300
									],
									[
										10342,
										10354
									],
									[
										10396,
										10408
									],
									[
										10448,
										10460
									],
									[
										10500,
										10512
									],
									[
										10552,
										10564
									],
									[
										10605,
										10617
									],
									[
										10657,
										10669
									],
									[
										10709,
										10721
									],
									[
										10767,
										10779
									],
									[
										10829,
										10841
									],
									[
										10881,
										10893
									],
									[
										10933,
										10945
									],
									[
										10986,
										10998
									],
									[
										11039,
										11051
									],
									[
										11283,
										11295
									],
									[
										11311,
										11323
									],
									[
										11381,
										11393
									],
									[
										11632,
										11644
									],
									[
										11660,
										11672
									],
									[
										11708,
										11720
									],
									[
										11833,
										11845
									],
									[
										11865,
										11877
									],
									[
										11907,
										11919
									],
									[
										11963,
										11975
									],
									[
										12024,
										12036
									],
									[
										12210,
										12222
									],
									[
										12244,
										12256
									],
									[
										12286,
										12298
									],
									[
										12339,
										12351
									],
									[
										12654,
										12666
									],
									[
										12682,
										12694
									],
									[
										12724,
										12736
									],
									[
										12775,
										12787
									],
									[
										12826,
										12838
									],
									[
										12877,
										12889
									],
									[
										12928,
										12940
									],
									[
										12982,
										12994
									],
									[
										13036,
										13048
									],
									[
										13087,
										13099
									],
									[
										13136,
										13148
									],
									[
										13189,
										13201
									],
									[
										13242,
										13254
									],
									[
										13291,
										13303
									],
									[
										13347,
										13359
									],
									[
										13396,
										13408
									],
									[
										13644,
										13656
									],
									[
										13672,
										13684
									],
									[
										13714,
										13726
									],
									[
										13769,
										13781
									],
									[
										13821,
										13833
									],
									[
										13876,
										13888
									],
									[
										13928,
										13940
									],
									[
										13983,
										13995
									],
									[
										14038,
										14050
									],
									[
										14334,
										14356
									],
									[
										14548,
										14570
									],
									[
										14754,
										14776
									],
									[
										14960,
										14982
									],
									[
										15162,
										15184
									],
									[
										15223,
										15245
									],
									[
										15424,
										15446
									],
									[
										15649,
										15671
									],
									[
										15839,
										15861
									],
									[
										15983,
										16005
									],
									[
										16124,
										16146
									],
									[
										16275,
										16297
									],
									[
										16527,
										16549
									],
									[
										16607,
										16629
									],
									[
										16787,
										16809
									],
									[
										16999,
										17021
									],
									[
										17203,
										17225
									],
									[
										17528,
										17550
									],
									[
										17760,
										17782
									],
									[
										17913,
										17935
									],
									[
										18091,
										18113
									],
									[
										18385,
										18407
									],
									[
										18544,
										18566
									],
									[
										18650,
										18672
									],
									[
										18759,
										18781
									],
									[
										19033,
										19055
									],
									[
										19074,
										19096
									],
									[
										19315,
										19337
									],
									[
										19654,
										19670
									],
									[
										19717,
										19733
									],
									[
										20019,
										20035
									],
									[
										20226,
										20242
									],
									[
										20297,
										20313
									],
									[
										20604,
										20619
									],
									[
										20872,
										20887
									],
									[
										21107,
										21122
									],
									[
										21150,
										21165
									],
									[
										21573,
										21588
									],
									[
										21655,
										21670
									],
									[
										21897,
										21912
									],
									[
										21948,
										21963
									],
									[
										22408,
										22418
									],
									[
										22612,
										22622
									],
									[
										22815,
										22825
									],
									[
										23019,
										23029
									],
									[
										23300,
										23310
									],
									[
										23587,
										23597
									],
									[
										23882,
										23892
									],
									[
										24119,
										24129
									],
									[
										24298,
										24308
									],
									[
										24491,
										24501
									],
									[
										24695,
										24705
									],
									[
										24976,
										24986
									],
									[
										25219,
										25229
									],
									[
										25456,
										25466
									],
									[
										25658,
										25668
									],
									[
										25832,
										25842
									],
									[
										26173,
										26183
									],
									[
										26349,
										26359
									],
									[
										26619,
										26629
									],
									[
										26757,
										26767
									],
									[
										27061,
										27071
									],
									[
										27300,
										27310
									],
									[
										27536,
										27546
									],
									[
										27747,
										27757
									],
									[
										28029,
										28039
									],
									[
										28171,
										28181
									],
									[
										28399,
										28409
									],
									[
										28577,
										28587
									],
									[
										28825,
										28835
									],
									[
										29023,
										29033
									],
									[
										29217,
										29227
									],
									[
										29464,
										29474
									],
									[
										29720,
										29730
									],
									[
										30130,
										30140
									],
									[
										30499,
										30509
									],
									[
										30745,
										30755
									],
									[
										30974,
										30984
									],
									[
										31322,
										31332
									],
									[
										31601,
										31611
									],
									[
										31791,
										31801
									],
									[
										31981,
										31991
									],
									[
										32277,
										32293
									],
									[
										32653,
										32663
									],
									[
										33042,
										33052
									],
									[
										33214,
										33224
									],
									[
										33279,
										33289
									],
									[
										33543,
										33553
									],
									[
										33900,
										33910
									],
									[
										34258,
										34266
									],
									[
										34374,
										34382
									],
									[
										34529,
										34537
									],
									[
										34733,
										34741
									],
									[
										35048,
										35056
									],
									[
										35402,
										35410
									],
									[
										35664,
										35672
									],
									[
										35725,
										35733
									],
									[
										35773,
										35781
									],
									[
										35864,
										35872
									],
									[
										35964,
										35972
									],
									[
										36146,
										36154
									],
									[
										36207,
										36215
									],
									[
										36255,
										36263
									],
									[
										36346,
										36354
									],
									[
										36684,
										36692
									],
									[
										37044,
										37052
									],
									[
										37098,
										37106
									],
									[
										37161,
										37169
									],
									[
										37207,
										37215
									],
									[
										37318,
										37326
									],
									[
										37406,
										37414
									],
									[
										37527,
										37535
									],
									[
										37572,
										37580
									],
									[
										37700,
										37708
									],
									[
										37868,
										37876
									],
									[
										38023,
										38031
									],
									[
										38154,
										38162
									],
									[
										38299,
										38307
									],
									[
										38432,
										38440
									],
									[
										38553,
										38561
									],
									[
										38748,
										38756
									],
									[
										38825,
										38833
									],
									[
										38924,
										38932
									],
									[
										39115,
										39123
									],
									[
										39195,
										39203
									],
									[
										39302,
										39310
									],
									[
										39470,
										39478
									],
									[
										39583,
										39591
									],
									[
										39787,
										39795
									],
									[
										39868,
										39876
									],
									[
										39949,
										39957
									],
									[
										40097,
										40105
									],
									[
										40164,
										40172
									],
									[
										40341,
										40349
									],
									[
										40497,
										40505
									],
									[
										40695,
										40703
									],
									[
										40845,
										40853
									],
									[
										40899,
										40907
									],
									[
										40930,
										40938
									],
									[
										40968,
										40976
									],
									[
										41204,
										41212
									],
									[
										41274,
										41282
									],
									[
										41375,
										41383
									],
									[
										41527,
										41535
									],
									[
										41604,
										41612
									],
									[
										41658,
										41666
									],
									[
										41689,
										41697
									],
									[
										41729,
										41737
									],
									[
										41969,
										41977
									],
									[
										42216,
										42224
									],
									[
										42391,
										42399
									],
									[
										42444,
										42452
									],
									[
										42507,
										42515
									],
									[
										42550,
										42558
									],
									[
										42721,
										42729
									],
									[
										42960,
										42968
									],
									[
										43090,
										43098
									],
									[
										43284,
										43292
									],
									[
										43347,
										43355
									],
									[
										43410,
										43418
									],
									[
										43460,
										43468
									],
									[
										43523,
										43531
									],
									[
										43643,
										43651
									],
									[
										43747,
										43755
									],
									[
										43810,
										43818
									],
									[
										43861,
										43869
									],
									[
										43936,
										43944
									],
									[
										44180,
										44188
									],
									[
										44220,
										44228
									],
									[
										44265,
										44273
									],
									[
										44489,
										44497
									],
									[
										44613,
										44621
									],
									[
										44651,
										44659
									],
									[
										44694,
										44702
									],
									[
										44768,
										44776
									],
									[
										44803,
										44811
									],
									[
										44929,
										44937
									],
									[
										45095,
										45103
									],
									[
										45239,
										45247
									],
									[
										45323,
										45331
									],
									[
										45492,
										45500
									],
									[
										45692,
										45700
									],
									[
										45735,
										45743
									],
									[
										46165,
										46173
									],
									[
										46400,
										46408
									],
									[
										46436,
										46444
									],
									[
										46499,
										46507
									],
									[
										46603,
										46611
									],
									[
										46670,
										46678
									],
									[
										46775,
										46783
									],
									[
										47021,
										47029
									],
									[
										47129,
										47137
									],
									[
										47303,
										47311
									],
									[
										47509,
										47517
									],
									[
										47717,
										47725
									],
									[
										47963,
										47971
									],
									[
										48070,
										48078
									],
									[
										48230,
										48238
									],
									[
										48489,
										48497
									],
									[
										48622,
										48630
									],
									[
										48807,
										48815
									],
									[
										48896,
										48904
									],
									[
										48922,
										48930
									],
									[
										49096,
										49104
									],
									[
										49256,
										49264
									],
									[
										49281,
										49289
									],
									[
										49372,
										49380
									],
									[
										49395,
										49403
									],
									[
										49508,
										49516
									],
									[
										49531,
										49539
									],
									[
										49652,
										49660
									],
									[
										49675,
										49683
									],
									[
										49798,
										49806
									],
									[
										49821,
										49829
									],
									[
										49982,
										49990
									],
									[
										50005,
										50013
									],
									[
										50170,
										50178
									],
									[
										50193,
										50201
									],
									[
										50538,
										50546
									],
									[
										50592,
										50600
									],
									[
										50759,
										50767
									],
									[
										50813,
										50821
									],
									[
										51018,
										51026
									],
									[
										51072,
										51080
									],
									[
										51431,
										51439
									],
									[
										51448,
										51456
									],
									[
										51670,
										51678
									],
									[
										51869,
										51877
									],
									[
										52065,
										52073
									],
									[
										52251,
										52259
									],
									[
										52553,
										52561
									],
									[
										52572,
										52580
									],
									[
										52798,
										52806
									],
									[
										53011,
										53019
									],
									[
										53270,
										53278
									],
									[
										53418,
										53426
									],
									[
										53561,
										53569
									],
									[
										53879,
										53887
									],
									[
										54230,
										54238
									],
									[
										54246,
										54254
									],
									[
										54459,
										54467
									],
									[
										54642,
										54650
									],
									[
										54949,
										54957
									],
									[
										55208,
										55216
									],
									[
										55338,
										55346
									],
									[
										55478,
										55486
									],
									[
										55725,
										55733
									],
									[
										56068,
										56076
									],
									[
										56316,
										56324
									],
									[
										56333,
										56341
									],
									[
										56573,
										56581
									],
									[
										56713,
										56721
									],
									[
										56798,
										56806
									],
									[
										56898,
										56906
									],
									[
										57237,
										57245
									],
									[
										57577,
										57585
									],
									[
										57912,
										57920
									],
									[
										58112,
										58120
									],
									[
										58384,
										58392
									],
									[
										58618,
										58626
									],
									[
										58999,
										59007
									],
									[
										59348,
										59356
									],
									[
										59577,
										59585
									],
									[
										59820,
										59828
									],
									[
										60033,
										60041
									],
									[
										60050,
										60058
									],
									[
										60217,
										60225
									],
									[
										60580,
										60588
									],
									[
										60954,
										60962
									],
									[
										61040,
										61048
									],
									[
										61365,
										61373
									],
									[
										61592,
										61600
									],
									[
										62111,
										62119
									],
									[
										62344,
										62352
									],
									[
										62654,
										62662
									],
									[
										62842,
										62850
									],
									[
										63094,
										63102
									],
									[
										63399,
										63407
									],
									[
										63723,
										63731
									],
									[
										64142,
										64150
									],
									[
										64207,
										64215
									],
									[
										64512,
										64520
									],
									[
										64699,
										64707
									],
									[
										64919,
										64927
									],
									[
										65153,
										65161
									],
									[
										65337,
										65345
									],
									[
										65645,
										65653
									],
									[
										65934,
										65942
									],
									[
										66173,
										66181
									],
									[
										66582,
										66590
									],
									[
										66892,
										66900
									],
									[
										67177,
										67185
									],
									[
										67499,
										67507
									],
									[
										67904,
										67912
									],
									[
										68380,
										68388
									],
									[
										68397,
										68405
									],
									[
										68738,
										68746
									],
									[
										69283,
										69291
									],
									[
										69597,
										69605
									],
									[
										69649,
										69657
									],
									[
										69744,
										69752
									],
									[
										69815,
										69823
									],
									[
										69902,
										69910
									],
									[
										70133,
										70141
									],
									[
										70325,
										70333
									],
									[
										70511,
										70519
									],
									[
										70743,
										70751
									],
									[
										70991,
										70999
									],
									[
										71014,
										71022
									],
									[
										71065,
										71073
									],
									[
										71128,
										71136
									],
									[
										71175,
										71183
									],
									[
										71275,
										71283
									],
									[
										71368,
										71376
									],
									[
										71413,
										71421
									],
									[
										71669,
										71677
									],
									[
										71983,
										71991
									],
									[
										71995,
										72003
									],
									[
										72100,
										72108
									],
									[
										72160,
										72168
									],
									[
										72288,
										72296
									],
									[
										72448,
										72456
									],
									[
										72537,
										72545
									],
									[
										72663,
										72671
									],
									[
										72790,
										72798
									],
									[
										72912,
										72920
									],
									[
										73168,
										73176
									],
									[
										73304,
										73312
									],
									[
										73427,
										73435
									],
									[
										73562,
										73570
									],
									[
										73696,
										73704
									],
									[
										73830,
										73838
									],
									[
										74174,
										74182
									],
									[
										74220,
										74228
									],
									[
										74304,
										74312
									],
									[
										74369,
										74377
									],
									[
										74447,
										74455
									],
									[
										74545,
										74553
									],
									[
										74796,
										74804
									],
									[
										74983,
										74991
									],
									[
										75173,
										75181
									],
									[
										75494,
										75502
									],
									[
										75537,
										75545
									],
									[
										75603,
										75611
									],
									[
										75807,
										75815
									],
									[
										75881,
										75889
									],
									[
										75970,
										75978
									],
									[
										76125,
										76133
									],
									[
										76302,
										76310
									],
									[
										76575,
										76583
									],
									[
										76716,
										76724
									],
									[
										76836,
										76844
									],
									[
										77014,
										77022
									],
									[
										77128,
										77136
									],
									[
										77271,
										77279
									],
									[
										77406,
										77414
									],
									[
										77534,
										77542
									],
									[
										77668,
										77676
									],
									[
										78008,
										78016
									],
									[
										78050,
										78058
									],
									[
										78110,
										78118
									],
									[
										78154,
										78162
									],
									[
										78213,
										78221
									],
									[
										78401,
										78409
									],
									[
										78582,
										78590
									],
									[
										78811,
										78819
									],
									[
										79131,
										79139
									],
									[
										79386,
										79394
									],
									[
										79616,
										79624
									],
									[
										79915,
										79923
									],
									[
										80156,
										80164
									],
									[
										80481,
										80489
									],
									[
										80835,
										80843
									],
									[
										81124,
										81132
									],
									[
										81494,
										81502
									],
									[
										81779,
										81787
									],
									[
										82118,
										82126
									],
									[
										82545,
										82553
									],
									[
										82878,
										82886
									],
									[
										83036,
										83044
									],
									[
										83387,
										83395
									],
									[
										83428,
										83436
									],
									[
										83487,
										83495
									],
									[
										83586,
										83594
									],
									[
										83658,
										83666
									],
									[
										83742,
										83750
									],
									[
										83821,
										83829
									],
									[
										84059,
										84067
									],
									[
										84417,
										84425
									],
									[
										84805,
										84813
									],
									[
										85235,
										85243
									],
									[
										85593,
										85601
									],
									[
										85987,
										85995
									],
									[
										86339,
										86347
									],
									[
										86374,
										86382
									],
									[
										86433,
										86441
									],
									[
										86477,
										86485
									],
									[
										86529,
										86537
									],
									[
										86586,
										86594
									],
									[
										86647,
										86655
									],
									[
										86864,
										86872
									],
									[
										86899,
										86907
									],
									[
										86959,
										86967
									],
									[
										87003,
										87011
									],
									[
										87074,
										87082
									],
									[
										87181,
										87189
									],
									[
										87269,
										87277
									],
									[
										87358,
										87366
									],
									[
										87391,
										87399
									],
									[
										87507,
										87515
									],
									[
										87756,
										87764
									],
									[
										87851,
										87859
									],
									[
										88262,
										88270
									],
									[
										88309,
										88317
									],
									[
										88368,
										88376
									],
									[
										88467,
										88475
									],
									[
										88545,
										88553
									],
									[
										88744,
										88752
									],
									[
										88861,
										88869
									],
									[
										89007,
										89015
									],
									[
										89141,
										89149
									],
									[
										89273,
										89281
									],
									[
										89391,
										89399
									],
									[
										89728,
										89736
									],
									[
										89851,
										89859
									],
									[
										90019,
										90027
									],
									[
										90156,
										90164
									],
									[
										90291,
										90299
									],
									[
										90436,
										90444
									],
									[
										90606,
										90614
									],
									[
										90885,
										90893
									],
									[
										91061,
										91069
									],
									[
										91162,
										91170
									],
									[
										91232,
										91240
									],
									[
										91305,
										91313
									],
									[
										91431,
										91439
									],
									[
										91528,
										91536
									],
									[
										91596,
										91604
									],
									[
										91671,
										91679
									],
									[
										91773,
										91781
									],
									[
										91891,
										91899
									],
									[
										92057,
										92065
									],
									[
										92241,
										92249
									],
									[
										92358,
										92366
									],
									[
										92507,
										92515
									],
									[
										92599,
										92607
									],
									[
										92717,
										92725
									],
									[
										92809,
										92817
									],
									[
										92917,
										92925
									],
									[
										93008,
										93016
									],
									[
										93338,
										93346
									],
									[
										93390,
										93398
									],
									[
										93471,
										93479
									],
									[
										93540,
										93548
									],
									[
										93612,
										93620
									],
									[
										93680,
										93688
									],
									[
										93919,
										93927
									],
									[
										94070,
										94078
									],
									[
										94105,
										94113
									],
									[
										94173,
										94181
									],
									[
										94248,
										94256
									],
									[
										94344,
										94352
									],
									[
										94414,
										94422
									],
									[
										94512,
										94520
									],
									[
										94639,
										94647
									],
									[
										94731,
										94739
									],
									[
										94849,
										94857
									],
									[
										94941,
										94949
									],
									[
										95049,
										95057
									],
									[
										95140,
										95148
									],
									[
										95246,
										95254
									],
									[
										95495,
										95503
									],
									[
										95834,
										95842
									],
									[
										96175,
										96183
									],
									[
										96475,
										96483
									],
									[
										96502,
										96510
									],
									[
										96557,
										96565
									],
									[
										96780,
										96788
									],
									[
										97132,
										97140
									],
									[
										97434,
										97442
									],
									[
										97831,
										97839
									],
									[
										97938,
										97946
									],
									[
										98053,
										98061
									],
									[
										98263,
										98271
									],
									[
										98445,
										98453
									],
									[
										98722,
										98730
									],
									[
										98749,
										98757
									],
									[
										98804,
										98812
									],
									[
										99135,
										99143
									],
									[
										99563,
										99571
									],
									[
										99960,
										99968
									],
									[
										100317,
										100325
									],
									[
										100341,
										100349
									],
									[
										100693,
										100701
									],
									[
										101084,
										101092
									],
									[
										101270,
										101278
									],
									[
										101637,
										101645
									],
									[
										101838,
										101846
									],
									[
										101869,
										101877
									],
									[
										102023,
										102031
									],
									[
										102139,
										102147
									],
									[
										102268,
										102276
									],
									[
										102299,
										102307
									],
									[
										102579,
										102587
									],
									[
										102901,
										102909
									],
									[
										103193,
										103201
									],
									[
										103538,
										103546
									],
									[
										103743,
										103751
									],
									[
										104122,
										104130
									],
									[
										104332,
										104340
									],
									[
										104363,
										104371
									],
									[
										104465,
										104473
									],
									[
										104496,
										104504
									],
									[
										104657,
										104665
									],
									[
										104775,
										104783
									],
									[
										105176,
										105184
									],
									[
										105574,
										105582
									],
									[
										105880,
										105888
									],
									[
										106235,
										106243
									],
									[
										106647,
										106655
									],
									[
										107191,
										107199
									],
									[
										107477,
										107485
									],
									[
										107745,
										107753
									],
									[
										108165,
										108173
									],
									[
										108657,
										108665
									],
									[
										109062,
										109070
									],
									[
										109354,
										109362
									],
									[
										109688,
										109696
									],
									[
										110041,
										110049
									],
									[
										110319,
										110327
									],
									[
										110618,
										110626
									],
									[
										110887,
										110895
									],
									[
										111191,
										111199
									],
									[
										111404,
										111412
									],
									[
										111686,
										111694
									],
									[
										112050,
										112058
									],
									[
										112303,
										112311
									],
									[
										112439,
										112447
									],
									[
										112503,
										112511
									],
									[
										112534,
										112542
									],
									[
										112645,
										112653
									],
									[
										112676,
										112684
									],
									[
										112855,
										112863
									],
									[
										112872,
										112880
									],
									[
										113024,
										113032
									],
									[
										113041,
										113049
									],
									[
										113204,
										113212
									],
									[
										113574,
										113582
									],
									[
										113942,
										113950
									],
									[
										113982,
										113990
									],
									[
										114034,
										114042
									],
									[
										114091,
										114099
									],
									[
										114451,
										114459
									],
									[
										114784,
										114792
									],
									[
										115041,
										115049
									],
									[
										115362,
										115370
									],
									[
										115657,
										115665
									],
									[
										115866,
										115874
									],
									[
										116125,
										116133
									],
									[
										116294,
										116302
									],
									[
										116706,
										116714
									],
									[
										116972,
										116980
									],
									[
										117332,
										117340
									],
									[
										117641,
										117649
									],
									[
										118236,
										118244
									],
									[
										118495,
										118503
									],
									[
										118521,
										118529
									],
									[
										118710,
										118718
									],
									[
										118729,
										118737
									],
									[
										119070,
										119078
									],
									[
										119349,
										119357
									],
									[
										119719,
										119727
									],
									[
										120196,
										120204
									],
									[
										120389,
										120397
									],
									[
										120812,
										120820
									],
									[
										121234,
										121242
									],
									[
										121589,
										121597
									],
									[
										121835,
										121843
									],
									[
										122156,
										122164
									],
									[
										122476,
										122484
									],
									[
										122515,
										122523
									],
									[
										122524,
										122532
									],
									[
										122544,
										122552
									],
									[
										122610,
										122618
									],
									[
										122772,
										122780
									],
									[
										122814,
										122822
									],
									[
										122834,
										122842
									],
									[
										122855,
										122863
									],
									[
										122981,
										122989
									],
									[
										123044,
										123052
									],
									[
										123064,
										123072
									],
									[
										123085,
										123093
									],
									[
										123207,
										123215
									],
									[
										123446,
										123454
									],
									[
										123516,
										123524
									],
									[
										123536,
										123544
									],
									[
										123557,
										123565
									],
									[
										123737,
										123745
									],
									[
										123907,
										123915
									],
									[
										124315,
										124323
									],
									[
										124558,
										124566
									],
									[
										124905,
										124913
									],
									[
										125301,
										125309
									],
									[
										125574,
										125582
									],
									[
										125796,
										125804
									],
									[
										126133,
										126141
									],
									[
										126681,
										126689
									],
									[
										126836,
										126844
									],
									[
										127171,
										127179
									],
									[
										127340,
										127348
									],
									[
										127601,
										127609
									],
									[
										127661,
										127669
									],
									[
										127699,
										127707
									],
									[
										127733,
										127741
									],
									[
										127865,
										127873
									],
									[
										128162,
										128170
									],
									[
										128476,
										128484
									],
									[
										128567,
										128575
									],
									[
										128862,
										128870
									],
									[
										129234,
										129242
									],
									[
										129662,
										129670
									],
									[
										129950,
										129958
									],
									[
										129990,
										129998
									],
									[
										130143,
										130151
									],
									[
										130183,
										130191
									],
									[
										130371,
										130379
									],
									[
										130447,
										130455
									],
									[
										130695,
										130703
									],
									[
										130857,
										130865
									],
									[
										131100,
										131108
									],
									[
										131138,
										131146
									],
									[
										131287,
										131295
									],
									[
										131325,
										131333
									],
									[
										131499,
										131507
									],
									[
										131571,
										131579
									],
									[
										131812,
										131820
									],
									[
										131963,
										131971
									],
									[
										132261,
										132269
									],
									[
										132374,
										132382
									],
									[
										132543,
										132551
									],
									[
										132571,
										132579
									],
									[
										132741,
										132749
									],
									[
										132884,
										132892
									],
									[
										132952,
										132960
									],
									[
										133095,
										133103
									],
									[
										133226,
										133234
									],
									[
										133270,
										133278
									],
									[
										133439,
										133447
									],
									[
										133613,
										133621
									],
									[
										133670,
										133678
									],
									[
										133847,
										133855
									],
									[
										134017,
										134025
									],
									[
										134171,
										134179
									],
									[
										134321,
										134329
									],
									[
										134465,
										134473
									],
									[
										134615,
										134623
									],
									[
										134764,
										134772
									],
									[
										134918,
										134926
									],
									[
										135077,
										135085
									],
									[
										135246,
										135254
									],
									[
										135406,
										135414
									],
									[
										135578,
										135586
									],
									[
										135729,
										135737
									],
									[
										135878,
										135886
									],
									[
										136029,
										136037
									],
									[
										136189,
										136197
									],
									[
										136339,
										136347
									],
									[
										136494,
										136502
									],
									[
										136642,
										136650
									],
									[
										136796,
										136804
									],
									[
										136964,
										136972
									],
									[
										137020,
										137028
									],
									[
										137185,
										137193
									],
									[
										137390,
										137398
									],
									[
										137565,
										137573
									],
									[
										137630,
										137638
									],
									[
										137798,
										137806
									],
									[
										137835,
										137843
									],
									[
										138008,
										138016
									],
									[
										138171,
										138179
									],
									[
										138202,
										138210
									],
									[
										138354,
										138362
									],
									[
										138385,
										138393
									],
									[
										138551,
										138559
									],
									[
										138581,
										138589
									],
									[
										138720,
										138728
									],
									[
										138750,
										138758
									],
									[
										138915,
										138923
									],
									[
										138945,
										138953
									],
									[
										139133,
										139141
									],
									[
										139163,
										139171
									],
									[
										139322,
										139330
									],
									[
										139545,
										139553
									],
									[
										139782,
										139790
									],
									[
										139862,
										139870
									],
									[
										139978,
										139986
									],
									[
										140062,
										140070
									],
									[
										140234,
										140242
									],
									[
										140318,
										140326
									],
									[
										140552,
										140560
									],
									[
										140640,
										140648
									],
									[
										140829,
										140837
									],
									[
										140912,
										140920
									],
									[
										141098,
										141106
									],
									[
										141291,
										141299
									],
									[
										141528,
										141536
									],
									[
										141873,
										141881
									],
									[
										141926,
										141934
									],
									[
										141972,
										141980
									],
									[
										142014,
										142022
									],
									[
										142099,
										142107
									],
									[
										142148,
										142156
									],
									[
										142259,
										142267
									],
									[
										142373,
										142381
									],
									[
										142484,
										142492
									],
									[
										142525,
										142533
									],
									[
										142653,
										142661
									],
									[
										142888,
										142896
									],
									[
										143116,
										143124
									],
									[
										143205,
										143213
									],
									[
										143224,
										143232
									],
									[
										143529,
										143537
									],
									[
										143618,
										143626
									],
									[
										143637,
										143645
									],
									[
										143941,
										143949
									],
									[
										144030,
										144038
									],
									[
										144049,
										144057
									],
									[
										144412,
										144420
									],
									[
										144894,
										144902
									],
									[
										145065,
										145073
									],
									[
										145140,
										145148
									],
									[
										145207,
										145215
									],
									[
										145298,
										145306
									],
									[
										145901,
										145909
									],
									[
										146371,
										146379
									],
									[
										146805,
										146813
									],
									[
										147252,
										147260
									],
									[
										147686,
										147694
									],
									[
										147908,
										147916
									],
									[
										148021,
										148029
									],
									[
										148159,
										148167
									],
									[
										148377,
										148385
									],
									[
										148661,
										148669
									],
									[
										148820,
										148828
									],
									[
										149145,
										149153
									],
									[
										149261,
										149269
									],
									[
										149481,
										149489
									],
									[
										149778,
										149786
									],
									[
										149849,
										149857
									],
									[
										150149,
										150157
									],
									[
										150206,
										150214
									],
									[
										150449,
										150457
									],
									[
										150659,
										150667
									],
									[
										150845,
										150853
									],
									[
										151171,
										151179
									],
									[
										151268,
										151276
									],
									[
										151409,
										151417
									],
									[
										151474,
										151482
									],
									[
										151690,
										151698
									],
									[
										152038,
										152046
									],
									[
										152192,
										152200
									],
									[
										152332,
										152340
									],
									[
										152443,
										152451
									],
									[
										152666,
										152674
									],
									[
										152790,
										152798
									],
									[
										153056,
										153064
									],
									[
										153202,
										153210
									],
									[
										153368,
										153376
									],
									[
										153528,
										153536
									],
									[
										153824,
										153832
									],
									[
										154162,
										154170
									],
									[
										154366,
										154374
									],
									[
										154699,
										154707
									],
									[
										155104,
										155112
									],
									[
										155396,
										155404
									],
									[
										155631,
										155639
									],
									[
										155734,
										155742
									],
									[
										155805,
										155813
									],
									[
										155876,
										155884
									],
									[
										155978,
										155986
									],
									[
										156234,
										156242
									],
									[
										156644,
										156652
									],
									[
										156864,
										156872
									],
									[
										157074,
										157082
									],
									[
										157234,
										157242
									],
									[
										157364,
										157372
									],
									[
										157658,
										157666
									],
									[
										158013,
										158021
									],
									[
										158265,
										158273
									],
									[
										158508,
										158516
									],
									[
										158942,
										158950
									],
									[
										159391,
										159399
									],
									[
										159759,
										159767
									],
									[
										160093,
										160101
									],
									[
										160542,
										160550
									],
									[
										160631,
										160639
									],
									[
										160693,
										160701
									],
									[
										160746,
										160754
									],
									[
										160885,
										160893
									],
									[
										161090,
										161098
									],
									[
										161438,
										161446
									],
									[
										161560,
										161568
									],
									[
										161808,
										161816
									],
									[
										162067,
										162075
									],
									[
										162177,
										162185
									],
									[
										162430,
										162438
									],
									[
										162459,
										162467
									],
									[
										162750,
										162758
									],
									[
										162840,
										162848
									],
									[
										162904,
										162912
									],
									[
										162958,
										162966
									],
									[
										163099,
										163107
									],
									[
										163330,
										163338
									],
									[
										163820,
										163828
									],
									[
										164170,
										164178
									],
									[
										164257,
										164265
									],
									[
										164547,
										164555
									],
									[
										164613,
										164621
									],
									[
										164739,
										164747
									],
									[
										164783,
										164791
									],
									[
										164845,
										164853
									],
									[
										164899,
										164907
									],
									[
										165008,
										165016
									],
									[
										165282,
										165290
									],
									[
										165340,
										165348
									],
									[
										165375,
										165383
									],
									[
										165481,
										165489
									],
									[
										165666,
										165674
									],
									[
										165783,
										165791
									],
									[
										165957,
										165965
									],
									[
										166069,
										166077
									],
									[
										166244,
										166252
									],
									[
										166493,
										166501
									],
									[
										166561,
										166569
									],
									[
										166578,
										166586
									],
									[
										166827,
										166835
									],
									[
										166895,
										166903
									],
									[
										166912,
										166920
									],
									[
										167084,
										167092
									],
									[
										167332,
										167340
									],
									[
										167390,
										167398
									],
									[
										167425,
										167433
									],
									[
										167527,
										167535
									],
									[
										167712,
										167720
									],
									[
										167941,
										167949
									],
									[
										168012,
										168020
									],
									[
										168091,
										168099
									],
									[
										168141,
										168149
									],
									[
										168378,
										168386
									],
									[
										168633,
										168641
									],
									[
										168799,
										168807
									],
									[
										168869,
										168877
									],
									[
										168983,
										168991
									],
									[
										169072,
										169080
									],
									[
										169279,
										169287
									],
									[
										169313,
										169321
									],
									[
										169433,
										169441
									],
									[
										169449,
										169457
									],
									[
										169579,
										169587
									],
									[
										169609,
										169617
									],
									[
										169675,
										169683
									],
									[
										169751,
										169759
									],
									[
										169784,
										169792
									],
									[
										169897,
										169905
									],
									[
										169908,
										169916
									],
									[
										170214,
										170222
									],
									[
										170280,
										170288
									],
									[
										170492,
										170500
									],
									[
										170576,
										170584
									],
									[
										170669,
										170677
									],
									[
										170787,
										170795
									],
									[
										170819,
										170827
									],
									[
										170902,
										170910
									],
									[
										170975,
										170983
									],
									[
										171055,
										171063
									],
									[
										171093,
										171101
									],
									[
										171185,
										171193
									],
									[
										171248,
										171256
									],
									[
										171358,
										171366
									],
									[
										171678,
										171686
									],
									[
										171793,
										171801
									],
									[
										171950,
										171958
									],
									[
										172067,
										172075
									],
									[
										172110,
										172118
									],
									[
										172316,
										172324
									],
									[
										172329,
										172337
									],
									[
										172484,
										172492
									],
									[
										172720,
										172728
									],
									[
										172870,
										172878
									],
									[
										172960,
										172968
									],
									[
										172989,
										172997
									],
									[
										173177,
										173185
									],
									[
										173264,
										173272
									],
									[
										173438,
										173446
									],
									[
										173497,
										173505
									],
									[
										173843,
										173851
									],
									[
										174156,
										174164
									],
									[
										174587,
										174595
									],
									[
										174758,
										174766
									],
									[
										175085,
										175093
									],
									[
										175463,
										175471
									],
									[
										175549,
										175557
									],
									[
										175773,
										175781
									],
									[
										176112,
										176120
									],
									[
										176297,
										176305
									],
									[
										176649,
										176657
									],
									[
										176724,
										176732
									],
									[
										176963,
										176971
									],
									[
										177049,
										177057
									],
									[
										177324,
										177332
									],
									[
										177410,
										177418
									],
									[
										177673,
										177681
									],
									[
										178010,
										178018
									],
									[
										178210,
										178218
									],
									[
										178436,
										178444
									],
									[
										178642,
										178650
									],
									[
										178882,
										178890
									],
									[
										179097,
										179105
									],
									[
										179566,
										179574
									],
									[
										179652,
										179660
									],
									[
										179871,
										179879
									],
									[
										179957,
										179965
									],
									[
										180189,
										180197
									],
									[
										180448,
										180456
									],
									[
										180807,
										180815
									],
									[
										181026,
										181034
									],
									[
										181246,
										181254
									],
									[
										181459,
										181467
									],
									[
										181678,
										181686
									],
									[
										181902,
										181910
									],
									[
										182125,
										182133
									],
									[
										182348,
										182356
									],
									[
										182678,
										182686
									],
									[
										182921,
										182929
									],
									[
										182999,
										183007
									],
									[
										183227,
										183235
									],
									[
										183313,
										183321
									],
									[
										183464,
										183472
									],
									[
										183542,
										183550
									],
									[
										183679,
										183687
									],
									[
										183871,
										183879
									],
									[
										184086,
										184094
									],
									[
										184305,
										184313
									],
									[
										184624,
										184632
									],
									[
										184848,
										184856
									],
									[
										184959,
										184967
									],
									[
										185040,
										185048
									],
									[
										185102,
										185110
									],
									[
										185208,
										185216
									],
									[
										185278,
										185286
									],
									[
										185434,
										185442
									],
									[
										185536,
										185544
									],
									[
										185590,
										185598
									],
									[
										185684,
										185692
									],
									[
										186034,
										186042
									],
									[
										186529,
										186537
									],
									[
										186578,
										186586
									],
									[
										186659,
										186667
									],
									[
										186721,
										186729
									],
									[
										186817,
										186825
									],
									[
										186940,
										186948
									],
									[
										187057,
										187065
									],
									[
										187142,
										187150
									],
									[
										187195,
										187203
									],
									[
										187288,
										187296
									],
									[
										187342,
										187350
									],
									[
										187390,
										187398
									],
									[
										187810,
										187818
									],
									[
										187920,
										187928
									],
									[
										188330,
										188338
									],
									[
										188867,
										188875
									],
									[
										188907,
										188915
									],
									[
										188978,
										188986
									],
									[
										189018,
										189026
									],
									[
										189371,
										189379
									],
									[
										189802,
										189816
									],
									[
										190081,
										190095
									],
									[
										190315,
										190329
									],
									[
										190559,
										190573
									],
									[
										190932,
										190941
									],
									[
										191191,
										191200
									],
									[
										191438,
										191447
									],
									[
										191525,
										191534
									],
									[
										191675,
										191684
									],
									[
										192015,
										192024
									],
									[
										192198,
										192207
									],
									[
										192397,
										192406
									],
									[
										192658,
										192667
									],
									[
										192853,
										192862
									],
									[
										193014,
										193023
									],
									[
										193285,
										193294
									],
									[
										193522,
										193531
									],
									[
										193731,
										193740
									],
									[
										193929,
										193938
									],
									[
										194155,
										194164
									],
									[
										194382,
										194391
									],
									[
										194634,
										194643
									],
									[
										194850,
										194859
									],
									[
										195093,
										195102
									],
									[
										195340,
										195349
									],
									[
										195568,
										195577
									],
									[
										195781,
										195790
									],
									[
										195931,
										195940
									],
									[
										196210,
										196219
									],
									[
										196500,
										196509
									],
									[
										196772,
										196781
									],
									[
										196988,
										196997
									],
									[
										197219,
										197228
									],
									[
										197544,
										197553
									],
									[
										197798,
										197807
									],
									[
										198014,
										198023
									],
									[
										198327,
										198336
									],
									[
										198535,
										198544
									],
									[
										198779,
										198788
									],
									[
										198919,
										198928
									],
									[
										199151,
										199160
									],
									[
										199403,
										199412
									],
									[
										199632,
										199641
									],
									[
										199875,
										199884
									],
									[
										200137,
										200146
									],
									[
										200365,
										200374
									],
									[
										200626,
										200635
									],
									[
										200816,
										200825
									],
									[
										201211,
										201220
									],
									[
										201432,
										201441
									],
									[
										201775,
										201784
									],
									[
										202110,
										202119
									],
									[
										202340,
										202349
									],
									[
										202579,
										202588
									],
									[
										202822,
										202831
									],
									[
										203097,
										203106
									],
									[
										203352,
										203361
									],
									[
										203684,
										203693
									],
									[
										203962,
										203971
									],
									[
										204173,
										204182
									],
									[
										204448,
										204457
									],
									[
										204661,
										204670
									],
									[
										204901,
										204910
									],
									[
										205145,
										205154
									],
									[
										205385,
										205394
									],
									[
										205573,
										205582
									],
									[
										205825,
										205834
									],
									[
										206131,
										206140
									],
									[
										206386,
										206395
									],
									[
										206615,
										206624
									],
									[
										206991,
										207000
									],
									[
										207301,
										207310
									],
									[
										207420,
										207429
									],
									[
										207858,
										207867
									],
									[
										208102,
										208111
									],
									[
										208280,
										208289
									],
									[
										208550,
										208559
									],
									[
										208813,
										208822
									],
									[
										209142,
										209151
									],
									[
										209524,
										209533
									],
									[
										209775,
										209784
									],
									[
										210036,
										210045
									],
									[
										210384,
										210393
									],
									[
										210686,
										210695
									],
									[
										210948,
										210957
									],
									[
										211210,
										211219
									],
									[
										211473,
										211482
									],
									[
										211628,
										211637
									],
									[
										211779,
										211788
									],
									[
										211918,
										211927
									],
									[
										212167,
										212176
									],
									[
										212491,
										212500
									],
									[
										212608,
										212617
									],
									[
										212744,
										212753
									],
									[
										212861,
										212870
									],
									[
										213106,
										213115
									],
									[
										213260,
										213269
									],
									[
										213491,
										213500
									],
									[
										213654,
										213663
									],
									[
										213884,
										213893
									],
									[
										214172,
										214181
									],
									[
										214401,
										214410
									],
									[
										214625,
										214634
									],
									[
										214866,
										214875
									],
									[
										214969,
										214978
									],
									[
										215217,
										215226
									],
									[
										215449,
										215458
									],
									[
										215707,
										215716
									],
									[
										215824,
										215833
									],
									[
										216092,
										216101
									],
									[
										216406,
										216415
									],
									[
										216629,
										216638
									],
									[
										216851,
										216860
									],
									[
										216958,
										216967
									],
									[
										217060,
										217069
									],
									[
										217166,
										217175
									],
									[
										217259,
										217268
									],
									[
										217383,
										217392
									],
									[
										217624,
										217633
									],
									[
										217878,
										217887
									],
									[
										218173,
										218182
									],
									[
										218417,
										218426
									],
									[
										218675,
										218684
									],
									[
										218965,
										218974
									],
									[
										219197,
										219206
									],
									[
										219468,
										219477
									],
									[
										219839,
										219848
									],
									[
										220117,
										220126
									],
									[
										220619,
										220627
									],
									[
										220673,
										220681
									],
									[
										220825,
										220833
									],
									[
										220962,
										220970
									],
									[
										221017,
										221025
									],
									[
										221237,
										221245
									],
									[
										221438,
										221446
									],
									[
										221640,
										221648
									],
									[
										221840,
										221848
									],
									[
										222055,
										222063
									],
									[
										222254,
										222262
									],
									[
										222455,
										222463
									],
									[
										222668,
										222676
									],
									[
										222874,
										222882
									],
									[
										223063,
										223071
									],
									[
										223283,
										223291
									],
									[
										223496,
										223504
									],
									[
										223932,
										223935
									],
									[
										224168,
										224171
									],
									[
										224275,
										224278
									],
									[
										224327,
										224330
									],
									[
										224494,
										224497
									],
									[
										224567,
										224570
									],
									[
										224587,
										224590
									],
									[
										224591,
										224594
									],
									[
										224616,
										224619
									],
									[
										224641,
										224644
									],
									[
										224880,
										224883
									],
									[
										225104,
										225107
									],
									[
										225433,
										225436
									],
									[
										225733,
										225736
									],
									[
										225843,
										225846
									],
									[
										225918,
										225921
									],
									[
										226064,
										226067
									],
									[
										226182,
										226185
									],
									[
										226299,
										226302
									],
									[
										226529,
										226532
									],
									[
										226716,
										226719
									],
									[
										226773,
										226776
									],
									[
										226903,
										226906
									],
									[
										227054,
										227057
									],
									[
										227191,
										227194
									],
									[
										227271,
										227274
									],
									[
										227397,
										227400
									],
									[
										227510,
										227513
									],
									[
										227563,
										227566
									],
									[
										227801,
										227804
									],
									[
										228024,
										228027
									],
									[
										228105,
										228108
									],
									[
										228203,
										228206
									],
									[
										228343,
										228346
									],
									[
										228456,
										228459
									],
									[
										228509,
										228512
									],
									[
										228729,
										228732
									],
									[
										228971,
										228974
									],
									[
										229208,
										229211
									],
									[
										229385,
										229388
									],
									[
										229565,
										229568
									],
									[
										229621,
										229624
									],
									[
										229692,
										229695
									],
									[
										229834,
										229837
									],
									[
										229991,
										229994
									],
									[
										230133,
										230136
									],
									[
										230278,
										230281
									],
									[
										230388,
										230391
									],
									[
										230477,
										230480
									],
									[
										230686,
										230689
									],
									[
										230861,
										230864
									],
									[
										230961,
										230964
									],
									[
										231058,
										231061
									],
									[
										231108,
										231111
									],
									[
										231259,
										231262
									],
									[
										231372,
										231375
									],
									[
										231501,
										231504
									],
									[
										231544,
										231547
									],
									[
										231619,
										231622
									],
									[
										231863,
										231866
									],
									[
										231969,
										231972
									],
									[
										232006,
										232009
									],
									[
										232115,
										232118
									],
									[
										232244,
										232247
									],
									[
										232375,
										232378
									],
									[
										232451,
										232454
									],
									[
										232575,
										232578
									],
									[
										232676,
										232679
									],
									[
										232809,
										232812
									],
									[
										232938,
										232941
									],
									[
										232974,
										232977
									],
									[
										233036,
										233039
									],
									[
										233157,
										233160
									],
									[
										233250,
										233253
									],
									[
										233377,
										233380
									],
									[
										233473,
										233476
									],
									[
										233579,
										233582
									],
									[
										233633,
										233636
									],
									[
										233777,
										233780
									],
									[
										233886,
										233889
									],
									[
										234092,
										234095
									],
									[
										234154,
										234157
									],
									[
										234210,
										234213
									],
									[
										234325,
										234328
									],
									[
										234425,
										234428
									],
									[
										234482,
										234485
									],
									[
										234625,
										234628
									],
									[
										234808,
										234811
									],
									[
										234857,
										234860
									],
									[
										235000,
										235003
									],
									[
										235203,
										235206
									],
									[
										235349,
										235352
									],
									[
										235444,
										235447
									],
									[
										235558,
										235561
									],
									[
										235660,
										235663
									],
									[
										235733,
										235736
									],
									[
										235883,
										235886
									],
									[
										235928,
										235931
									],
									[
										236053,
										236056
									],
									[
										236119,
										236122
									],
									[
										236219,
										236222
									],
									[
										236335,
										236338
									],
									[
										236470,
										236473
									],
									[
										236521,
										236524
									],
									[
										236597,
										236600
									],
									[
										236649,
										236652
									],
									[
										236726,
										236729
									],
									[
										236788,
										236791
									],
									[
										236921,
										236924
									],
									[
										236980,
										236983
									],
									[
										237110,
										237113
									],
									[
										237163,
										237166
									],
									[
										237241,
										237244
									],
									[
										237297,
										237300
									],
									[
										237378,
										237381
									],
									[
										237625,
										237628
									],
									[
										237725,
										237728
									],
									[
										237840,
										237843
									],
									[
										237940,
										237943
									],
									[
										238051,
										238054
									],
									[
										238102,
										238105
									],
									[
										238168,
										238171
									],
									[
										238219,
										238222
									],
									[
										238298,
										238301
									],
									[
										238349,
										238352
									],
									[
										238429,
										238432
									],
									[
										238480,
										238483
									],
									[
										238566,
										238569
									],
									[
										238617,
										238620
									],
									[
										238705,
										238708
									],
									[
										238758,
										238761
									],
									[
										238845,
										238848
									],
									[
										238956,
										238959
									],
									[
										239040,
										239043
									],
									[
										239112,
										239115
									],
									[
										239182,
										239185
									],
									[
										239344,
										239347
									],
									[
										239388,
										239391
									],
									[
										239594,
										239597
									],
									[
										239645,
										239648
									],
									[
										239765,
										239768
									],
									[
										239816,
										239819
									],
									[
										239859,
										239862
									],
									[
										239962,
										239965
									],
									[
										240049,
										240052
									],
									[
										240100,
										240103
									],
									[
										240185,
										240188
									],
									[
										240236,
										240239
									],
									[
										240308,
										240311
									],
									[
										240408,
										240411
									],
									[
										240446,
										240449
									],
									[
										240503,
										240506
									],
									[
										240629,
										240632
									],
									[
										240716,
										240719
									],
									[
										240771,
										240774
									],
									[
										240878,
										240881
									],
									[
										241018,
										241021
									],
									[
										241177,
										241180
									],
									[
										241338,
										241341
									],
									[
										241442,
										241445
									],
									[
										241563,
										241566
									],
									[
										241639,
										241642
									],
									[
										241710,
										241713
									],
									[
										241829,
										241832
									],
									[
										241906,
										241909
									],
									[
										241979,
										241982
									],
									[
										242100,
										242103
									],
									[
										242178,
										242181
									],
									[
										242252,
										242255
									],
									[
										242357,
										242360
									],
									[
										242478,
										242481
									],
									[
										242554,
										242557
									],
									[
										242628,
										242631
									],
									[
										242732,
										242735
									],
									[
										242841,
										242844
									],
									[
										242982,
										242985
									],
									[
										243223,
										243226
									],
									[
										243462,
										243465
									],
									[
										243741,
										243744
									],
									[
										243783,
										243786
									],
									[
										244007,
										244010
									],
									[
										244206,
										244209
									],
									[
										244338,
										244341
									],
									[
										244467,
										244470
									],
									[
										244523,
										244526
									],
									[
										244557,
										244560
									],
									[
										244688,
										244691
									],
									[
										244905,
										244908
									],
									[
										245065,
										245068
									],
									[
										245232,
										245235
									],
									[
										245396,
										245399
									],
									[
										245591,
										245594
									],
									[
										245756,
										245759
									],
									[
										245962,
										245965
									],
									[
										246141,
										246144
									],
									[
										246332,
										246335
									],
									[
										246548,
										246551
									],
									[
										246725,
										246728
									],
									[
										246847,
										246850
									],
									[
										246985,
										246988
									],
									[
										247206,
										247209
									],
									[
										247410,
										247413
									],
									[
										247424,
										247427
									],
									[
										247550,
										247553
									],
									[
										247626,
										247629
									],
									[
										247660,
										247663
									],
									[
										247692,
										247695
									],
									[
										247733,
										247736
									],
									[
										247822,
										247825
									],
									[
										247965,
										247968
									],
									[
										248091,
										248094
									],
									[
										248123,
										248126
									],
									[
										248288,
										248291
									],
									[
										248431,
										248434
									],
									[
										248603,
										248606
									],
									[
										248652,
										248655
									],
									[
										248686,
										248689
									],
									[
										248759,
										248762
									],
									[
										248820,
										248823
									],
									[
										249003,
										249006
									],
									[
										249123,
										249126
									],
									[
										249301,
										249304
									],
									[
										249468,
										249471
									],
									[
										249527,
										249530
									],
									[
										249705,
										249708
									],
									[
										249884,
										249887
									],
									[
										249994,
										249997
									],
									[
										250065,
										250068
									],
									[
										250166,
										250169
									],
									[
										250222,
										250225
									],
									[
										250234,
										250237
									],
									[
										250291,
										250294
									],
									[
										250303,
										250306
									],
									[
										250404,
										250407
									],
									[
										250475,
										250478
									],
									[
										250596,
										250599
									],
									[
										250725,
										250728
									],
									[
										250865,
										250868
									],
									[
										250971,
										250974
									],
									[
										250999,
										251002
									],
									[
										251135,
										251138
									],
									[
										251155,
										251158
									],
									[
										251270,
										251273
									],
									[
										251436,
										251439
									],
									[
										251593,
										251596
									],
									[
										251746,
										251749
									],
									[
										251881,
										251884
									],
									[
										252061,
										252064
									],
									[
										252181,
										252184
									],
									[
										252285,
										252288
									],
									[
										252301,
										252304
									],
									[
										252422,
										252425
									],
									[
										252509,
										252512
									],
									[
										252604,
										252607
									],
									[
										252721,
										252724
									],
									[
										252852,
										252855
									],
									[
										253012,
										253015
									],
									[
										253058,
										253061
									],
									[
										253098,
										253101
									],
									[
										253190,
										253193
									],
									[
										253221,
										253224
									],
									[
										253263,
										253266
									],
									[
										253323,
										253326
									],
									[
										253355,
										253358
									],
									[
										253495,
										253498
									],
									[
										253539,
										253542
									],
									[
										253618,
										253621
									],
									[
										253651,
										253654
									],
									[
										253685,
										253688
									],
									[
										253712,
										253715
									],
									[
										253744,
										253747
									],
									[
										253894,
										253897
									],
									[
										254018,
										254021
									],
									[
										254052,
										254055
									],
									[
										254109,
										254112
									],
									[
										254175,
										254178
									],
									[
										254309,
										254312
									],
									[
										254383,
										254386
									],
									[
										254436,
										254439
									],
									[
										254504,
										254507
									],
									[
										254597,
										254600
									],
									[
										254672,
										254675
									],
									[
										254856,
										254859
									],
									[
										254919,
										254922
									],
									[
										254955,
										254958
									],
									[
										255021,
										255024
									],
									[
										255102,
										255105
									],
									[
										255272,
										255275
									],
									[
										255326,
										255329
									],
									[
										255410,
										255413
									],
									[
										255444,
										255447
									],
									[
										255532,
										255535
									],
									[
										255690,
										255693
									],
									[
										255729,
										255732
									],
									[
										255877,
										255880
									],
									[
										255904,
										255907
									],
									[
										255982,
										255985
									],
									[
										256032,
										256035
									],
									[
										256143,
										256146
									],
									[
										256204,
										256207
									],
									[
										256324,
										256327
									],
									[
										256376,
										256379
									],
									[
										256506,
										256509
									],
									[
										256534,
										256537
									],
									[
										256571,
										256574
									],
									[
										256633,
										256636
									],
									[
										256672,
										256675
									],
									[
										256921,
										256924
									],
									[
										257066,
										257069
									],
									[
										257224,
										257227
									],
									[
										257235,
										257238
									],
									[
										257371,
										257374
									],
									[
										257392,
										257395
									],
									[
										257401,
										257404
									],
									[
										257452,
										257455
									],
									[
										257719,
										257722
									],
									[
										257724,
										257727
									],
									[
										257838,
										257841
									],
									[
										257849,
										257852
									],
									[
										257945,
										257948
									],
									[
										258027,
										258030
									],
									[
										258099,
										258102
									],
									[
										258163,
										258166
									],
									[
										258370,
										258373
									],
									[
										258470,
										258473
									],
									[
										258560,
										258563
									],
									[
										258677,
										258680
									],
									[
										258940,
										258943
									],
									[
										259060,
										259063
									],
									[
										259171,
										259174
									],
									[
										259257,
										259260
									],
									[
										259288,
										259291
									],
									[
										259436,
										259439
									],
									[
										259549,
										259552
									],
									[
										259815,
										259818
									],
									[
										259963,
										259966
									],
									[
										260106,
										260109
									],
									[
										260323,
										260326
									],
									[
										260627,
										260630
									],
									[
										260932,
										260935
									],
									[
										261073,
										261076
									],
									[
										261181,
										261184
									],
									[
										261203,
										261206
									],
									[
										261471,
										261474
									],
									[
										262047,
										262050
									],
									[
										262236,
										262239
									],
									[
										262812,
										262815
									],
									[
										263117,
										263120
									],
									[
										263447,
										263450
									],
									[
										263940,
										263943
									],
									[
										264127,
										264130
									],
									[
										264153,
										264156
									],
									[
										264333,
										264336
									],
									[
										264409,
										264412
									],
									[
										264551,
										264554
									],
									[
										264668,
										264671
									],
									[
										264720,
										264723
									],
									[
										264826,
										264829
									],
									[
										265022,
										265025
									],
									[
										265093,
										265096
									],
									[
										265145,
										265148
									],
									[
										265339,
										265342
									],
									[
										265424,
										265427
									],
									[
										265470,
										265473
									],
									[
										265669,
										265672
									],
									[
										265849,
										265852
									],
									[
										266029,
										266032
									],
									[
										266209,
										266212
									],
									[
										266389,
										266392
									],
									[
										266569,
										266572
									],
									[
										266749,
										266752
									],
									[
										266929,
										266932
									],
									[
										267109,
										267112
									],
									[
										267265,
										267268
									],
									[
										267347,
										267350
									],
									[
										267359,
										267362
									],
									[
										267438,
										267441
									],
									[
										267472,
										267475
									],
									[
										267540,
										267543
									],
									[
										267661,
										267664
									],
									[
										267949,
										267952
									],
									[
										268119,
										268122
									],
									[
										268310,
										268313
									],
									[
										268494,
										268497
									],
									[
										268871,
										268874
									],
									[
										269150,
										269153
									],
									[
										269508,
										269511
									],
									[
										269811,
										269814
									],
									[
										269988,
										269991
									],
									[
										270321,
										270324
									],
									[
										270503,
										270506
									],
									[
										270824,
										270827
									],
									[
										271051,
										271054
									],
									[
										271252,
										271255
									],
									[
										271479,
										271482
									],
									[
										271692,
										271695
									],
									[
										271874,
										271877
									],
									[
										272174,
										272177
									],
									[
										272392,
										272395
									],
									[
										272793,
										272796
									],
									[
										273236,
										273239
									],
									[
										273436,
										273439
									],
									[
										273584,
										273587
									],
									[
										273748,
										273751
									],
									[
										273813,
										273816
									],
									[
										273956,
										273959
									],
									[
										274096,
										274099
									],
									[
										274222,
										274225
									],
									[
										274380,
										274383
									],
									[
										274563,
										274566
									],
									[
										274733,
										274736
									],
									[
										274778,
										274781
									],
									[
										274948,
										274951
									],
									[
										275126,
										275129
									],
									[
										275349,
										275352
									],
									[
										275548,
										275551
									],
									[
										275745,
										275748
									],
									[
										275946,
										275949
									],
									[
										276175,
										276178
									],
									[
										276370,
										276373
									],
									[
										276541,
										276544
									],
									[
										276732,
										276735
									],
									[
										276903,
										276906
									],
									[
										277199,
										277202
									],
									[
										277397,
										277400
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								273814,
								273814
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 16,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 120314.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				0,
				1,
				1,
				2
			],
			[
				0,
				2,
				1,
				3
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			0.33,
			0.66,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"uniluaen",
				"App/Scripts/submodule/Unity3DLua/uniLua/U3DLua/UniLuaEngine.cs"
			],
			[
				"luaap",
				"App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaAPI.cs"
			],
			[
				"",
				"App/Scripts/lua/Main.lua"
			],
			[
				"spawns",
				"App/Scripts/submodule/Unity3DLua/NLua/Example/SpawnSphere.cs"
			],
			[
				"testbeh",
				"App/Scripts/submodule/Unity3DLua/NLua/Example/TestBehaviour.cs"
			],
			[
				"lua",
				"App/Scripts/submodule/Unity3DLua/NLua/NLua/Lua.cs"
			],
			[
				"luabase",
				"App/Scripts/submodule/Unity3DLua/NLua/NLua/LuaBase.cs"
			],
			[
				"main.lu",
				"App/Scripts/lua/Main.lua"
			],
			[
				"titles",
				"App/Scripts/lua/Scene/TitleScene.lua"
			],
			[
				"titlescene.l",
				"App/Scripts/lua/Scene/TitleScene.lua"
			],
			[
				"main.lua",
				"App/Scripts/lua/Main.lua"
			],
			[
				"lua.cs",
				"App/Scripts/submodule/Unity3DLua/NLua/NLua/Lua.cs"
			],
			[
				"mainl",
				"App/Scripts/lua/Main.lua"
			],
			[
				"example",
				"App/Scripts/submodule/Unity3DLua/NLua/Example/ExampleBehaviour.cs"
			],
			[
				"luastate",
				"App/Scripts/submodule/Unity3DLua/NLua/KeraLua/LuaState.cs"
			],
			[
				"my",
				"App/Scripts/Manager/MyApplaction.cs"
			],
			[
				"uiman",
				"App/Scripts/Manager/UIManager.cs"
			],
			[
				"examplebe",
				"App/Scripts/submodule/Unity3DLua/NLua/Example/ExampleBehaviour.cs"
			],
			[
				"myap",
				"App/Scripts/Manager/MyApplaction.cs"
			],
			[
				"uniwa",
				"App/Scripts/submodule/Unity3DLua/uniLua/U3DLua/UniLuaWrap.cs"
			],
			[
				"unitluaw",
				"App/Scripts/submodule/Unity3DLua/uniLua/U3DLua/UniLuaWrap.cs"
			],
			[
				"luabaselib",
				"App/Scripts/submodule/Unity3DLua/uniLua/UniLua/LuaBaseLib.cs"
			],
			[
				"uniluaw",
				"App/Scripts/submodule/Unity3DLua/uniLua/U3DLua/UniLuaWrap.cs"
			],
			[
				"luawrap",
				"App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/LuaWrap.cs"
			],
			[
				"luasc",
				"App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/Base/LuaScriptMgr.cs"
			],
			[
				"objectw",
				"App/Scripts/submodule/Unity3DLua/uniLua/toLua/Source/LuaWrap/Base/ObjectWrap.cs"
			],
			[
				"luaddl",
				"MyPlugins/uniLua/U3DLua/uLua/Core/LuaDLL.cs"
			],
			[
				"luastat",
				"MyPlugins/uniLua/UniLua/LuaState.cs"
			],
			[
				"luascrip",
				"MyPlugins/uniLua/U3DLua/Source/Base/LuaScriptMgr.cs"
			],
			[
				"util",
				"MyPlugins/uniLua/UniLua/Util.cs"
			],
			[
				"luafun",
				"MyPlugins/uLua/Core/LuaFunction.cs"
			],
			[
				"mya",
				"App/Scripts/Manager/MyApplaction.cs"
			],
			[
				"titlesc",
				"App/Scripts/lua/Scene/TitleScene.lua"
			],
			[
				"luastatic",
				"MyPlugins/uLua/Core/LuaStatic.cs"
			],
			[
				"csing",
				"App/Scripts/submodule/Unity3DUtil/CSingleton.cs"
			],
			[
				"gesture",
				"Plugins/InputTouches/Gesture.cs"
			],
			[
				"common",
				"Scripts/UI/UI_Common.cs"
			],
			[
				"pvpmodel",
				"App_China/Script/Network/Model/PVPModel.cs"
			],
			[
				"chall",
				"App_China/Script/UI/Challenge_List_Item.cs"
			],
			[
				"checkre",
				"Scripts/Network/Model/CheckRegisterModel.cs"
			],
			[
				"title",
				"Scripts/UI/UI_Title.cs"
			],
			[
				"userinfom",
				"Scripts/Network/Model/UserInfoModel.cs"
			],
			[
				"playermo",
				"Scripts/Network/Model/PlayerModel.cs"
			],
			[
				"chal",
				"App_China/Script/UI/Challenge_List.cs"
			],
			[
				"field",
				"Scripts/System/FieldCamera.cs"
			],
			[
				"pvpmang",
				"App_China/Script/Manager/PvpManager.cs"
			],
			[
				"usercontrollerbase",
				"Scripts/Controller/UserControllerBase.cs"
			],
			[
				"fieldcam",
				"Scripts/System/FieldCamera.cs"
			],
			[
				"fieldc",
				"Scripts/System/FieldCamera.cs"
			],
			[
				"ui_inn",
				"Scripts/UI/UI_Inn.cs"
			],
			[
				"unitmo",
				"Scripts/Network/Model/UnitModel.cs"
			],
			[
				"global",
				"Scripts/Manager/GlobalDataManager.cs"
			],
			[
				"playermod",
				"Scripts/Network/Model/PlayerModel.cs"
			],
			[
				"unitse",
				"Scripts/UI/UI_UnitSelectList.cs"
			],
			[
				"uime",
				"Scripts/UI/UI_Menu.cs"
			],
			[
				"uidownload",
				"App_China/Script/UI/UI_DownLoad_All.cs"
			],
			[
				"deckmo",
				"Scripts/Network/Model/DeckModel.cs"
			],
			[
				"stagepl",
				"Scripts/State/StageManagerStatePlaying.cs"
			],
			[
				"uiwo",
				"Scripts/UI/UI_World.cs"
			],
			[
				"downloadlistmodel",
				"App_China/Script/Network/Model/DownloadListModel.cs"
			],
			[
				"downloadre",
				"App_China/Script/UI/UI_Download_reward.cs"
			],
			[
				"uiarea",
				"Scripts/UI/Area/UI_Area.cs"
			],
			[
				"uiwor",
				"Scripts/UI/UI_World.cs"
			],
			[
				"networkman",
				"Scripts/Network/NetworkManager.cs"
			],
			[
				"down",
				"App_China/Script/Network/Model/DownloadFinishModel.cs"
			],
			[
				"rewo",
				"App_China/Script/UI/UI_Download_reward_ok.cs"
			],
			[
				"stagepla",
				"Scripts/State/StageManagerStatePlaying.cs"
			],
			[
				"getdre",
				"Scripts/Network/Model/QuestGetDreamModel.cs"
			],
			[
				"questgeneratemodel",
				"Scripts/Network/Model/QuestGenerateModel.cs"
			],
			[
				"uidownloadall",
				"App_China/Script/UI/UI_DownLoad_All.cs"
			],
			[
				"uirew",
				"App_China/Script/UI/UI_Download_reward.cs"
			],
			[
				"playerstat",
				"Scripts/Character/State/PlayerStateAction.cs"
			],
			[
				"stagpl",
				"Scripts/State/StageManagerStatePlaying.cs"
			],
			[
				"ingamem",
				"Scripts/Manager/InGameManager.cs"
			],
			[
				"usercontroller",
				"Scripts/Controller/UserController.cs"
			],
			[
				"player",
				"Scripts/Character/Player.cs"
			],
			[
				"generate",
				"Scripts/Network/Model/QuestGenerateModel.cs"
			],
			[
				"gamed",
				"App_China/Script/Manager/GAME_DEFINE.cs"
			],
			[
				"men",
				"Scripts/UI/UI_Menu.cs"
			],
			[
				"completeq",
				"AI System/Scripts/Actions/Quest/CompleteQuest.cs"
			],
			[
				"dreammo",
				"Scripts/Network/Model/QuestGetDreamModel.cs"
			],
			[
				"downloadl",
				"App_China/Script/Network/Model/DownloadListModel.cs"
			],
			[
				"compl",
				"AI System/Scripts/Actions/Quest/CompleteQuest.cs"
			],
			[
				"ui_wor",
				"Scripts/UI/UI_World.cs"
			],
			[
				"netwo",
				"Scripts/Network/NetworkManager_Asset.cs"
			],
			[
				"networkmana",
				"Scripts/Network/NetworkManager_Asset.cs"
			],
			[
				"assetbundleversionmodel",
				"Scripts/Network/Model/AssetBundleVersionModel.cs"
			],
			[
				"assetmo",
				"Scripts/Network/Model/AssetBundleVersionModel.cs"
			],
			[
				"inggamema",
				"Scripts/Manager/InGameManager.cs"
			],
			[
				".csv",
				"/Users/luzexi/Desktop/work/wcat/client/WcatUnity/Assets/App/Resources/Message/Common_msg.csv"
			],
			[
				"ui_downloa",
				"App_China/Script/UI/UI_Download_reward.cs"
			],
			[
				"ui_me",
				"Scripts/UI/UI_Menu.cs"
			],
			[
				"downloadmo",
				"App_China/Script/Network/Model/DownloadListModel.cs"
			],
			[
				"stagp",
				"Scripts/State/StageManagerStatePlaying.cs"
			],
			[
				"stagping",
				"Scripts/State/StageManagerStatePlaying.cs"
			],
			[
				"uitopm",
				"Scripts/UI/UI_TopMenu.cs"
			],
			[
				"uimen",
				"Scripts/UI/UI_Menu.cs"
			],
			[
				"uidown",
				"App_China/Script/UI/UI_DownLoad_All.cs"
			],
			[
				"ui_donw",
				"App_China/Script/UI/UI_Download_reward.cs"
			],
			[
				"network",
				"Scripts/Network/NetworkManager_Asset.cs"
			],
			[
				"reward",
				"App_China/Script/UI/UI_Download_reward.cs"
			],
			[
				"uiingamep",
				"Scripts/UI/InGame/UI_InGamePauseMenu.cs"
			],
			[
				"ui_ingame",
				"Scripts/UI/InGame/UI_InGame.cs"
			],
			[
				"ui_ingamep",
				"Scripts/UI/InGame/UI_InGamePauseMenu.cs"
			],
			[
				"glo",
				"Scripts/Manager/GlobalDataManager.cs"
			],
			[
				"ui_ingamem",
				"Scripts/UI/InGame/UI_InGamePauseMenu.cs"
			],
			[
				"ui_down",
				"App_China/Script/UI/UI_DownLoad_All.cs"
			],
			[
				"stagep",
				"Scripts/State/StageManagerStatePlaying.cs"
			],
			[
				"assetver",
				"Scripts/Network/Model/AssetBundleVersionModel.cs"
			],
			[
				"out",
				"Scripts/Manager/OutGameManager.cs"
			],
			[
				"basemo",
				"Scripts/Network/Model/BaseModel.cs"
			],
			[
				"assetmodel",
				"Scripts/Network/Model/AssetModel.cs"
			],
			[
				"ui_download",
				"App_China/Script/UI/UI_DownLoad_All.cs"
			],
			[
				"uiingam",
				"Scripts/UI/InGame/UI_InGame.cs"
			],
			[
				"questcom",
				"AI System/Scripts/Actions/Quest/CompleteQuest.cs"
			],
			[
				"stagemanagerstatecl",
				"Scripts/State/StageManagerStateStageClear.cs"
			],
			[
				"resources",
				"Scripts/Manager/ResourceManager.cs"
			],
			[
				"ingamemanager",
				"Scripts/Manager/InGameManager.cs"
			],
			[
				"stageman",
				"Scripts/Manager/StageManager_Pop.cs"
			],
			[
				"ingameman",
				"Scripts/Manager/InGameManager.cs"
			],
			[
				"ui_download_re",
				"App_China/Script/UI/UI_Download_reward.cs"
			],
			[
				"uidownloadr",
				"App_China/Script/UI/UI_Download_reward.cs"
			],
			[
				"uigame",
				"Scripts/UI/InGame/UI_InGame.cs"
			],
			[
				"networkm",
				"Scripts/Network/NetworkManager_Asset.cs"
			],
			[
				"uimenu",
				"Scripts/UI/UI_Menu.cs"
			],
			[
				"stagemanagerstateplaying",
				"Scripts/State/StageManagerStatePlaying.cs"
			],
			[
				"ingame",
				"Scripts/Manager/InGameManager_Logo.cs"
			],
			[
				"ui_do",
				"App_China/Script/UI/UI_Download_reward.cs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 252.0,
	"status_bar_visible": true
}
